<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nevron.Nov.Chart</name>
    </assembly>
    <members>
        <member name="T:Nevron.Nov.Chart.NAxisElement">
            <summary>
            Base class for the axis reference and axis stripe elements
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisElement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.Text">
            <summary>
            Gets or sets the text of the reference line
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.TextAlignment">
            <summary>
            Gets or sets the text alignment of the reference line
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.TextStyle">
            <summary>
            Gets or sets the text style of the reference line
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.PaintAfterChartContent">
            <summary>
            Whether to paint the element after the chart content or before it
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.ShowAtWalls">
            <summary>
            Gets or set a bitmask controlling the walls this grid line is allow to show at when visible
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisElement.ReferenceRanges">
            <summary>
            Gets or sets the reference ranges of this line
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisElement.GetShowAtWall(Nevron.Nov.Chart.ENChartWall)">
            <summary>
            Gets whether to show the element at the chart wall
            </summary>
            <param name="chartWall"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisElement.SetShowAtWall(Nevron.Nov.Chart.ENChartWall,System.Boolean)">
            <summary>
            Sets or clears the flag for the specfied wall
            </summary>
            <param name="chartWall"></param>
            <param name="show"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisElement.OnChanged(Nevron.Nov.Dom.NChangeData)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.NAxisElementSchema">
            <summary>
            Refrence to the axis element schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.ReferenceRangesChild">
            <summary>
            Reference to the reference ranges child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.TextProperty">
            <summary>
            Reference to the text property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.TextAlignmentProperty">
            <summary>
            Reference to the text alignment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.TextStyleProperty">
            <summary>
            Reference to the text style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.PaintAfterChartContentProperty">
            <summary>
            Reference to the paint after series property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElement.ShowAtWallsProperty">
            <summary>
            Reference to the ShowAtWalls property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisElementCollection`1">
            <summary>
            Represents a collection of axis reference lines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisElementCollection`1.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisElementCollection`1.NAxisElementCollectionSchema">
            <summary>
            Schema associated with NAxisElementCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisReferenceLine">
            <summary>
            Represents an axis reference line
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceLine.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceLine.Value">
            <summary>
            Gets or sets the value of the reference line
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceLine.IncludeValueInAxisRange">
            <summary>
            Gets or sets whether to include the value of the reference line to the axis range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceLine.Fill">
            <summary>
            Gets or sets the fill of the reference line, when display mode is set to Plane
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceLine.Stroke">
            <summary>
            Gets or sets the stroke of the reference line
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceLine.DisplayMode">
            <summary>
            Gets or sets the display mode of the reference line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.NAxisReferenceLineSchema">
            <summary>
            Reference to the axis reference range schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.ValueProperty">
            <summary>
            Reference to the value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.IncludeValueInAxisRangeProperty">
            <summary>
            Reference to the value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.StrokeProperty">
            <summary>
            Reference to the stroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLine.DisplayModeProperty">
            <summary>
            Reference to the display mode property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisReferenceLineCollection">
            <summary>
            Represents a collection of axis reference lines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceLineCollection.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceLineCollection.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to invalidate the chart when a  child is inserted
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceLineCollection.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Overriden to invalidate the chart when a  child is removed
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceLineCollection.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Overriden to cache a reference to the chart
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceLineCollection.NAxisReferenceLineCollectionSchema">
            <summary>
            Schema associated with NAxisReferenceLineCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisReferenceRange">
            <summary>
            Represents a range on a reference axis.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceRange.#ctor(Nevron.Nov.Chart.NChartAxis,Nevron.Nov.Graphics.NRange)">
            <summary>
            Initializer constructor
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceRange.AxisRef">
            <summary>
            Gets or sets a reference to the axis which this axis will cross
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceRange.Axis">
            <summary>
            Gets or sets the axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisReferenceRange.Range">
            <summary>
            Gets or sets the reference axis range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceRange.NAxisReferenceRangeSchema">
            <summary>
            Reference to the chart axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceRange.RangeProperty">
            <summary>
            Reference to the range property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceRange.AxisRefProperty">
            <summary>
            Reference to the axis ref property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisReferenceRangeCollection">
            <summary>
            Represents a collection of axis reference ranges
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisReferenceRangeCollection.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisReferenceRangeCollection.NAxisReferenceRangeCollectionSchema">
            <summary>
            Schema associated with NAxisReferenceRangeCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisStripe">
            <summary>
            Represents an axis stripe
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisStripe.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisStripe.Range">
            <summary>
            Gets or sets the range of the stripe
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisStripe.IncludeRangeBeginInAxisRange">
            <summary>
            Gets or sets whether to include the value of the reference line to the axis range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisStripe.IncludeRangeEndInAxisRange">
            <summary>
            Gets or sets whether to include the value of the reference line to the axis range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisStripe.Fill">
            <summary>
            Gets or sets the stroke of the reference line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripe.NAxisStripeSchema">
            <summary>
            Reference to the chart axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripe.RangeProperty">
            <summary>
            Reference to the value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripe.IncludeRangeBeginInAxisRangeProperty">
            <summary>
            Reference to the IncludeRangeBeginInAxisRange property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripe.IncludeRangeEndInAxisRangeProperty">
            <summary>
            Reference to the IncludeRangeEndInAxisRange property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripe.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisStripeCollection">
            <summary>
            Represents a collection of axis stripes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisStripeCollection.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisStripeCollection.NAxisStripeCollectionSchema">
            <summary>
            Schema associated with NAxisStripeCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisCrossing">
            <summary>
            Represents a crossing between two axes. This is the base class for all axis crossing types.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisCrossing.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisCrossing.#ctor(Nevron.Nov.Chart.NChartAxis)">
            <summary>
            Initializer constructor
            </summary>
            <param name="crossAxis"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisCrossing.CrossAxisRef">
            <summary>
            Gets or sets a reference to the axis which this axis will cross
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisCrossing.CrossAxis">
            <summary>
            Gets or sets the axis which this axis will cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisCrossing.NAxisCrossingSchema">
            <summary>
            Reference to the cross axis crosssing schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisCrossing.CrossAxisRefProperty">
            <summary>
            Reference to the cross axis ref property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NModelAxisCrossing">
            <summary>
            Represents a cross point between two axes in scale model coordinates.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NModelAxisCrossing.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NModelAxisCrossing.#ctor(Nevron.Nov.Chart.NChartAxis,System.Double,Nevron.Nov.Chart.ENAxisCrossAlignment)">
            <summary>
            Initializer constructor
            </summary>
            <param name="crossAxis"></param>
            <param name="offset"></param>
            <param name="alignment"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NModelAxisCrossing.Offset">
            <summary>
            Gets or sets the offset
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NModelAxisCrossing.Alignment">
            <summary>
            Gets or sets the alignment of the crossing
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelAxisCrossing.NModelAxisCrossingSchema">
            <summary>
            Reference to the model axis crossing 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelAxisCrossing.OffsetProperty">
            <summary>
            Reference to the offset property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelAxisCrossing.AlignmentProperty">
            <summary>
            Reference to the alignment property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueAxisCrossing">
            <summary>
            Represents a crossing point between two axes in scale value coordinates.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueAxisCrossing.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueAxisCrossing.#ctor(Nevron.Nov.Chart.NChartAxis,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="crossAxis"></param>
            <param name="value"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueAxisCrossing.Value">
            <summary>
            Gets or sets the cross value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueAxisCrossing.NValueAxisCrossingSchema">
            <summary>
            Reference to the value axis crossing 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueAxisCrossing.ValueProperty">
            <summary>
            Reference to the cross value property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianAxisAnchor">
            <summary>
            The base for all cartesian chart anchors
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisAnchor.#ctor(System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxisAnchor.NCartesianAxisAnchorSchema">
            <summary>
            Schema associated with NCartesianAxisAnchor
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCrossCartesianAxisAnchor">
            <summary>
            Base class for value and model cross axis anchors.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.#ctor(Nevron.Nov.Chart.ENCartesianAxisOrientation,Nevron.Nov.Chart.ENScaleOrientation,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="axisOrientation"></param>
            <param name="scaleOrientation"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.AxisOrientation">
            <summary>
            Gets or sets the axis orientation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.XAxisCrossing">
            <summary>
            Gets or sets the x axis crossing
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.YAxisCrossing">
            <summary>
            Gets or sets the y axis crossing
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.ZAxisCrossing">
            <summary>
            Gets or sets the z axis crossing
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.NCrossCartesianAxisAnchorSchema">
            <summary>
            Reference to the cross cartesian anchor schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.AxisOrientationProperty">
            <summary>
            Reference to the axis orientation property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.XAxisCrossingProperty">
            <summary>
            The x axis crossing 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.YAxisCrossingProperty">
            <summary>
            The y axis crossing
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossCartesianAxisAnchor.ZAxisCrossingProperty">
            <summary>
            The z axis crossing
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDockCartesianAxisAnchor">
            <summary>
            Docks a chart axis to one of the four chart axis dock zones (Left, Top, Right or Bottom), thereby reducing the 
            space avaialable for the chart content.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockCartesianAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockCartesianAxisAnchor.#ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockCartesianAxisAnchor.#ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockCartesianAxisAnchor.#ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone,System.Boolean,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockCartesianAxisAnchor.#ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone,System.Boolean,Nevron.Nov.Chart.ENScaleOrientation,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
            <param name="scaleOrientation"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockCartesianAxisAnchor.DockZone">
            <summary>
            Gets or sets the axis position (zone) the axis is placed into
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockCartesianAxisAnchor.BeforeSpace">
            <summary>
            Specifies spacing of the level before the other levels in the zone (if any)
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockCartesianAxisAnchor.AfterSpace">
            <summary>
            Specifies spacing that should be leaved after the level of the axis before other 
            levels are added in the zone.
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockCartesianAxisAnchor.CreateNewZoneLevel">
            <summary>
            Gets or sets a value indicating whether this anchor will create a new 
            zone level for the axis or use the last created one.
            </summary>
            <remarks>
            If there are no levels in the zone the anchor will always create a zone 
            level. Note that the BeforeSpace and AfterSpace properties depend on the 
            value of this property.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockCartesianAxisAnchor.NDockCartesianAxisAnchorSchema">
            <summary>
            Schema associated with NDockCartesianAxisAnchor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockCartesianAxisAnchor.DockZoneProperty">
            <summary>
            Reference to DockZone propeperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockCartesianAxisAnchor.CreateNewZoneLevelProperty">
            <summary>
            Reference to CreateNewZoneLevel propeperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockCartesianAxisAnchor.BeforeSpaceProperty">
            <summary>
            Reference to BeforeSpace propeperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockCartesianAxisAnchor.AfterSpaceProperty">
            <summary>
            Reference to AfterSpace property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianAxis">
            <summary>
            Represents a cartesian chart axis.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.Anchor">
            <summary>
            Gets or sets the anchor controlling the placement of the gauge axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.ShowScrollbarWhenZoomed">
            <summary>
            Gets / sets whether the axis should show a scrollbar when zoomed (axis paging is enabled)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.AutoScrollbarSmallChange">
            <summary>
            Gets or sets whether the axis should configure the small change of the scrollbar automatically
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.AutoSmallChangeSteps">
            <summary>
            Gets or sets the auto small change steps 
            </summary>
            <remarks>
            This value is used to calculate the automatic scrollbar small step. Bigger values result in smaller automatic step.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.MinAutoSmallChange">
            <summary>
            Gets or sets the minimum automatic small change
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxis.Scrollbar">
            <summary>
            Gets the axis scrollbar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxis.ValidateMeasure">
            <summary>
            Validates the measure
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.NCartesianAxisSchema">
            <summary>
            Reference to the cartesian axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.AnchorProperty">
            <summary>
            Reference to the anchor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.ShowScrollbarWhenZoomedProperty">
            <summary>
            Reference to the ShowScrollbarWhenZoomed property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.AutoScrollbarSmallChangeProperty">
            <summary>
            Reference to the AutoScrollbarSmallChange property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.AutoSmallChangeStepsProperty">
            <summary>
            Reference to the AutoSmallChangeSteps property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.MinAutoSmallChangeProperty">
            <summary>
            Reference to the MinAutoSmallChangeProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxis.ScrollbarTransformChild">
            <summary>
            Reference to the range slider child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianAxisCollection">
            <summary>
            Represents a collection of cartesian axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianAxisCollection.Item(Nevron.Nov.Chart.ENCartesianAxis)">
            <summary>
            Gets the predefined cartesian axis
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisCollection.GetFirstAxisWithOrientation(Nevron.Nov.Chart.ENCartesianAxisOrientation)">
            <summary>
            Gets the first axis with the specified orientation
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisCollection.GetSecondAxisWithOrientation(Nevron.Nov.Chart.ENCartesianAxisOrientation)">
            <summary>
            Gets the second axis with the specified orientation
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianAxisCollection.GetAxisWithOrientation(Nevron.Nov.Chart.ENCartesianAxisOrientation,System.Int32)">
            <summary>
            Gets the axis with specfied orientation at the n-th place in the collection
            </summary>
            <param name="orientation"></param>
            <param name="axisNumber">1 for the first axis, 2 for the second with the specified orientation etc.</param>
            <returns></returns>
            <remarks>
            This method can be used to find the third, fourth etc. axis with the specified orientation orientation
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianAxisCollection.NCartesianAxisCollectionSchema">
            <summary>
            Schema associated with NCartesianAxisCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianChart">
            <summary>
            Represents a cartesian chart
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.#ctor(Nevron.Nov.Chart.ENPredefinedCartesianAxis)">
            <summary>
            Initializer constructor
            </summary>
            <param name="predefinedCartesianAxis"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.Series">
            <summary>
            Gets or sets the series attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.Axes">
            <summary>
            Gets or sets the axes attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.Walls">
            <summary>
            Gets or sets the walls attached to this child
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.EnableAutomaticAxisPosition">
            <summary>
            Gets or sets whether to enable automatic axis positioning
            </summary>
            <remarks>
            Automatic axis positioning ensures the best visibility for axes and walls and is enabled by default
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.MinAlignmentDockZoneMargins">
            <summary>
            Gets or sets the min alignment dock zone margins
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.FitMode">
            <summary>
            Gets or sets the chart fit mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.Aspect">
            <summary>
            Gets or sets the chart aspect in case the FitMode property is set to Aspect or AspectWithAxes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.Orientation">
            <summary>
            Gets or sets the chart orientation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.VisualAids">
            <summary>
            Gets or sets the collection of visual aids. 
            The content of this collection is automatically updated with visual aids from the tools and others.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.ViewPlotBounds">
            <summary>
            Gets the plot bounds in view coordinates
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.ModelWidth">
            <summary>
            Gets or sets the 3D model width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.ModelHeight">
            <summary>
            Gets or sets the 3D model height
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianChart.ModelDepth">
            <summary>
            Gets or sets the 3D model depth
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.SetPredefinedCartesianAxes(Nevron.Nov.Chart.ENPredefinedCartesianAxis)">
            <summary>
            Creates a predefined axis configuration 
            </summary>
            <param name="predefinedCartesianAxis"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.AddCustomAxis(Nevron.Nov.Chart.ENCartesianAxisOrientation)">
            <summary>
            Adds a custom axis to the chart
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.CreateDockedAxis(Nevron.Nov.Chart.ENCartesianAxisDockZone,Nevron.Nov.Chart.ENScaleType)">
            <summary>
            Helper method that creates a docked axis
            </summary>
            <param name="dockZone"></param>
            <param name="scaleType"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.TransformLogicalToView(Nevron.Nov.Graphics.NPoint,Nevron.Nov.Chart.NCartesianAxis,Nevron.Nov.Chart.NCartesianAxis)">
            <summary>
            Transforms a point from logical coordinates to view coordinates
            </summary>
            <param name="point"></param>
            <param name="horizontalAxis"></param>
            <param name="verticalAxis"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.TansformViewToLogical(Nevron.Nov.Graphics.NPoint,Nevron.Nov.Chart.NCartesianAxis,Nevron.Nov.Chart.NCartesianAxis)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="horizontalAxis"></param>
            <param name="verticalAxis"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.TransformModelToView(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Transforms a model coordinate to view
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.TransformViewToModel(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Transforms a view coordinate to model
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.AccumulateDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            Accumulates the display children
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.MeasureContent(System.Boolean)">
            <summary>
            Measures the element content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.InvalidateArrange(System.Object)">
            <summary>
            Overriden to invalidate the view surface in case this arrange has changed
            </summary>
            <param name="hint"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the content of this element.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Implements 2D paint functionality
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianChart.DoPrePaint3DContent2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the 3D 2D content (mainly texts)
            </summary>
            <param name="paintVisitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.NCartesianChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.AxesChild">
            <summary>
            Reference to the Axes child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.WallsChild">
            <summary>
            Reference to the Walls child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.SeriesChild">
            <summary>
            Reference to the Series child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.AspectProperty">
            <summary>
            Reference to the aspect property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.FitModeProperty">
            <summary>
            Reference to the fit mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.EnableAutomaticAxisPositionProperty">
            <summary>
            Reference to the enable automatic axis position
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.ModelWidthProperty">
            <summary>
            Reference to the model dimensions
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.ModelHeightProperty">
            <summary>
            Reference to the model dimensions
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.ModelDepthProperty">
            <summary>
            Reference to the model dimensions
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.OrientationProperty">
            <summary>
            Reference to the orientation property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.VisualAidsChild">
            <summary>
            Reference to the VisualAidsChild child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.defaultCartesianChartFitMode">
            <summary>
            Default fit mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianChart.defaultAspect">
            <summary>
            Default aspect
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartWall">
            <summary>
            Represents a cartesian chart wall.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartWall.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWall.VisibilityMode">
            <summary>
            Gets or sets the wall visibility mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWall.ChartWall">
            <summary>
            Gets the chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWall.Width">
            <summary>
            Gets or sets the width of the chart wall.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWall.Fill">
            <summary>
            Gets or sets the fill of the wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWall.Border">
            <summary>
            Gets or sets the border of the wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.NChartWallSchema">
            <summary>
            Reference to the chart wall schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.VisibilityModeProperty">
            <summary>
            Reference to the VisibilityMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.WidthProperty">
            <summary>
            Reference to the Width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.FillProperty">
            <summary>
            Reference to the Fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.BorderProperty">
            <summary>
            Reference to the Border property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWall.ChartWallProperty">
            <summary>
            Reference to the Chart wall property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartWallContainer">
            <summary>
            Represents a collection of walls
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartWallContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Left">
            <summary>
            Gets the left chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Right">
            <summary>
            Gets the right chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Front">
            <summary>
            Gets the front chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Back">
            <summary>
            Gets the back chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Top">
            <summary>
            Gets the top chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Bottom">
            <summary>
            Gets the bottom chart wall
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartWallContainer.Item(Nevron.Nov.Chart.ENChartWall)">
            <summary>
            Gets the specified chart wall
            </summary>
            <param name="wall"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.NChartWallContainerSchema">
            <summary>
            Schema associated with NChartWallCollection
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.LeftChild">
            <summary>
            Reference to the left chart wall child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.RightChild">
            <summary>
            Reference to the right chart wall child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.FrontChild">
            <summary>
            Reference to the front chart wall child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.BackChild">
            <summary>
            Reference to the back chart wall child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.TopChild">
            <summary>
            Reference to the top chart wall child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartWallContainer.BottomChild">
            <summary>
            Reference to the bottom chart wall child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFunnelChart">
            <summary>
            Represents a funnel chart
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelChart.Series">
            <summary>
            Gets or sets the series attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelChart.FitMode">
            <summary>
            Gets or sets the funnel chart fit mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelChart.Aspect">
            <summary>
            Gets or sets the funnel aspect in case the fit mode is set to ENFunnelChartFitMode.Aspect
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the chart
            </summary>
            <param name="contentArea"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the funnel in 2D
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelChart.DoPrePaint3DContent2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelChart.NFunnelChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelChart.SeriesChild">
            <summary>
            Reference to the Series child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelChart.MinSpiderLabelDistanceProperty">
            <summary>
            Reference to the min spider label distance property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelChart.FitModeProperty">
            <summary>
            Reference to the funnel fit mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelChart.AspectProperty">
            <summary>
            Reference to the funnel aspect property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisCollection`1">
            <summary>
            Represents a collection of cartesian axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisCollection`1.NAxisCollectionSchema">
            <summary>
            Schema associated with NAxisCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartAxisCollection`1">
            <summary>
            Represents a collection of cartesian axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxisCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxisCollection`1.NChartAxisCollectionSchema">
            <summary>
            Schema associated with NAxisCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieChart">
            <summary>
            Represents a pie chart
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.Series">
            <summary>
            Gets or sets the series attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.DockSpiderLabelsToSides">
            <summary>
            Whether to dock the spider labels to the chart sides
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.MinSpiderLabelDistance">
            <summary>
            Gets or sets the minimum spider label distance
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.BeginRadiusPercent">
            <summary>
            Gets or sets the begin radius percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.EndRadiusPercent">
            <summary>
            Gets or sets the end radius percent property
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.BeginAngle">
            <summary>
            Gets / sets the begin angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.SweepAngle">
            <summary>
            Gets / sets the sweep angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.ModelRadius">
            <summary>
            Gets or sets the model radius
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieChart.ModelDepth">
            <summary>
            Gets or sets the model depth
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the chart
            </summary>
            <param name="contentArea"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieChart.DoPrePaint3DContent2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the 3D 2D content (mainly texts)
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.NPieChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.SeriesChild">
            <summary>
            Reference to the Series child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.BeginRadiusPercentProperty">
            <summary>
            Reference to the begin radius percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.EndRadiusPercentProperty">
            <summary>
            Reference to the end radius percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.BeginAngleProperty">
            <summary>
            Reference to the begin angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.SweepAngleProperty">
            <summary>
            Reference to the sweep angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.DockSpiderLabelsToSidesProperty">
            <summary>
            Reference to the dock spider labels to sides property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.MinSpiderLabelDistanceProperty">
            <summary>
            Reference to the min spider label distance property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.ModelRadiusProperty">
            <summary>
            Reference to the ModelRadius property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieChart.ModelDepthProperty">
            <summary>
            Reference to the ModelDepth property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCrossPolarAxisAnchor">
            <summary>
            Represents a cross polar axis anchor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCrossPolarAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCrossPolarAxisAnchor.#ctor(Nevron.Nov.Chart.NAxisCrossing,Nevron.Nov.Chart.ENPolarAxisOrientation,Nevron.Nov.Chart.ENScaleOrientation)">
            <summary>
            Initializer constructor
            </summary>
            <param name="axisCrossing"></param>
            <param name="axisOrientation"></param>
            <param name="scaleOrientation"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCrossPolarAxisAnchor.#ctor(Nevron.Nov.Chart.ENPolarAxisOrientation,Nevron.Nov.Chart.ENScaleOrientation)">
            <summary>
            Initializer constructor
            </summary>
            <param name="axisOrientation"></param>
            <param name="scaleOrientation"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossPolarAxisAnchor.AxisOrientation">
            <summary>
            Gets or sets the axis orienation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCrossPolarAxisAnchor.Crossing">
            <summary>
            Gets or sets a reference to the axis which this axis will cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossPolarAxisAnchor.NCrossPolarAxisAnchorSchema">
            <summary>
            Reference to the polar axis anchor schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossPolarAxisAnchor.AxisOrientationProperty">
            <summary>
            Reference to the paint reflection property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCrossPolarAxisAnchor.CrossingProperty">
            <summary>
            Reference to the cross property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDockPolarAxisAnchor">
            <summary>
            Represents a dock polar axis anchor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockPolarAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockPolarAxisAnchor.#ctor(Nevron.Nov.Chart.ENPolarAxisDockZone)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockPolarAxisAnchor.#ctor(Nevron.Nov.Chart.ENPolarAxisDockZone,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockPolarAxisAnchor.#ctor(Nevron.Nov.Chart.ENPolarAxisDockZone,System.Boolean,Nevron.Nov.Chart.ENScaleOrientation)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
            <param name="scaleOrientation"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockPolarAxisAnchor.DockZone">
            <summary>
            Gets or sets the polar axis dock zone
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockPolarAxisAnchor.BeforeSpace">
            <summary>
            Specifies spacing of the level before the other levels in the zone (if any)
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockPolarAxisAnchor.AfterSpace">
            <summary>
            Specifies spacing that should be leaved after the level of the axis before other 
            levels are added in the zone.
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockPolarAxisAnchor.CreateNewZoneLevel">
            <summary>
            Gets or sets a value indicating whether this anchor will create a new 
            zone level for the axis or use the last created one.
            </summary>
            <remarks>
            If there are no levels in the zone the anchor will always create a zone 
            level. Note that the BeforeSpace and AfterSpace properties depend on the 
            value of this property.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockPolarAxisAnchor.NDockPolarAxisAnchorSchema">
            <summary>
            Reference to the polar axis anchor schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockPolarAxisAnchor.DockZoneProperty">
            <summary>
            Reference to the dock zone property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockPolarAxisAnchor.CreateNewZoneLevelProperty">
            <summary>
            Reference to the create new zone level property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockPolarAxisAnchor.BeforeSpaceProperty">
            <summary>
            Reference to the before space property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockPolarAxisAnchor.AfterSpaceProperty">
            <summary>
            Reference to the after space property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarAxisAnchor">
            <summary>
            Base for all polar axis anchors (cross and dock)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxisAnchor.NPolarAxisAnchorSchema">
            <summary>
            Reference to the polar axis anchor schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxisAnchor.PaintReflectionProperty">
            <summary>
            Reference to the paint reflection property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarAxis">
            <summary>
            Represents a polar chart axis.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAxis.Anchor">
            <summary>
            Gets or sets the anchor controlling the placement of the gauge axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAxis.PaintReflection">
            <summary>
            Controls whether the axis will paint the reflection.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxis.NPolarAxisSchema">
            <summary>
            Reference to the polar axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxis.AnchorProperty">
            <summary>
            Reference to the anchor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxis.PaintReflectionProperty">
            <summary>
            Reference to the paint reflection property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarAxisCollection">
            <summary>
            Represents a collection of cartesian axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxisCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAxisCollection.Item(Nevron.Nov.Chart.ENPolarAxis)">
            <summary>
            Gets the predefined cartesian axis
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxisCollection.GetFirstAxisWithOrientation(Nevron.Nov.Chart.ENPolarAxisOrientation)">
            <summary>
            Gets the first axis with the specified orientation
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxisCollection.GetSecondAxisWithOrientation(Nevron.Nov.Chart.ENPolarAxisOrientation)">
            <summary>
            Gets the second axis with the specified orientation
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAxisCollection.GetAxisWithOrientation(Nevron.Nov.Chart.ENPolarAxisOrientation,System.Int32)">
            <summary>
            Gets the axis with specfied orientation at the n-th place in the collection
            </summary>
            <param name="orientation"></param>
            <param name="axisNumber">1 for the first axis, 2 for the second with the specified orientation etc.</param>
            <returns></returns>
            <remarks>
            This method can be used to find the third, fourth etc. axis with the specified orientation orientation
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAxisCollection.NPolarAxisCollectionSchema">
            <summary>
            Schema associated with NPolarAxisCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarChart">
            <summary>
            Represents a cartesian chart
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarChart.Series">
            <summary>
            Gets or sets the series attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarChart.DockZonesOffset">
            <summary>
            Gets or sets the offset of the dock zones from the outer polar rim
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarChart.Axes">
            <summary>
            Gets or sets the axes attached to this gauge panel
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.SetPredefinedPolarAxes(Nevron.Nov.Chart.ENPredefinedPolarAxes)">
            <summary>
            Creates a predefined axis configuration 
            </summary>
            <param name="predefinedPolarAxes"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.AddCustomAxis(Nevron.Nov.Chart.ENPolarAxisOrientation)">
            <summary>
            Adds a custom axis to the chart
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.CreateDockedAngleAxis(Nevron.Nov.Chart.ENPolarAxisDockZone)">
            <summary>
            Helper method that creates a docked axis
            </summary>
            <param name="dockZone"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.CreateDockedAxis(Nevron.Nov.Chart.ENPolarAxisDockZone,Nevron.Nov.Chart.ENScaleType)">
            <summary>
            Helper method that creates a docked axis
            </summary>
            <param name="dockZone"></param>
            <param name="scaleType"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.CreateCrosseddAxis(Nevron.Nov.Chart.ENScaleType)">
            <summary>
            Helper method that creates a docked axis
            </summary>
            <param name="scaleType"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.MeasureContent(System.Boolean)">
            <summary>
            Measures the element content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the content of this element.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarChart.NPolarChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarChart.SeriesChild">
            <summary>
            Reference to the Series child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarChart.AxesChild">
            <summary>
            Reference to the Axes child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarChart.DockZonesOffsetProperty">
            <summary>
            Refrence to the DockZonesOffset property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadialChart">
            <summary>
            Represents a radial chart. Base class for polar and radar charts
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialChart.BeginAngle">
            <summary>
            Gets or sets the begin angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialChart.SweepAngle">
            <summary>
            Gets or sets the sweep angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialChart.InnerRadius">
            <summary>
            Gets or sets the inner radius
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialChart.AccumulateDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialChart.NRadialChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialChart.BeginAngleProperty">
            <summary>
            Reference to the begin angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialChart.SweepAngleProperty">
            <summary>
            Reference to the sweep angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialChart.InnerRadiusProperty">
            <summary>
            Reference to the inner radius property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarAxisAnchor">
            <summary>
            Base for all polar axis anchors (cross and dock)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxisAnchor.UseCustomAngle">
            <summary>
            Gets or sets whether to use a custom angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxisAnchor.CustomAngle">
            <summary>
            Gets or sets the custom angle of the axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxisAnchor.NRadarAxisAnchorSchema">
            <summary>
            Reference to the polar axis anchor schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxisAnchor.UseCustomAngleProperty">
            <summary>
            Reference to the use custom angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxisAnchor.CustomAngleProperty">
            <summary>
            Reference to the custom angle property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarAxis">
            <summary>
            Represents a radar chart axis.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.Anchor">
            <summary>
            Gets or sets the anchor controlling the placement of the gauge axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitleOffset">
            <summary>
            Gets or sets the title offset
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitleMaxWidth">
            <summary>
            Gets or sets the title max width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitlePositionMode">
            <summary>
            Gets or sets the title position mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitleAngle">
            <summary>
            Gets or sets the title angle 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitleAutomaticAlignment">
            <summary>
            Gets or sets whether the title should use automatic alignment
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAxis.TitleTextStyle">
            <summary>
            Gets or sets the title text style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.NRadarAxisSchema">
            <summary>
            Reference to the radar axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.AnchorProperty">
            <summary>
            Reference to the anchor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleProperty">
            <summary>
            Reference to the title property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleOffsetProperty">
            <summary>
            Reference to the title offset property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleMaxWidthProperty">
            <summary>
            Reference to the title max width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitlePositionModeProperty">
            <summary>
            Reference to the title position mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleAngleProperty">
            <summary>
            Reference to the title angle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleAutomaticAlignmentProperty">
            <summary>
            Reference to the title automatic alignment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxis.TitleTextStyleProperty">
            <summary>
            Reference to the title text style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarAxisCollection">
            <summary>
            Represents a collection of cartesian axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAxisCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAxisCollection.NRadarAxisCollectionSchema">
            <summary>
            Schema associated with NRadarAxisCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarChart">
            <summary>
            Represents a radar chart
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarChart.Series">
            <summary>
            Gets or sets the series attached to this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarChart.RadarMode">
            <summary>
            Gets or sets the radar mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarChart.Axes">
            <summary>
            Gets or sets the axes attached to this gauge panel
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarChart.MeasureContent(System.Boolean)">
            <summary>
            Measures the element content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the content of this element.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarChart.NRadarChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarChart.SeriesChild">
            <summary>
            Reference to the Series child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarChart.RadarModeProperty">
            <summary>
            Reference to the RadarMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarChart.AxesChild">
            <summary>
            Reference to the Axes child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGroupTreeMapNode">
            <summary>
            Represents a value tree map node
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.ChildNodes">
            <summary>
            Gets or sets the child nodes of this node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.SortOrder">
            <summary>
            Gets or sets the child nodes sort order
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.HorizontalFillMode">
            <summary>
            Gets or sets the horizontal fill mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.VerticalFillMode">
            <summary>
            Gets or sets teh vertical fill mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.ChangePaletteMode">
            <summary>
            Gets or sets the change palette mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.Palette">
            <summary>
            Gets or sets the palette
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNode.LegendView">
            <summary>
            Gets or sets the legend view
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.ValidateMeasure">
            <summary>
            Validates the measure of the this node
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.ArrangeCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.OnAttributeChanged(Nevron.Nov.Dom.NAttribute)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNode.OnChanged(Nevron.Nov.Dom.NChangeData)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.NGroupTreeMapNodeSchema">
            <summary>
            Reference to the NGroupTreeMapNode schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.ChildNodesChild">
            <summary>
            Reference ChildNodes child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.SortOrderProperty">
            <summary>
            Reference to the Sort Order property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.HorizontalFillModeProperty">
            <summary>
            Reference to the HorizontalFillMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.VerticalFillModeProperty">
            <summary>
            Reference to the VerticalFillMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.ChangePaletteModeProperty">
            <summary>
            Reference to the ChangePaletteMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.PaletteProperty">
            <summary>
            Reference to the Palette property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNode.LegendViewProperty">
            <summary>
            Reference to the LegendView property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView">
            <summary>
            Controls the representation of the associated node in the chart legend.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.Mode">
            <summary>
            Gets / sets the mode in which the legend is filled with information about the series.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.ItemBorder">
            <summary>
            Gets or sets the legend item border
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.NGroupTreeMapNodeLegendViewSchema">
            <summary>
            Reference to the NGroupTreeMapNodeLegendView schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.ModeProperty">
            <summary>
            Reference to the Mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGroupTreeMapNodeLegendView.ItemBorderProperty">
            <summary>
            Reference to the ItemBorder propertyu
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTreeMapChart">
            <summary>
            Represents a tree map
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapChart.RootTreeMapNode">
            <summary>
            Gets or sets the root tree map node
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapChart.InvalidateMeasure(System.Object)">
            <summary>
            
            </summary>
            <param name="hint"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Overriden to make the content occupy the content area.
            </summary>
            <param name="ca">The content area.</param>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapChart.m_PaintMessage">
            <summary>
            Paint message 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapChart.NTreeMapChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapChart.RootTreeMapNodeChild">
            <summary>
            Reference to the Root node child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTreeMapNode">
            <summary>
            Base class for all tree map nodes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.LabelTextStyle">
            <summary>
            Gets or sets the label text style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Label">
            <summary>
            Gets or sets the label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Format">
            <summary>
            Gets or sets the label format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.LabelFitModes">
            <summary>
            Gets or set sthe label fit modes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.MinAutoScale">
            <summary>
            Gets or sets the minimum auto scale for texts
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Margins">
            <summary>
            Gets or sets the margins of the node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Padding">
            <summary>
            Gets or sets the padding of the node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Border">
            <summary>
            Gets or sets the border of the node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.BorderThickness">
            <summary>
            Gets or sets the border thickness
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.BackgroundFill">
            <summary>
            Gets or sets the background fill of the node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.Bounds">
            <summary>
            Gets or sets the bounds of this node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.PercentValueFormatter">
            <summary>
            Gets or sets the percent value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.ValueFormatter">
            <summary>
            Gets or sets the value formatter
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.InvalidateMeasure(System.Object)">
            <summary>
            Invalidates the measure
            </summary>
            <param name="hint"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.IsMeasureValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.IsPooledForMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.ValidateMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.IsPooledForArrange">
            <summary>
            Gets whether the element is pooled for arrange validation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTreeMapNode.IsArrangeValid">
            <summary>
            Gets whether the arrange of the element is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.InvalidateArrange(System.Object)">
            <summary>
            Invalidates the element arrange
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.ValidateArrange">
            <summary>
            Called to arrange the element
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.ArrangeCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.OnPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.OnPaintBackground(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the background of the box, which is performed before the custom painting in OnPrePaint.
            </summary>
            <remarks>
            This implementation paints the box background and border.
            </remarks>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.CreateBorderWall(Nevron.Nov.UI.NBorder,Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Creates the border wall of the box.
            </summary>
            <param name="border"></param>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.GetBackgroundFill">
            <summary>
            Gets the background fill of this node
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.GetContentEdge">
            <summary>
            Gets the content edge (inner edge) of the element (in local coordinates),
            provided that the box had the specified width and height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.GetBorderEdge">
            <summary>
            Gets the border edge (border area) of the element (in local coordinates)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.GetPaddingEdge">
            <summary>
            Gets the padding edge (padding area) of the element (in local coordinates)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNode.GetInsets">
            <summary>
            Gets the element insets, which is the sum of the margins, padding and border thickness.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.NTreeMapNodeSchema">
            <summary>
            Reference to the NTreeMapNode schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.BoundsProperty">
            <summary>
            Reference to the Bounds property;
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.LabelTextStyleProperty">
            <summary>
            Reference to the LabelTextStyle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.LabelProperty">
            <summary>
            Reference to the Label property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.FormatProperty">
            <summary>
            Reference to the Format property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.LabelFitModesProperty">
            <summary>
            Reference to the LabelFitModes property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.MinAutoScaleProperty">
            <summary>
            Reference to the MinAutoScale property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.MarginsProperty">
            <summary>
            Reference to the Margins property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.PaddingProperty">
            <summary>
            Reference to the Padding property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.BorderProperty">
            <summary>
            Reference to the Border property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.BorderThicknessProperty">
            <summary>
            Reference to the BorderThickness property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.BackgroundFillProperty">
            <summary>
            Reference to the BackgroundFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.PercentValueFormatterProperty">
            <summary>
            Reference to the PercentValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNode.ValueFormatterProperty">
            <summary>
            Reference to the ValueFormatter property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTreeMapNodeCollection">
            <summary>
            Represents a collection of tree map nodes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNodeCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNodeCollection.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to invalidate the group tree map node
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNodeCollection.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Overriden to invalidate the group tree map node
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NTreeMapNodeCollection.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Overriden to cache a reference to the group tree map node
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NTreeMapNodeCollection.NTreeMapNodeCollectionSchema">
            <summary>
            Schema associated with NTreeMapNodeCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueTreeMapNode">
            <summary>
            Represents a value tree map node
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
            <param name="change"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.#ctor(System.Double,System.Double,System.String,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
            <param name="change"></param>
            <param name="label"></param>
            <param name="fill"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTreeMapNode.Value">
            <summary>
            Gets or sets the value of the tree node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTreeMapNode.Change">
            <summary>
            Gets or sets the change of the tree node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTreeMapNode.ChangeValueType">
            <summary>
            Gets or sets the change value type 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.ValidateMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.ArrangeCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTreeMapNode.GetBackgroundFill">
            <summary>
            Gets the background fill of this node
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTreeMapNode.NValueTreeMapNodeSchema">
            <summary>
            Reference to the NValueTreeMapNode schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTreeMapNode.ValueProperty">
            <summary>
            Reference to the Value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTreeMapNode.ChangeProperty">
            <summary>
            Reference to the Change property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTreeMapNode.ChangeValueTypeProperty">
            <summary>
            Reference to the ChangeValueType property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChart">
            <summary>
            Base class for all types of chart - cartesian, funnel, polar, radar, pie, treemap etc.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.Enable3D">
            <summary>
            Gets or sets whether to enable 3D
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.EnableInteractivity">
            <summary>
            Gets or sets whether to enable intertivity for this chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.Projection">
            <summary>
            Gets or sets the current projection
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.LightModel">
            <summary>
            Gets or sets the current projection
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.LegendRef">
            <summary>
            Gets or sets a reference to the legend this chart displays information on
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChart.Legend">
            <summary>
            Gets or sets the legend on which this chart displays information on
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.CanClip">
            <summary>
            Overriden to return true.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.GetClip">
            <summary>
            Overriden to return the aid geometry bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.GetLocalTo3DSurfaceTransform(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Gets the local to surface transform
            </summary>
            <param name="paintVisitor"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.CalculateProjection(Nevron.Nov.Graphics.NRectangle,Nevron.Nov.Graphics.NVector3DF,Nevron.Nov.Graphics.NVector3DF)">
            <summary>
            Calculates the chart projection
            </summary>
            <param name="contentBounds"></param>
            <param name="sceneDimensions"></param>
            <param name="sceneOffset"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.DoPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.DoPrePaint3DContent2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Paints the 3D 2D content (mainly texts)
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.DoPrePaint2D(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChart.OnUnregistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.m_PaintMessage">
            <summary>
            Paint message 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.NChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.LegendRefProperty">
            <summary>
            Reference to the legend ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.Enable3DProperty">
            <summary>
            Reference to the Enable3D property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.EnableInteractivityProperty">
            <summary>
            Reference to the EnableInteractivity property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.ProjectionProperty">
            <summary>
            Reference to the Projection property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChart.LightModelProperty">
            <summary>
            Reference to the LightModel property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartAxis">
            <summary>
            Base class for all chart axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.SeriesRange">
            <summary>
            Gets the axis series range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.SeriesRangeBegin">
            <summary>
            Gets the series range begin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.SeriesRangeEnd">
            <summary>
            Gets the series range end
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ContentRange">
            <summary>
            Gets the axis content range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ContentRangeBegin">
            <summary>
            Gets the content range begin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ContentRangeEnd">
            <summary>
            Gets the content range end
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ViewRange">
            <summary>
            Gets the axis view range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ViewRangeBegin">
            <summary>
            Gets the view range begin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ViewRangeEnd">
            <summary>
            Gets the view range end
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.PageRange">
            <summary>
            Gets the axis view range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.PageRangeBegin">
            <summary>
            Gets the page range begin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.PageRangeEnd">
            <summary>
            Gets the page range end
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ViewRangeMode">
            <summary>
            Gets or sets the axis range mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.EnablePageRange">
            <summary>
            Gets or sets whether the page range is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.MinPageRangeLength">
            <summary>
            Gets or sets the minimum page range length
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.MinViewRangeValue">
            <summary>
            Gets or sets the min range value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.MaxViewRangeValue">
            <summary>
            Gets or sets the max range value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.MinMargin">
            <summary>
            Gets or sets the minimum margin of the axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.MaxMargin">
            <summary>
            Gets or sets the maximum margin of the axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ClipMode">
            <summary>
            Gets or sets the axis clip mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.Stripes">
            <summary>
            Gets or sets the axis stripes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.ReferenceLines">
            <summary>
            Gets or sets the axis reference lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.SynchronizedAxes">
            <summary>
            Gets or sets the alignment targets
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartAxis.HitTestAxisWallDecorations">
            <summary>
            Whether axis wall decorations are hit testable or considered part of the wall.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.SetFixedRange(System.Double,System.Double)">
            <summary>
            Fixes the axis range to the specified min / max values. 
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <remarks>
            This is a helper method that will set the ViewRangeMode to FixedRange and modify the MinViewRangeValue and MaxViewRangeValue properties
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.Scroll(System.Double)">
            <summary>
            Scrolls the axis with the specified offset
            </summary>
            <param name="offset">in model coordinates</param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.ZoomIn(Nevron.Nov.Graphics.NRange)">
            <summary>
            Zooms in the axis to the specified axis range
            </summary>
            <param name="axisRange"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.ZoomOut(Nevron.Nov.Graphics.NRange)">
            <summary>
            Zooms out the axis in order to display the specified axis range
            </summary>
            <param name="axisRange"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.OnRegistered">
            <summary>
            Called after the document node is registered in its owner document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartAxis.OnUnregistered">
            <summary>
            Called after the document node is unregistered from its owner document.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.NChartAxisSchema">
            <summary>
            Reference to the chart axis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ViewRangeModeProperty">
            <summary>
            Reference to the range mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.EnablePageRangeProperty">
            <summary>
            Reference to the EnablePageRange property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.RulerRangeProperty">
            <summary>
            Reference to the RulerRange property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.MinViewRangeValueProperty">
            <summary>
            Reference to the min value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.MaxViewRangeValueProperty">
            <summary>
            Reference to the max value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.MinPageRangeLengthProperty">
            <summary>
            Reference to the MinPageRangeLength property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.MinMarginProperty">
            <summary>
            Reference to the min margin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.MaxMarginProperty">
            <summary>
            Reference to the max margin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.PreferredMarginProperty">
            <summary>
            Reference to the preferred margin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ClipModeProperty">
            <summary>
            Reference to the clip mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.HitTestAxisWallDecorationsProperty">
            <summary>
            Reference to the HitTestAxisWallDecorations property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.SynchronizedAxesProperty">
            <summary>
            Reference to the Targets property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.StripesChild">
            <summary>
            Reference to the stripes child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ReferenceLinesChild">
            <summary>
            Reference to the reference lines child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.SeriesRangeBeginProperty">
            <summary>
            Series range begin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.SeriesRangeEndProperty">
            <summary>
            Series range end property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ContentRangeBeginProperty">
            <summary>
            Reference to the content range begin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ContentRangeEndProperty">
            <summary>
            Reference to the content range end property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ViewRangeBeginProperty">
            <summary>
            Reference to the view range begin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.ViewRangeEndProperty">
            <summary>
            Reference to the view range end property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.PageRangeBeginProperty">
            <summary>
            Reference to the PageRangeBegin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartAxis.PageRangeEndProperty">
            <summary>
            Reference to the PageRangeEnd property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartElement">
            <summary>
            A visual element that serves as base class for elements that can receive and process user input.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseMove">
            <summary>
            Occurs when the mouse is moved inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseDown">
            <summary>
            Occurs when a mouse button is pressed inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseUp">
            <summary>
            Occurs when a mouse button is released inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseWheel">
            <summary>
            Occurs when the mouse wheel is rotated inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseEnter">
            <summary>
            Occurs when the mouse enters a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseIn">
            <summary>
            Occurs when the mouse enters this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseOut">
            <summary>
            Occurs when the mouse leaves this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.MouseLeave">
            <summary>
            Occurs when the mouse leaves a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.GotMouseCapture">
            <summary>
            Occurs when the mouse is captured on a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.CaptureIn">
            <summary>
            Occurs when the mouse capture enters this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.CaptureOut">
            <summary>
            Occurs when the mouse capture leaves this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.LostMouseCapture">
            <summary>
            Occurs when the mouse capture is released from a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.KeyDown">
            <summary>
            Occurs when a keyboard button is pressed inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.KeyUp">
            <summary>
            Occurs when a keyboard button is released inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.InputChar">
            <summary>
            Occurs when a keyboard key(s) gesture is recognized as an Unicode input character, and the focus is inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.GotFocus">
            <summary>
            Occurs when the keyboard is focused on a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.FocusIn">
            <summary>
            Occurs when the keyboard focus enters this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.FocusOut">
            <summary>
            Occurs when the keyboard focus leaves this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.LostFocus">
            <summary>
            Occurs when the keyboard focus is lost by a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragOver">
            <summary>
            Occurs when a Drag-and-Drop data object moves over this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragDrop">
            <summary>
            Occurs when a Drag-and-Drop data object is dropped in this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragEnter">
            <summary>
            Occurs when a Drag-and-Drop data object enters a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragIn">
            <summary>
            Occurs when a Drag-and-Drop data object enters this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragOut">
            <summary>
            Occurs when a Drag-and-Drop data object leaves this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.DragLeave">
            <summary>
            Occurs when a Drag-and-Drop data object leaves a node inside this node subtree
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NChartElement.QueryCommandTarget">
            <summary>
            A bubbling event that bubbles up the NCommandSource ancestors chain and results in command target element for Execute and UpdateSource events.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.DisplayWindow">
            <summary>
            Gets the display window
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.CanFocus">
            <summary>
            Determines whether this element can be focused.
            By default the element can be focused if it is enabled and allows focus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.Focus">
            <summary>
            Attempts to focus the keyboard on this input target
            </summary>
            <returns>true if this target got focus</returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.CanCaptureMouse">
            <summary>
            Determines whether this element can capture the mouse.
            By default the element can capture the mouse if it is enabled and allows mouse capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.CaptureMouse">
            <summary>
            Attempts to force capture of the mouse to this input target
            </summary>
            <returns>true if this target got mouse capture</returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReleaseMouseCapture">
            <summary>
            Releases the mouse capture, if this input target holds the capture
            </summary>
            <returns>true if this target had mouse capture and successfully released it</returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.CanCaptureTouch(Nevron.Nov.UI.NTouchDevice)">
            <summary>
            Determines whether this element can capture the touch.
            By default the element can capture the touch if it is enabled and allows touch capture.
            </summary>
            <param name="touchDevice"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.CaptureTouch(Nevron.Nov.UI.NTouchDevice)">
            <summary>
            Attempts to force capture of the touch to this input target
            </summary>
            <param name="touchDevice"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReleaseTouchCapture(Nevron.Nov.UI.NTouchDevice)">
            <summary>
            Releases the touch capture, if this input target holds the capture
            </summary>
            <param name="touchDevice"></param>
            <returns>true if this target had touch capture and successfully released it</returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.IsTabStop">
            <summary>
            Gets whether the input target is included in the tab navigation.
            This implementation returns the TabStop property value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.GetTabIndex">
            <summary>
            Gets or sets the input target tab navigation index
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.IsFocused">
            <summary>
            Determines whether this element has keyboard focus
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.IsMouseCaptured">
            <summary>
            Determines whether this element has captured the mouse
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.Enabled">
            <summary>
            Gets or sets whether this element is enabled in the UI or not.
            If a local value has not been set to this property, its value will be inherited by an ancestor element.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.IsDisabled">
            <summary>
            Gets whether this element is disabled.
            The local value of this property is automatically set to true, when the computed value of the Enabled property is false.
            The local value of this property is automatically cleared to its default false, when the computed value of the Enabled property is true.
            In this way you can select disabled widgets via styling, by using the ValueEqualsCondition 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.AllowFocus">
            <summary>
            Gets or sets whether this element can be focused
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.AllowMouseCapture">
            <summary>
            Gets or sets whether this element can capture the mouse
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.AllowTouchCapture">
            <summary>
            Gets or sets whether this element can capture the touch
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.AllowDrop">
            <summary>
            Gets or sets whether this widget can be used as the target of a drag-and-drop operation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.Cursor">
            <summary>
            Gets or sets the cursor 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.Tooltip">
            <summary>
            Gets or sets the tooltip
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.Interactor">
            <summary>
            Gets/set the element interactor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.Commander">
            <summary>
            Gets/set the element commander.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.TabStop">
            <summary>
            Gets or sets whether the element is included in the tab navigation or not
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.TabIndex">
            <summary>
            Gets or sets the index of the element in the tab navigation list.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartElement.OwnerDesktop">
            <summary>
            Gets the Desktop in which this element resides
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Default handler for the NMouse.MoveEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseDown(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Default handler for the NMouse.DownEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseUp(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Default handler for the NMouse.UpEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseWheel(Nevron.Nov.UI.NMouseWheelEventArgs)">
            <summary>
            Default handler for the NMouse.WheelEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseEnter(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Default handler for the NMouse.EnterEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseIn(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Default handler for the NMouse.InEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseOut(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Default handler for the NMouse.OutEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseLeave(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Default handler for the NMouse.LeaveEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnGotMouseCapture(Nevron.Nov.UI.NMouseCaptureChangeEventArgs)">
            <summary>
            Default handler for the NMouse.GotCaptureEvent events
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseCaptureIn(Nevron.Nov.UI.NMouseCaptureChangeEventArgs)">
            <summary>
            Default handler for the NMouse.CaptureInEvent event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnMouseCaptureOut(Nevron.Nov.UI.NMouseCaptureChangeEventArgs)">
            <summary>
            Default handler for the NMouse.CaptureOutEvent event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnLostMouseCapture(Nevron.Nov.UI.NMouseCaptureChangeEventArgs)">
            <summary>
            Default handler for the NMouse.LostCaptureEvent event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnKeyDown(Nevron.Nov.UI.NKeyEventArgs)">
            <summary>
            Default handler for the NKeyboard.KeyDownEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnKeyUp(Nevron.Nov.UI.NKeyEventArgs)">
            <summary>
            Default handler for the NKeyboard.KeyUpEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnInputChar(Nevron.Nov.UI.NInputCharEventArgs)">
            <summary>
            Default handler for the NKeyboard.InputCharEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnGotFocus(Nevron.Nov.UI.NFocusChangeEventArgs)">
            <summary>
            Default handler for the NKeyboard.GotFocusEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnFocusIn(Nevron.Nov.UI.NFocusChangeEventArgs)">
            <summary>
            Default handler for the NKeyboard.FocusInEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnFocusOut(Nevron.Nov.UI.NFocusChangeEventArgs)">
            <summary>
            Default handler for the NKeyboard.FocusOutEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnLostFocus(Nevron.Nov.UI.NFocusChangeEventArgs)">
            <summary>
            Default handler for the NKeyboard.LostFocus event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragOver(Nevron.Nov.UI.NDragActionEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragOverEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragDrop(Nevron.Nov.UI.NDragActionEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragDropEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragEnter(Nevron.Nov.UI.NDragOverChangeEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragEnterEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragIn(Nevron.Nov.UI.NDragOverChangeEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragInEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragOut(Nevron.Nov.UI.NDragOverChangeEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragOutEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDragLeave(Nevron.Nov.UI.NDragOverChangeEventArgs)">
            <summary>
            Default handler for the NDragDrop.DragLeaveEvent event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Queries whether handled mouse move should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledMouseDown(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Queries whether handled mouse down should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledMouseUp(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Queries whether handled mouse up should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledMouseWheel(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Queries whether handled mouse wheel should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledKeyDown(Nevron.Nov.UI.NKeyEventArgs)">
            <summary>
            Queries whether handled key down should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledKeyUp(Nevron.Nov.UI.NKeyEventArgs)">
            <summary>
            Queries whether handled key up should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledInputChar(Nevron.Nov.UI.NInputCharEventArgs)">
            <summary>
            Queries whether handled input char should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledDragOver(Nevron.Nov.UI.NDragActionEventArgs)">
            <summary>
            Queries whether handled drag over should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.ReceiveHandledDragDrop(Nevron.Nov.UI.NDragActionEventArgs)">
            <summary>
            Queries whether handled drag drop should be processed.
            This implementation returns false.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnEnabled">
            <summary>
            Called when the Disabled property is set to false
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.OnDisabled">
            <summary>
            Called when the Disabled property is set to true
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.RequestDisabledCursor">
            <summary>
            Called when the input element is disabled to request a disabled cursor for the input element.
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.DestroyGestureManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.NChartElementSchema">
            <summary>
            Schema associated with NChartElement
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.EnabledProperty">
            <summary>
            Reference to the Enabled property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.IsDisabledProperty">
            <summary>
            Reference to the Disabled property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.AllowFocusProperty">
            <summary>
            Reference to the AllowFocus property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.AllowMouseCaptureProperty">
            <summary>
            Reference to the AllowMouseCapture property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.AllowTouchCaptureProperty">
            <summary>
            Reference to the AllowTouchCapture property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.AllowDropProperty">
            <summary>
            Reference to the AllowDrop property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.TabStopProperty">
            <summary>
            Reference to the TabStop property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.TabIndexProperty">
            <summary>
            Reference to the TabIndex property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.TooltipProperty">
            <summary>
            Reference to the Tooltip property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.CursorProperty">
            <summary>
            Reference to the Tooltip property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.InteractorProperty">
            <summary>
            Reference to the Interactor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartElement.CommanderProperty">
            <summary>
            Reference to the Commander property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartElement.NChartElementDesigner">
            <summary>
            A designer for an input element.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartElement.NChartElementDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPlotChart">
            <summary>
            Base class for all types of chart that have a plot - cartesian, polar and radar.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPlotChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPlotChart.PlotFill">
            <summary>
            Gets or sets the plot fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPlotChart.PlotBorder">
            <summary>
            Gets or sets the plot border
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPlotChart.PaintWallDecorations(Nevron.Nov.Dom.NPaintVisitor,System.Int32,Nevron.Nov.Dom.NNode[])">
            <summary>
            Paints the wall decorations on the chart plot
            </summary>
            <param name="visitor"></param>
            <param name="count"></param>
            <param name="axes"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPlotChart.ClearSeriesViews``1(Nevron.Nov.Chart.NChartAxisCollection{``0})">
            <summary>
            Cleans up the series view and associated axes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPlotChart.NPlotChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPlotChart.PlotFillProperty">
            <summary>
            Reference to the plot fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPlotChart.PlotBorderProperty">
            <summary>
            Reference to the plot border property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesChart">
            <summary>
            Base class for all types of chart that have series - cartesian, polar, radar, pie etc.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesChart.Content">
            <summary>
            Gets or sets the content widget.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesChart.LabelLayout">
            <summary>
            Gets or set the chart label layout object 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesChart.HitTestMode">
            <summary>
            Gets or sets the hit test mode
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.AccumulateDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.InvalidateMeasure(System.Object)">
            <summary>
            
            </summary>
            <param name="hint"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Overriden to make the content occupy the content area.
            </summary>
            <param name="ca">The content area.</param>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.MeasureContent(System.Boolean)">
            <summary>
            Overriden to return the desired size of the content
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesChart.InvalidateDisplay">
            <summary>
            Overriden to invalidate the cached image map
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesChart.NSeriesChartSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesChart.ContentChild">
            <summary>
            Reference to the Content child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesChart.LabelLayoutProperty">
            <summary>
            Reference to the label layout property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesChart.HitTestModeProperty">
            <summary>
            Reference to the HitTestMode property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NColorValuePair">
            <summary>
            Represents a color value pair
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NColorValuePair.#ctor(System.Double,Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NColorValuePair.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NColorValuePair.Color">
            <summary>
            Gets or sets the color
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NColorValuePalette">
            <summary>
            Represents a palette which is created based on color value pairs
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NColorValuePalette.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NColorValuePalette.#ctor(Nevron.Nov.Chart.NColorValuePair[])">
            <summary>
            Initializer constructor
            </summary>
            <param name="colorValuePairs"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NColorValuePalette.ColorValuePairs">
            <summary>
            Gets or sets the outliers
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NColorValuePalette.NColorValuePaletteSchema">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NColorValuePalette.ColorValuePairsProperty">
            <summary>
            Reference to the color value pairs property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPalette">
            <summary>
            Represents a palette
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPalette.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPalette.SmoothColors">
            <summary>
            Gets or sets whether to smooth colors
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPalette.NPaletteSchema">
            <summary>
            Reference to the Palette Schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPalette.SmoothColorsProperty">
            <summary>
            Reference to the SmoothColors property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NThreeColorPalette">
            <summary>
            Represents a three color palette
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeColorPalette.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeColorPalette.#ctor(Nevron.Nov.Graphics.NColor,Nevron.Nov.Graphics.NColor,Nevron.Nov.Graphics.NColor,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="beginColor"></param>
            <param name="endColor"></param>
            <param name="originColor"></param>
            <param name="originValue"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeColorPalette.OriginColor">
            <summary>
            Gets or sets the begin color
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeColorPalette.OriginValue">
            <summary>
            Gets or sets the origin value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeColorPalette.NThreeColorPaletteSchema">
            <summary>
            Reference to the Palette Schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeColorPalette.OriginColorProperty">
            <summary>
            Reference to the OriginColor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeColorPalette.OriginValueProperty">
            <summary>
            Reference to the OriginValue property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTwoColorPalette">
            <summary>
            Represents a two palette
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTwoColorPalette.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTwoColorPalette.#ctor(Nevron.Nov.Graphics.NColor,Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializer constructor
            </summary>
            <param name="beginColor"></param>
            <param name="endColor"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NTwoColorPalette.BeginColor">
            <summary>
            Gets or sets the begin color
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTwoColorPalette.EndColor">
            <summary>
            Gets or sets the begin color
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTwoColorPalette.NTwoColorPaletteSchema">
            <summary>
            Reference to the Palette Schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTwoColorPalette.BeginColorProperty">
            <summary>
            Reference to the BeginColor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTwoColorPalette.EndColorProperty">
            <summary>
            Reference to the End property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianSeries">
            <summary>
            Represents a cartesian series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.HorizontalAxisRef">
            <summary>
            Gets or sets a reference to the horizontal axis on which this axis will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.HorizontalAxis">
            <summary>
            Gets or sets the horizontal axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.VerticalAxisRef">
            <summary>
            Gets or sets a reference to the Depth axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.VerticalAxis">
            <summary>
            Gets or sets the vertical axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.DepthAxisRef">
            <summary>
            Gets or sets a reference to the vertical axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCartesianSeries.DepthAxis">
            <summary>
            Gets or sets the depth axis on which this series will scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianSeries.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Called when the node ancestors chain has changed.
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianSeries.NCartesianSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianSeries.HorizontalAxisRefProperty">
            <summary>
            ScaleAxisRef to the horizontal axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianSeries.VerticalAxisRefProperty">
            <summary>
            ScaleAxisRef to the vertical axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianSeries.DepthAxisRefProperty">
            <summary>
            ScaleAxisRef to the depth axis ref property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianSeriesCollection">
            <summary>
            Represents a collection of cartesian series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianSeriesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCartesianSeriesCollection.NCartesianSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCartesianSeriesCollection.NCartesianSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianSeriesCollection.NCartesianSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCartesianSeriesCollection.NCartesianSeriesCollectionDesigner.GetCollectionChildrenTypes(Nevron.Nov.Dom.NNode)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NDataPoint">
            <summary>
            Represents a data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.Value">
            <summary>
            Gets / sets the data point value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.Y">
            <summary>
            Gets / sets the data point Y value (same as value)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.Label">
            <summary>
            Gets / sets the data point label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.Fill">
            <summary>
            Gets or sets the data point fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.Stroke">
            <summary>
            Gets or sets the data point stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataPoint.DataLabelStyle">
            <summary>
            Gets or sets the label style of the data point
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.NDataPointSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.ValueProperty">
            <summary>
            Reference to the value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.LabelProperty">
            <summary>
            Reference to the label property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.DataLabelStyleProperty">
            <summary>
            Reference to the label style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPoint.StrokeProperty">
            <summary>
            Reference to the stroke property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDataPointCollection`1">
            <summary>
            Represents a collection of data points
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDataPointCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataPointCollection`1.NDataPointCollectionSchema">
            <summary>
            Reference to the NDataPointCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPriceChangeSeries">
            <summary>
            Represents the base class of all price change sseries (kagi, renko, three line break, point and figure)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPriceChangeSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPriceChangeSeries.GetSyncRangeSampler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPriceChangeSeries.IsDateTimeScaledOnAxis(Nevron.Nov.Chart.NAxisBase)">
            <summary>
            
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NPriceChangeSeries.Transform(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceChangeSeries.NPriceChangeSeriesSchema">
            <summary>
            Reference to the series schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NX2Y2DataPoint">
            <summary>
            Represents an XY data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2DataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NX2Y2DataPoint.X2">
            <summary>
            Gets / sets the x2 value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NX2Y2DataPoint.Y2">
            <summary>
            Gets / sets the y2 value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2DataPoint.NX2Y2DataPointSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2DataPoint.X2Property">
            <summary>
            Reference to the X2 property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2DataPoint.Y2Property">
            <summary>
            Reference to the Y2 property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NX2Y2Z2DataPoint">
            <summary>
            Represents an XYZ data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NX2Y2Z2DataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NX2Y2Z2DataPoint.X2">
            <summary>
            Gets / sets the x2 value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NX2Y2Z2DataPoint.Y2">
            <summary>
            Gets / sets the y2 value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NX2Y2Z2DataPoint.Z2">
            <summary>
            Gets / sets the z2 value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2Z2DataPoint.NX2Y2Z2DataPointSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2Z2DataPoint.X2Property">
            <summary>
            Reference to the X2 property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2Z2DataPoint.Y2Property">
            <summary>
            Reference to the Y2 property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NX2Y2Z2DataPoint.Z2Property">
            <summary>
            Reference to the Z2 property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NXYCartesianSeries">
            <summary>
            Represents an xy scatter cartesian series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYCartesianSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NXYCartesianSeries.UseXValues">
            <summary>
            Whether the series will use the x values in the contained data points
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYCartesianSeries.NXYCartesianSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYCartesianSeries.UseXValuesProperty">
            <summary>
            Reference to the use x values property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NXYDataPoint">
            <summary>
            Represents an XY data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NXYDataPoint.X">
            <summary>
            Gets / sets the x value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYDataPoint.NXYDataPointSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYDataPoint.XProperty">
            <summary>
            Reference to the x property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NXYZCartesianSeries">
            <summary>
            Represents an xyz scatter cartesian series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZCartesianSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NXYZCartesianSeries.UseZValues">
            <summary>
            Whether the series will use the z values in the contained data points
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYZCartesianSeries.NXYZCartesianSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYZCartesianSeries.UseZValuesProperty">
            <summary>
            Reference to the use x values property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NXYZDataPoint">
            <summary>
            Represents an XY data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NXYZDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NXYZDataPoint.Z">
            <summary>
            Gets / sets the z value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYZDataPoint.NXYZDataPointSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NXYZDataPoint.ZProperty">
            <summary>
            Reference to the x property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAreaDataPoint">
            <summary>
            Represents an area data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaDataPoint.NAreaDataPointSchema">
            <summary>
            Reference to the area series schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAreaSeries">
            <summary>
            Represents an area series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeries.OriginMode">
            <summary>
            Gets or sets the origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeries.CustomOrigin">
            <summary>
            Gets or sets the custom origin of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeries.MultiAreaMode">
            <summary>
            Gets / sets the multi area mode of the series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeries.NAreaSeriesSchema">
            <summary>
            Reference to the area series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeries.OriginModeProperty">
            <summary>
            Reference to the origin mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeries.CustomOriginProperty">
            <summary>
            Reference to the custom origin property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeries.MultiAreaModeProperty">
            <summary>
            Reference to the multi area mode property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAreaSeriesBase">
            <summary>
            Represents the base for the area and high low series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAreaSeriesBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeriesBase.ShowDropLines">
            <summary>
            Controls the visibility of the vertical area lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeriesBase.Palette">
            <summary>
            Gets or sets the palette associated with the area series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAreaSeriesBase.DepthPercent">
            <summary>
            Gets or sets the depth percent
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeriesBase.NAreaSeriesBaseSchema">
            <summary>
            Reference to the area series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeriesBase.PaletteProperty">
            <summary>
            Reference to the Palette property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeriesBase.ShowDropLinesProperty">
            <summary>
            Reference to the drop lines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAreaSeriesBase.DepthPercentProperty">
            <summary>
            Reference to the depth percent property 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBarDataPoint">
            <summary>
            Represents a bar data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarDataPoint.#ctor(System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarDataPoint.Shape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarDataPoint.NBarDataPointSchema">
            <summary>
            Reference to the bar data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBarSeries">
            <summary>
            Represents a bar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.OriginMode">
            <summary>
            Gets or sets the series origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.CustomOrigin">
            <summary>
            Gets or sets the custom origin of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.MultiBarMode">
            <summary>
            Gets / sets the multi bar mode of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.Shape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.VerticalMarginInflate">
            <summary>
            Gets or sets the vertical margin inflate
            </summary>
            <remarks>
            The vertical margin inflate is used to specify an addition inflate in dips along the vertical axis. This prevents bars from reaching the top of the y axis. This property is regarded only when InflateMargins is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.Palette">
            <summary>
            Gets or sets the palette associated with the bar series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeries.PaletteColorMode">
            <summary>
            Gets or sets the palette color mode
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.NBarSeriesSchema">
            <summary>
            Reference to the bar series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.MultiBarModeProperty">
            <summary>
            Reference to the multi bar mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.OriginModeProperty">
            <summary>
            Reference to the origin mode property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.CustomOriginProperty">
            <summary>
            Reference to the custom origin property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.VerticalMarginInflateProperty">
            <summary>
            Reference to the VerticalMarginInflate property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.PaletteProperty">
            <summary>
            Reference to the Palette property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.PaletteColorModeProperty">
            <summary>
            Reference to the PaletteColorMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBarSeriesBase">
            <summary>
            Represents a base class for bar series and box and whisker series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBarSeriesBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.WidthSizeMode">
            <summary>
            Gets or sets the bar width mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.DepthSizeMode">
            <summary>
            Gets or sets the bar depth mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.WidthGapFactor">
            <summary>
            Gets or sets the gap factor. The gap factor is used when the width mode set to min gap
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.DepthGapFactor">
            <summary>
            Gets or sets the depth gap factor. The gap factor is used when the depth size mode set to min gap
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.Width">
            <summary>
            Gets or sets the value of the bar width. This width is used when the width mode is set to Fixed or Scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBarSeriesBase.Depth">
            <summary>
            Gets or sets the value of the bar depth. This depth is used when the width mode is set to Fixed or Scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.NBarSeriesBaseSchema">
            <summary>
            Reference to the bar series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.WidthSizeModeProperty">
            <summary>
            Reference to the width mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.DepthSizeModeProperty">
            <summary>
            Reference to the depth mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.WidthGapFactorProperty">
            <summary>
            Reference to the gap factor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.DepthGapFactorProperty">
            <summary>
            Reference to the depyt factor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.WidthProperty">
            <summary>
            Reference to the width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBarSeriesBase.DepthProperty">
            <summary>
            Reference to the depth property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint">
            <summary>
            Represents a box and whisker data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor.
            </summary>
            <param name="x"></param>
            <param name="upperBoxValue"></param>
            <param name="lowerBoxValue"></param>
            <param name="medianValue"></param>
            <param name="averageValue"></param>
            <param name="upperWhiskerValue"></param>
            <param name="lowerWhiskerValue"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[],System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="upperBoxValue"></param>
            <param name="lowerBoxValue"></param>
            <param name="medianValue"></param>
            <param name="averageValue"></param>
            <param name="upperWhiskerValue"></param>
            <param name="lowerWhiskerValue"></param>
            <param name="outliers"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[],Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="upperBoxValue"></param>
            <param name="lowerBoxValue"></param>
            <param name="medianValue"></param>
            <param name="averageValue"></param>
            <param name="upperWhiskerValue"></param>
            <param name="lowerWhiskerValue"></param>
            <param name="outliers"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.LowerBoxValue">
            <summary>
            Gets or sets the lower box value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.UpperBoxValue">
            <summary>
            Gets or sets the upper box value (same as Value)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.MedianValue">
            <summary>
            Gets or sets the median value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.AverageValue">
            <summary>
            Gets or sets the average value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.UpperWhiskerValue">
            <summary>
            Gets or sets the Upper whisker value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.LowerWhiskerValue">
            <summary>
            Gets or sets the lower whisker value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.Outliers">
            <summary>
            Gets or sets the outliers
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.AverageStroke">
            <summary>
            Gets or sets the average stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.MedianStroke">
            <summary>
            Gets or sets the median stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.OutlierStroke">
            <summary>
            Gets or sets the outlier stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.OutlierFill">
            <summary>
            Gets or sets the outlier fill
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.NBoxAndWhiskerDataPointSchema">
            <summary>
            Reference to the box and whisker data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.LowerBoxValueProperty">
            <summary>
            Reference to the LowerBoxValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.MedianValueProperty">
            <summary>
            Reference to the MedianValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.AverageValueProperty">
            <summary>
            Reference to the AverageValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.UpperWhiskerValueProperty">
            <summary>
            Reference to the UpperWhiskerValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.LowerWhiskerValueProperty">
            <summary>
            Reference to the LowerWhiskerValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.AverageStrokeProperty">
            <summary>
            Reference to the AverageStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.MedianStrokeProperty">
            <summary>
            Reference to the MedianStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.OutlierStrokeProperty">
            <summary>
            Reference to the OutlierBorder property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.OutlierFillProperty">
            <summary>
            Reference to the OutlierFill
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerDataPoint.OutliersProperty">
            <summary>
            Reference to the Outliers property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBoxAndWhiskerSeries">
            <summary>
            Represents a box and whisker series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.WhiskerWidthPercent">
            <summary>
            Gets or sets the whisker width percent which controls the width of the whiskers as percentage from the bar width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierSize">
            <summary>
            Gets or sets the outlier size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.AverageStroke">
            <summary>
            Gets or sets the average stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.MedianStroke">
            <summary>
            Gets or sets the median stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.ShowAverage">
            <summary>
            Gets or sets whether to show the average value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.ShowMedian">
            <summary>
            Gets or sets whether to show the median value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierStroke">
            <summary>
            Gets or sets the outlier stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierFill">
            <summary>
            Gets or sets the outlier fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBoxAndWhiskerSeries.WhiskerValueFormatter">
            <summary>
            Gets or sets the whisker value formatter
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBoxAndWhiskerSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.NBoxAndWhiskerSeriesSchema">
            <summary>
            Reference to the box and whisker series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.WhiskerWidthPercentProperty">
            <summary>
            Reference to WhiskerWidthPercentProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierSizeProperty">
            <summary>
            Reference to the OutlierSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.AverageStrokeProperty">
            <summary>
            Reference to the AverageStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.MedianStrokeProperty">
            <summary>
            Reference to the MedianStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.ShowAverageProperty">
            <summary>
            Reference to the ShowAverage property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.ShowMedianProperty">
            <summary>
            Reference to the ShowMedian property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierStrokeProperty">
            <summary>
            Reference to the OutlierStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.OutlierFillProperty">
            <summary>
            Reference to the OutlierFill
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.WhiskerValueFormatterProperty">
            <summary>
            Reference to the WhiskerValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBoxAndWhiskerSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBubbleDataPoint">
            <summary>
            Represents a bubble data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="size"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="size"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="size"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="size"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="size"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="size"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="size"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleDataPoint.Shape">
            <summary>
            Gets or set the point shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleDataPoint.Size">
            <summary>
            Gets or set the point shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleDataPoint.NBubbleDataPointSchema">
            <summary>
            Reference to the bubble data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleDataPoint.SizeProperty">
            <summary>
            Reference to the size property 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NBubbleSeries">
            <summary>
            Represents a bubble series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleSeries.Shape">
            <summary>
            Gets or set the shape of the bubbles
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleSeries.MinSize">
            <summary>
            Gets or sets the bubble minimum size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleSeries.MaxSize">
            <summary>
            Gets or sets the bubble minimum size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NBubbleSeries.SizeValueFormatter">
            <summary>
            Gets or sets the size value formatter
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NBubbleSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.NBubbleSeriesSchema">
            <summary>
            Reference to the bubble series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.MinSizeProperty">
            <summary>
            Reference to the min size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.MaxSizeProperty">
            <summary>
            Reference to the min size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.SizeValueFormatterProperty">
            <summary>
            Reference to the size value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NBubbleSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NErrorBarDataPoint">
            <summary>
            Represents an error bar data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="upperXError"></param>
            <param name="lowerXError"></param>
            <param name="upperYError"></param>
            <param name="lowerYError"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="upperXError"></param>
            <param name="lowerXError"></param>
            <param name="upperYError"></param>
            <param name="lowerYError"></param>
            <param name="upperZError"></param>
            <param name="lowerZError"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="upperXError"></param>
            <param name="lowerXError"></param>
            <param name="upperYError"></param>
            <param name="lowerYError"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="upperXError"></param>
            <param name="lowerXError"></param>
            <param name="upperYError"></param>
            <param name="lowerYError"></param>
            <param name="upperZError"></param>
            <param name="lowerZError"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.Shape">
            <summary>
            Gets or set the point shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.UpperXError">
            <summary>
            Gets or sets the upper x error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.LowerXError">
            <summary>
            Gets or sets the lower x error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.UpperYError">
            <summary>
            Gets or sets the upper y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.LowerYError">
            <summary>
            Gets or sets the lower y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.UpperZError">
            <summary>
            Gets or sets the upper z error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarDataPoint.LowerZError">
            <summary>
            Gets or sets the lower z error
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.NErrorBarDataPointSchema">
            <summary>
            Reference to the error bar series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.UpperXErrorProperty">
            <summary>
            Reference to the UpperXError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.LowerXErrorProperty">
            <summary>
            Reference to the LowerXError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.UpperYErrorProperty">
            <summary>
            Reference to the UpperYError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.LowerYErrorProperty">
            <summary>
            Reference to the LowerYError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.UpperZErrorProperty">
            <summary>
            Reference to the UpperZError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarDataPoint.LowerZErrorProperty">
            <summary>
            Reference to the LowerZError property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NErrorBarSeries">
            <summary>
            Represents an error bar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.Shape">
            <summary>
            Gets or set the shape of the points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.Size">
            <summary>
            Gets or sets the point size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.XErrorSize">
            <summary>
            Gets or sets the x error size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.YErrorSize">
            <summary>
            Gets or sets the y error size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ZErrorSize">
            <summary>
            Gets or sets the z error size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerXError">
            <summary>
            Gets or sets whether to show the lower x error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperXError">
            <summary>
            Gets or sets whether to show the upper x error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerYError">
            <summary>
            Gets or sets whether to show the lower y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperYError">
            <summary>
            Gets or sets whether to show the upper y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerZError">
            <summary>
            Gets or sets whether to show the lower y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperZError">
            <summary>
            Gets or sets whether to show the upper y error
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.XErrorValueFormatter">
            <summary>
            Gets or sets the formatter used to format the x error values (upper and lower)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.YErrorValueFormatter">
            <summary>
            Gets or sets the formatter used to format the y error values (upper and lower)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NErrorBarSeries.ZErrorValueFormatter">
            <summary>
            Gets or sets the formatter used to format the z error values (upper and lower)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NErrorBarSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.NErrorBarSeriesSchema">
            <summary>
            Reference to the error bar series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.SizeProperty">
            <summary>
            Reference to the size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerXErrorProperty">
            <summary>
            Reference to the ShowLowerXError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperXErrorProperty">
            <summary>
            Reference to the ShowUpperXError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerYErrorProperty">
            <summary>
            Reference to the ShowLowerYError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperYErrorProperty">
            <summary>
            Reference to the ShowUpperYError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowLowerZErrorProperty">
            <summary>
            Reference to the ShowLowerZError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ShowUpperZErrorProperty">
            <summary>
            Reference to the ShowUpperZError property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.XErrorSizeProperty">
            <summary>
            Reference to the XErrorSizeProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.YErrorSizeProperty">
            <summary>
            Reference to the YErrorSizeProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ZErrorSizeProperty">
            <summary>
            Reference to the ZErrorSizeProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.XErrorValueFormatterProperty">
            <summary>
            Reference to the XErrorValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.YErrorValueFormatterProperty">
            <summary>
            Reference to the YErrorValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.ZErrorValueFormatterProperty">
            <summary>
            Reference to the ZErrorValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NErrorBarSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NContourLabelStyle">
            <summary>
            Controls the appearance of a contour labels
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NContourLabelStyle.#ctor">
            <summary>
            Creates a new data label style with default settings.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.Visible">
            <summary>
            Controls the visibility of the data label.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.AllowLabelToFlip">
            <summary>
            Whether the label is allowed to flip
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.ClipContour">
            <summary>
            Whether the label should clip the contour line it annotates
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.LabelClipInflate">
            <summary>
            Controls the inflate of the label size when clipping the label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.LabelDistance">
            <summary>
            The height of the scrollbar in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.Format">
            <summary>
            Gets or sets the format string of the data labels.
            </summary>
            <remarks>
            With the help of the format string you can specify what content 
            must be displayed in the contour labels labels. 
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NContourLabelStyle.TextStyle">
            <summary>
            Gets or sets the text style applied to the data labels.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.NContourLabelStyleSchema">
            <summary>
            Schema associated with NTextStyle.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.VisibleProperty">
            <summary>
            Reference to the Visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.AllowLabelToFlipProperty">
            <summary>
            Reference to the Allow Label To Flip property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.ClipContourProperty">
            <summary>
            Reference to the ClipContour property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.FormatProperty">
            <summary>
            Reference to the Format property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.TextStyleProperty">
            <summary>
            Reference to the TextStyle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.LabelDistanceProperty">
            <summary>
            Reference to the LabelDistance property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.LabelClipInflateProperty">
            <summary>
            Reference to the LabelClipInflate property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.defaultVisible">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.defaultAllowLabelToFlip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContourLabelStyle.defaultClipContour">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGridData">
            <summary>
            Represents a grid data object
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGridData.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.Size">
            <summary>
            Gets or sets the grid size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.OriginX">
            <summary>
            Gets or sets the x origin of the grid
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.OriginY">
            <summary>
            Gets or sets the y origin of the grid
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.StepX">
            <summary>
            Gets or sets the x step of the grid
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.StepY">
            <summary>
            Gets or sets the step Y of the grid
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGridData.Values">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGridData.SetValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the value at row, col
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="value"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGridData.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value at row, col
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Nevron.Nov.Chart.NGridData.SetRange(System.Int32,System.Int32,System.Double[0:,0:])">
            <summary>
            Sets a range of values 
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="values"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.NGridDataSchema">
            <summary>
            Reference to the grid data schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.SizeProperty">
            <summary>
            Reference to the Size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.ValuesProperty">
            <summary>
            Reference to the Values property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.OriginXProperty">
            <summary>
            Reference to the OriginX property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.OriginYProperty">
            <summary>
            Reference to the OriginY property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.StepXProperty">
            <summary>
            Reference to the StepX property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGridData.StepYProperty">
            <summary>
            Reference to the StepY property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHeatMapSeries">
            <summary>
            Represents a heat map series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHeatMapSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.Palette">
            <summary>
            Gets or sets the palette associated with the bar series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.Data">
            <summary>
            Gets or sets the grid map series data
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ShowFill">
            <summary>
            Gets or sets whether to show the heat map fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ContourStroke">
            <summary>
            Gets or sets the contour stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ContourDisplayMode">
            <summary>
            Gets or sets the contour display mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ContourColorMode">
            <summary>
            Gets or sets the contour color mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ContourDotSize">
            <summary>
            Gets or sets the contour dot size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHeatMapSeries.ContourLabelStyle">
            <summary>
            Gets or sets the contour labels style
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHeatMapSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.NHeatMapSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.PaletteProperty">
            <summary>
            Reference to the Palette property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.DataProperty">
            <summary>
            Reference to the Data property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ShowFillProperty">
            <summary>
            Reference to the ShowFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourLabelProperty">
            <summary>
            Reference to the ContourStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourStrokeProperty">
            <summary>
            Reference to the ContourStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourDisplayModeProperty">
            <summary>
            Reference to the ContourDisplayMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourColorModeProperty">
            <summary>
            Reference to the ContourColorMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourDotSizeProperty">
            <summary>
            Reference to the ContourDotSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHeatMapSeries.ContourLabelStyleProperty">
            <summary>
            Reference to the ContourLabels property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHighLowDataPoint">
            <summary>
            Represents a high low data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="highValue"></param>
            <param name="lowValue"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowDataPoint.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="highValue"></param>
            <param name="lowValue"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="highValue"></param>
            <param name="lowValue"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowDataPoint.HighValue">
            <summary>
            Gets or sets the high value (same as Value property)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowDataPoint.LowValue">
            <summary>
            Gets or sets the low value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowDataPoint.NHighLowDataPointSchema">
            <summary>
            Reference to the high low data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowDataPoint.LowValueProperty">
            <summary>
            Reference to the LowValue property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHighLowSeries">
            <summary>
            Represents a High Low Series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.AppearanceMode">
            <summary>
            Gets or sets the apperance mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.HighStroke">
            <summary>
            Gets or sets the high stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.LowStroke">
            <summary>
            Gets or sets the low stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.HighFill">
            <summary>
            Gets or sets the high fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.LowFill">
            <summary>
            Gets or sets the low fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.HighLegendName">
            <summary>
            Gets or sets the high series name when displayed on a legend with series custom legend view
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHighLowSeries.LowLegendName">
            <summary>
            Gets or sets the low series name when displayed on a legend with series custom legend view
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHighLowSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.NHighLowSeriesSchema">
            <summary>
            Reference to the high low series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.HighStrokeProperty">
            <summary>
            Reference to the HighStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.LowStrokeProperty">
            <summary>
            Reference to the LowStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.HighFillProperty">
            <summary>
            Reference to the HighFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.LowFillProperty">
            <summary>
            Reference to the LowFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.AppearanceModeProperty">
            <summary>
            Reference to the AppearanceMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.HighLegendNameProperty">
            <summary>
            Reference to the HighLegendName property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHighLowSeries.LowLegendNameProperty">
            <summary>
            Reference to the LowLegendName property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NKagiDataPoint">
            <summary>
            Represents a kagi data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKagiDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKagiDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NKagiDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiDataPoint.NKagiDataPointSchema">
            <summary>
            Reference to the high low data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NKagiSeries">
            <summary>
            Represents a Kagi Series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKagiSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKagiSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKagiSeries.UpStroke">
            <summary>
            Gets or sets the high stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKagiSeries.DownStroke">
            <summary>
            Gets or sets the low stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKagiSeries.ReversalAmount">
            <summary>
            Gets or sets the reversal amount
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKagiSeries.ReversalAmountInPercents">
            <summary>
            Gets or sets whether the reverse amount is specified in percents
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKagiSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.NKagiSeriesSchema">
            <summary>
            Reference to the kagi series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.UpStrokeProperty">
            <summary>
            Reference to the UpStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.DownStrokeProperty">
            <summary>
            Reference to the DownStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.ReversalAmountProperty">
            <summary>
            Reference to the ReversalAmount property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKagiSeries.ReversalAmountInPercentsProperty">
            <summary>
            Reference to the ReversalAmountInPercents
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLineDataPoint">
            <summary>
            Represents a line data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineDataPoint.#ctor(System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineDataPoint.MarkerStyle">
            <summary>
            Gets or sets the marker of this data point
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineDataPoint.NLineDataPointSchema">
            <summary>
            Reference to the line data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineDataPoint.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLineSeries">
            <summary>
            Represents a line series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.MultiLineMode">
            <summary>
            Gets / sets the multi line mode of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.MarkerStyle">
            <summary>
            Gets or sets the marker of this series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.LineSegmentMode">
            <summary>
            Gets or sets the line line segment mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.LineSegmentShape">
            <summary>
            Gets or sets theline segment shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.DepthPercent">
            <summary>
            Controls the depth of the line in percents of the series depth when the LineSegmentShape is set to Tape, Tube or Ellipsoid.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLineSeries.LineSize">
            <summary>
            <summary>
            If the line segment shape is tube or ellipsoid, this property gets or 
            sets the diameter of the cross section of the tubes / ellipsiods in 
            NLength format. This property gets or sets the depth of the tape in model units in case of scatter.
            If the line segment shape is simple line, this property doesn't take effect.
            </summary>
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.NLineSeriesSchema">
            <summary>
            Reference to the line series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.MultiLineModeProperty">
            <summary>
            Reference to the multi line mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.LineSegmentModeProperty">
            <summary>
            Reference to the line segment mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.LineSegmentShapeProperty">
            <summary>
            Reference to the line segment shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.LineSizeProperty">
            <summary>
            Reference to the line size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineSeries.DepthPercentProperty">
            <summary>
            Reference to the line depth percent property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPointAndFigureDataPoint">
            <summary>
            Represents a kagi data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointAndFigureDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointAndFigureDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="highValue"></param>
            <param name="lowValue"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointAndFigureDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="highValue"></param>
            <param name="lowValue"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureDataPoint.HighValue">
            <summary>
            Gets or sets the HighValue (same as Value property)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureDataPoint.LowValue">
            <summary>
            Gets or sets the low value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureDataPoint.NPointAndFigureDataPointSchema">
            <summary>
            Reference to the high low data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureDataPoint.LowValueProperty">
            <summary>
            Reference to the LowValue property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPointAndFigureSeries">
            <summary>
            Represents a Kagi Series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointAndFigureSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureSeries.UpStroke">
            <summary>
            Gets or sets the high stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureSeries.DownStroke">
            <summary>
            Gets or sets the low stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureSeries.ReversalAmount">
            <summary>
            Gets or sets the reversal amount
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointAndFigureSeries.BoxSize">
            <summary>
            Gets or sets the box size
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointAndFigureSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.NPointAndFigureSeriesSchema">
            <summary>
            Reference to the kagi series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.UpStrokeProperty">
            <summary>
            Reference to the UpStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.DownStrokeProperty">
            <summary>
            Reference to the DownStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.ReversalAmountProperty">
            <summary>
            Reference to the ReversalAmount property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointAndFigureSeries.BoxSizeProperty">
            <summary>
            Reference to the BoxSizeProperty property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPointDataPoint">
            <summary>
            Represents a point data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointDataPoint.#ctor(System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointDataPoint.Shape">
            <summary>
            Gets or set the point shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointDataPoint.Size">
            <summary>
            Gets or set the point size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointDataPoint.HorizontalDropLineStroke">
            <summary>
            Gets or sets the horizontal drop line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointDataPoint.VerticalDropLineStroke">
            <summary>
            Gets or sets the vertical drop line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointDataPoint.DepthDropLineStroke">
            <summary>
            Gets or sets the depth drop line stroke
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.NPointDataPointSchema">
            <summary>
            Reference to the point data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.SizeProperty">
            <summary>
            Reference to the size property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.HorizontalDropLineStrokeProperty">
            <summary>
            Reference to the HorizontalDropLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.VerticalDropLineStrokeProperty">
            <summary>
            Reference to the VerticalDropLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointDataPoint.DepthDropLineStrokeProperty">
            <summary>
            Reference to the DepthDropLineStrokeProperty property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPointSeries">
            <summary>
            Represents a point series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.Shape">
            <summary>
            Gets or set the shape of the points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.Size">
            <summary>
            Gets or sets the point size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineOrigin">
            <summary>
            Gets or sets the horizontal drop line origin (regarded when HorizontalDropLineOriginMode is set to ENDropLineOriginMode.CustomValue)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineOriginMode">
            <summary>
            Gets or sets the horizontal drop line origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineStroke">
            <summary>
            Gets or sets the horizontal drop line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.VerticalDropLineOriginMode">
            <summary>
            Gets or sets the vertical drop line origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.VerticalDropLineOrigin">
            <summary>
            Gets or sets the vertical drop line origin (regarded when VerticalDropLineOriginMode is set to ENDropLineOriginMode.CustomValue)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.VerticalDropLineStroke">
            <summary>
            Gets or sets the vertical drop line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.DepthDropLineOriginMode">
            <summary>
            Gets or sets the vertical drop line origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.DepthDropLineOrigin">
            <summary>
            Gets or sets the Depth drop line origin (regarded when DepthDropLineOriginMode is set to ENDropLineOriginMode.CustomValue)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.DepthDropLineStroke">
            <summary>
            Gets or sets the Depth drop line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.ShowHorizontalDropLines">
            <summary>
            Gets or sets whether to show the horizontal drop lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.ShowVerticalDropLines">
            <summary>
            Gets or sets whether to show the vertical drop lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPointSeries.ShowDepthDropLines">
            <summary>
            Gets or sets whether to show the vertical drop lines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPointSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.NPointSeriesSchema">
            <summary>
            Reference to the point series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.SizeProperty">
            <summary>
            Reference to the size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineOriginModeProperty">
            <summary>
            Reference to the HorizontalDropLineOriginMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.ShowHorizontalDropLinesProperty">
            <summary>
            Reference to the ShowHorizontalDropLines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.ShowVerticalDropLinesProperty">
            <summary>
            Reference to the ShowVerticalDropLines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.ShowDepthDropLinesProperty">
            <summary>
            Reference to the ShowDepthDropLinesProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineOriginProperty">
            <summary>
            Reference to the HorizontalDropLineOrigin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.HorizontalDropLineStrokeProperty">
            <summary>
            Reference to the HorizontalDropLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.VerticalDropLineOriginModeProperty">
            <summary>
            Reference to the VerticalDropLineOriginMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.VerticalDropLineOriginProperty">
            <summary>
            Reference to the VerticalDropLineOrigin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.VerticalDropLineStrokeProperty">
            <summary>
            Reference to the VerticalDropLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.DepthDropLineOriginModeProperty">
            <summary>
            Reference to the DepthDropLineOriginMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.DepthDropLineOriginProperty">
            <summary>
            Reference to the DepthDropLineOrigin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPointSeries.DepthDropLineStrokeProperty">
            <summary>
            Reference to the DepthDropLineStroke property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeDataPoint">
            <summary>
            Represents a range data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeDataPoint.Shape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeDataPoint.NRangeDataPointSchema">
            <summary>
            Reference to the range data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeSeries">
            <summary>
            Represents a range series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeSeries.Shape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeSeries.NRangeSeriesSchema">
            <summary>
            Reference to the range series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRenkoDataPoint">
            <summary>
            Represents a kagi data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoDataPoint.NRenkoDataPointSchema">
            <summary>
            Reference to the high low data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRenkoSeries">
            <summary>
            Represents a Kagi Series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.UpStroke">
            <summary>
            Gets or sets the high stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.DownStroke">
            <summary>
            Gets or sets the low stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.UpFill">
            <summary>
            Gets or sets the up fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.DownFill">
            <summary>
            Gets or sets the down fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.BoxWidthPercent">
            <summary>
            Gets or sets the box width percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.BoxSize">
            <summary>
            Gets or sets the box width percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRenkoSeries.BoxSizeInPercents">
            <summary>
            Gets or sets whether the box size is in percent
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRenkoSeries.GetSyncRangeSampler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.NRenkoSeriesSchema">
            <summary>
            Reference to the kagi series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.UpStrokeProperty">
            <summary>
            Reference to the UpStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.DownStrokeProperty">
            <summary>
            Reference to the DownStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.UpFillProperty">
            <summary>
            Reference to the UpFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.DownFillProperty">
            <summary>
            Reference to the DownFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.BoxWidthPercentProperty">
            <summary>
            Reference to the BoxWidthPercent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.BoxSizeProperty">
            <summary>
            Reference to the BoxSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRenkoSeries.BoxSizeInPercentsProperty">
            <summary>
            Reference to the BoxSizeInPercents property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStockDataPoint">
            <summary>
            Represents a stock data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="open"></param>
            <param name="close"></param>
            <param name="high"></param>
            <param name="low"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="open"></param>
            <param name="close"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="open"></param>
            <param name="close"></param>
            <param name="high"></param>
            <param name="low"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="open"></param>
            <param name="close"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockDataPoint.Low">
            <summary>
            Gets or sets the low stock value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockDataPoint.Open">
            <summary>
            Gets or sets the open stock value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockDataPoint.Close">
            <summary>
            Gets or sets the close stock value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockDataPoint.High">
            <summary>
            Gets or sets the high stock value
            </summary>
            <remarks>
            This property has the same effect as the Value property
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockDataPoint.NStockDataPointSchema">
            <summary>
            Reference to the stock data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockDataPoint.LowProperty">
            <summary>
            Reference to the Low property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockDataPoint.OpenProperty">
            <summary>
            Reference to the Open property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockDataPoint.CloseProperty">
            <summary>
            Reference to the Close property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStockSeries">
            <summary>
            Represents a stock series.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.AppearanceMode">
            <summary>
            Controls the appearance mode of the stock series.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.CandleShape">
            <summary>
            Controls the shape of the candle.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.CandleWidth">
            <summary>
            Controls the width of the candle in model units.
            </summary>
            <remarks>
            By default set to 2.5f.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.ScaleCandleWidthWhenZooming">
            <summary>
            Whether the candle width should be scaled when the user zooms in on the chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.ShowOpen">
            <summary>
            Controls the visibility of the Open value.
            </summary>
            <remarks>
            Valid if CandleShape is Stick. By default set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.ShowClose">
            <summary>
            Controls the visibility of the Close value.
            </summary>
            <remarks>
             Valid if CandleShape is Stick. By default set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.ShowHighLow">
            <summary>
            Controls the visibility of the line connecting High and Low values.
            </summary>
            <remarks>
            By default set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.UpFill">
            <summary>
            Gets or sets the fill style applied to the up candles.
            </summary>
            <remarks>
            The up candles are displayed with this fill style.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.UpStroke">
            <summary>
            Gets or sets the stroke style applied to the up Candle and Stick.
            </summary>
            <remarks>
            The up candles borders are displayed with this stroke style.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.DownFill">
            <summary>
            Get or sets the fill style applied to the down Candle.
            </summary>
            <remarks>
            The down candles are displayed with this fill style.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.DownStroke">
            <summary>
            Get or sets the stroke style applied to the down Candle and Stick.
            </summary>
            <remarks>
            The down candles borders are displayed with this stroke style.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.UpHighLowStroke">
            <summary>
            Gets or sets the stroke style applied to the high low line of up oriented candles.
            </summary>
            <remarks>
            This stroke style is applied if the CandleShape is set to Candle.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.DownHighLowStroke">
            <summary>
            Gets or sets a stroke style applied to the high low line of downward oriented candles.
            </summary>
            <remarks>
            This stroke style is applied if the CandleShape is set to Candle.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.HighValueFormatter">
            <summary>
            Gets or sets the high value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.LowValueFormatter">
            <summary>
            Gets or sets the low value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.OpenValueFormatter">
            <summary>
            Gets or sets the open value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStockSeries.CloseValueFormatter">
            <summary>
            Gets or sets the close value formatter
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStockSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.NStockSeriesSchema">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.AppearanceModeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.CandleShapeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.CandleWidthProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.ShowOpenProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.ShowCloseProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.ShowHighLowProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.UpFillProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.DownFillProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.UpStrokeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.DownStrokeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.UpHighLowStrokeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.DownHighLowStrokeProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.ScaleCandleWidthWhenZoomingProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.HighValueFormatterProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.LowValueFormatterProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.OpenValueFormatterProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.CloseValueFormatterProperty">
            <summary>
            Reference to CloseValueFormatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStockSeries.DataPointsChild">
            <summary>
            Reference to DataPoints child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NThreeLineBreakDataPoint">
            <summary>
            Represents a kagi data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeLineBreakDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeLineBreakDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeLineBreakDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakDataPoint.NThreeLineBreakDataPointSchema">
            <summary>
            Reference to the high low data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NThreeLineBreakSeries">
            <summary>
            Represents a Kagi Series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeLineBreakSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.UpStroke">
            <summary>
            Gets or sets the high stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.DownStroke">
            <summary>
            Gets or sets the low stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.UpFill">
            <summary>
            Gets or sets the up fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.DownFill">
            <summary>
            Gets or sets the down fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.BoxWidthPercent">
            <summary>
            Gets or sets the box width percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NThreeLineBreakSeries.NumberOfLinesToBreak">
            <summary>
            Gets or sets the number of lines to break
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NThreeLineBreakSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.NThreeLineBreakSeriesSchema">
            <summary>
            Reference to the kagi series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.UpStrokeProperty">
            <summary>
            Reference to the UpStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.DownStrokeProperty">
            <summary>
            Reference to the DownStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.UpFillProperty">
            <summary>
            Reference to the UpFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.DownFillProperty">
            <summary>
            Reference to the DownFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.BoxWidthPercentProperty">
            <summary>
            Reference to the BoxWidthPercent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NThreeLineBreakSeries.NumberOfLinesToBreakProperty">
            <summary>
            Reference to the NumberOfLinesToBreak property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NVectorDataPoint">
            <summary>
            Represents a vector data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorDataPoint.NVectorDataPointSchema">
            <summary>
            Reference to the vector data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NVectorSeries">
            <summary>
            Represents a vector series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVectorSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVectorSeries.ArrowheadShape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVectorSeries.MinArrowheadSize">
            <summary>
            Gets or sets the minimum arrowhead size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVectorSeries.MaxArrowheadSize">
            <summary>
            Gets or sets the maximum arrowhead size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVectorSeries.ArrowheadSizeFactor">
            <summary>
            Gets or sets the width and height factors that compute the arrowhead size relative to the vector length
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVectorSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.NVectorSeriesSchema">
            <summary>
            Reference to the vector series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.ArrowheadShapeProperty">
            <summary>
            Reference to the ArrowheadShape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.MinArrowheadSizeProperty">
            <summary>
            Reference to the MinArrowheadSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.MaxArrowheadSizeProperty">
            <summary>
            Reference to the MaxArrowheadSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.ArrowheadSizeFactorProperty">
            <summary>
            Reference to the ArrowheadSizeFactor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVectorSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFunnelDataPoint">
            <summary>
            Represents a funnel data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelDataPoint.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelDataPoint.NFunnelDataPointSchema">
            <summary>
            Reference to the funnel data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFunnelSeries">
            <summary>
            Represents a funnel series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.UseXValues">
            <summary>
            Whether the series will use the x values in the contained data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.NeckWidthPercent">
            <summary>
            Gets or sets the neck width percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.NeckHeightPercent">
            <summary>
            Gets or sets the neck height percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.LabelMode">
            <summary>
            Gets or sets the funnel label mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.Shape">
            <summary>
            Gets or sets the funnel shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.LabelArrowLength">
            <summary>
            Gets or sets the label arrow length
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.PointGapPercent">
            <summary>
            Gets or sets the point gap percent
            </summary>
            <remarks>
            Point gap percent is measured against the total funnel height
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.MaxPointGapPercent">
            <summary>
            Gets or sets the maximum point gap percent
            </summary>
            <remarks>
            Maximum point gap percent is measured against the total funnel height. It determines the maximum height that can be occupied by point gaps
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NFunnelSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.NFunnelSeriesSchema">
            <summary>
            Reference to the funnel series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.UseXValuesProperty">
            <summary>
            Reference to the use x values property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.LabelModeProperty">
            <summary>
            Reference to the label mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.ShapeProperty">
            <summary>
            Reference to the Shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.PointGapPercentProperty">
            <summary>
            Reference to the PointGapPercent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.MaxPointGapPercentProperty">
            <summary>
            Reference to the MaxPointGapPercent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.LabelArrowLengthProperty">
            <summary>
            Reference to the label arrow length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.NeckWidthPercentProperty">
            <summary>
            Reference to the NeckWidthPercent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeries.NeckHeightPercentProperty">
            <summary>
            Reference to the NeckHeightPercent property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFunnelSeriesCollection">
            <summary>
            Represents a collection of funnel series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelSeriesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFunnelSeriesCollection.NFunnelSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFunnelSeriesCollection.NFunnelSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelSeriesCollection.NFunnelSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFunnelSeriesCollection.NFunnelSeriesCollectionDesigner.GetCollectionChildrenTypes(Nevron.Nov.Dom.NNode)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NDataLabelStyle">
            <summary>
            Represents a data label attached to a data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDataLabelStyle.#ctor">
            <summary>
            Creates a new data label with default settings.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDataLabelStyle.#ctor(System.Boolean)">
            <summary>
            Create a new data label with the specified visibility
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDataLabelStyle.#ctor(System.String)">
            <summary>
            Create a new data label with the specified format
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.Visible">
            <summary>
            Controls the visibility of the data label.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.VertAlign">
            <summary>
            Controls the vertical data label alignment relative to the data point bound.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.ArrowLength">
            <summary>
            Controls the length of the arrow connecting the data point and the text label.
            </summary>
            <remarks>
            By default set to 4.0f.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.ArrowPointerLength">
            <summary>
            Controls the length of the arrow pointer pointing to the data label text.
            </summary>
            <remarks>
            By default set to 0. Note that not all series data points have arrow pointers. 
            Currently only the pie series in spider mode use this value.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.Format">
            <summary>
            Gets or sets the format string of the data labels.
            </summary>
            <remarks>
            With the help of the format string you can specify what content 
            must be displayed in the data labels. The formatting commands 
            depend on the series.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.TextStyle">
            <summary>
            Gets or sets the text style applied to the data labels.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.ArrowStroke">
            <summary>
            Gets or sets the stroke style applied to the data label arrows.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDataLabelStyle.Orientation">
            <summary>
            Gets or sets the orientation of the data label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.NDataLabelStyleSchema">
            <summary>
            Reference to the NDataLabelStyle schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.VisibleProperty">
            <summary>
            Reference to the visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.FormatProperty">
            <summary>
            Reference to the format property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.VertAlignProperty">
            <summary>
            Reference to the vertical alignment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.TextStyleProperty">
            <summary>
            Reference to the text style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.ArrowStrokeProperty">
            <summary>
            Reference to the arrow stroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.ArrowLengthProperty">
            <summary>
            Reference to the arrow length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.ArrowPointerLengthProperty">
            <summary>
            Reference to the arrow pointer length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.OrientationProperty">
            <summary>
            Reference to the orientation property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.TrimWhiteSpacesProperty">
            <summary>
            Reference to the trim whitespaces property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.defaultVisible">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.defaultVertAlign">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.defaultArrowLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDataLabelStyle.defaultArrowPointerLength">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLegendView">
            <summary>
            Controls the representation of the associated object in the chart legend.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendView.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.ItemMargins">
            <summary>
            Gets or sets the item margins
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.TextMargins">
            <summary>
            Gets or sets the text margins 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.ShapeMargins">
            <summary>
            Gets or sets the shape margins
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.Format">
            <summary>
            Gets / sets the format string for the legend texts.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.TextStyle">
            <summary>
            Gets / sets the text style used to display the series legend entries.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.MaxTextWidth">
            <summary>
            Gets / sets the maximum width of text in the legend cell.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.TextWrapMode">
            <summary>
            Gets / sets the text fit mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendView.MarkSize">
            <summary>
            Gets / sets the legend mark size
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.NLegendViewSchema">
            <summary>
            Reference to the NLegendView schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.MarkSizeProperty">
            <summary>
            Reference to the mark size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.FormatProperty">
            <summary>
            Reference to the Format property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.TextStyleProperty">
            <summary>
            Reference to the text style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.MaxTextWidthProperty">
            <summary>
            Reference to the max text width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.TextWrapModeProperty">
            <summary>
            Reference to the max text width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.ItemMarginsProperty">
            <summary>
            Reference to the item margins property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.TextMarginsProperty">
            <summary>
            Reference to the text margins property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendView.ShapeMarginsProperty">
            <summary>
            Reference to the shape margins property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NMarkerStyle">
            <summary>
            Controls the appearance of a markers
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerStyle.#ctor(System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerStyle.#ctor(Nevron.Nov.Graphics.NSize)">
            <summary>
            Initializer constructor
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Visible">
            <summary>
            Gets or sets whether the marker is visible
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Shape">
            <summary>
            Gets or sets the shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Size">
            <summary>
            Gets or sets the marker size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Width">
            <summary>
            Gets or sets the marker width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Height">
            <summary>
            Gets or sets the marker height
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Depth">
            <summary>
            Gets or sets the depth of the marker
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.AutoDepth">
            <summary>
            Gets or sets the auto depth of the marker
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.AutoDepthPercent">
            <summary>
            Gets or sets the auto depth of the marker
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Fill">
            <summary>
            Gets or sets the fill of the marker
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerStyle.Border">
            <summary>
            Gets or sets the border of the marker
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.NMarkerStyleSchema">
            <summary>
            Reference to the marker style schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.VisibleProperty">
            <summary>
            Reference to the visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.DepthProperty">
            <summary>
            Reference to the depth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.HeightProperty">
            <summary>
            Reference to the height property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.WidthProperty">
            <summary>
            Reference to the width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.AutoDepthProperty">
            <summary>
            Reference to the auto depth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.AutoDepthPercentProperty">
            <summary>
            Reference to the auto depth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.ShapeProperty">
            <summary>
            Reference to the point shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerStyle.BorderProperty">
            <summary>
            Reference to the border property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeries">
            <summary>
            Represents the base class of all series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.Stroke">
            <summary>
            Gets or sets the data point stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.Fill">
            <summary>
            Gets or sets the fill of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.Shadow">
            <summary>
            Gets or sets the fill of the area
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.Name">
            <summary>
            Gets or sets the name of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.Visible">
            <summary>
            Gets or sets whether the series is visible
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.LegendView">
            <summary>
            Gets or sets the legend on which this series displays information on
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.InflateMargins">
            <summary>
            Inflates the margins of the series to fit the chart area.
            </summary>
            <remarks>
            This can be very useful if your series has data points which are displayed outside the 
            chart area.
            </remarks> 
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.ValueFormatter">
            <summary>
            Gets or sets the value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.XValueFormatter">
            <summary>
            Gets or sets the x value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.ZValueFormatter">
            <summary>
            Gets or sets the z value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.TotalValueFormatter">
            <summary>
            Gets or sets the total value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.PercentValueFormatter">
            <summary>
            Gets or sets the percent value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.CumulativeValueFormatter">
            <summary>
            Gets or sets the cumulative value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.IndexValueFormatter">
            <summary>
            Gets or sets the index value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.DataLabelStyle">
            <summary>
            Gets or sets the data label style associated with thi
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.LabelLayout">
            <summary>
            Gets or sets a NSeriesLabelLayoutSettings object controlling automatic data label layout features.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.OriginIndex">
            <summary>
            Gets or sets the origin index
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeries.RegardAxisClipping">
            <summary>
            Whether the series regards axis clipping. 
            </summary>
            <remarks>
            This property is true by default meaning that series content will be clipped to the plot area defined by the axes the series scales on
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeries.GetSeriesLegendWidget">
            <summary>
            Gets the widget that represents the series in the legend
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeries.OnUnregistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.NSeriesSchema">
            <summary>
            Reference to the series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.NameProperty">
            <summary>
            Reference to the name property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.VisibleProperty">
            <summary>
            Reference to the Visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.InflateMarginsProperty">
            <summary>
            Reference to the inflate margins property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.LegendRefProperty">
            <summary>
            Reference to the legend ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.LegendViewProperty">
            <summary>
            Reference to the legend view property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.TotalValueFormatterProperty">
            <summary>
            Reference to the total value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.PercentValueFormatterProperty">
            <summary>
            Reference to the percent value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.CumulativeValueFormatterProperty">
            <summary>
            Reference to the cumulative value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.IndexValueFormatterProperty">
            <summary>
            Reference to the index value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.ValueFormatterProperty">
            <summary>
            Reference to the value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.XValueFormatterProperty">
            <summary>
            Reference to the X value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.ZValueFormatterProperty">
            <summary>
            Reference to the Z value formatter property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.StrokeProperty">
            <summary>
            Reference to the stroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.ShadowProperty">
            <summary>
            Reference to the shadow property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.DataLabelStyleProperty">
            <summary>
            Reference to the data label style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.LabelLayoutProperty">
            <summary>
            Reference to the series label layout property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.OriginIndexProperty">
            <summary>
            Reference to the OriginIndex property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeries.RegardAxisClippingProperty">
            <summary>
            Reference to the RegardsAxisClipping property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesBoxClipping">
            <summary>
            Controls how clipping is applied relative to the series contents
            </summary>
            <remarks>
            This object is relevant to Cartesian, Polar and Radar charts.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesBoxClipping.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableHorizontalMinClipping">
            <summary>
            Gets or sets whether horizontal minimum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableHorizontalMaxClipping">
            <summary>
            Gets or sets whether horizontal maximum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.HorizontalMinClipValue">
            <summary>
            Gets or sets the horizontal minimum clipping value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.HorizontalMaxClipValue">
            <summary>
            Gets or sets the horizontal maximum clipping value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableVerticalMinClipping">
            <summary>
            Gets or sets whether vertical minimum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableVerticalMaxClipping">
            <summary>
            Gets or sets whether vertical maximum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.VerticalMinClipValue">
            <summary>
            Gets or sets the vertical minimum clipping value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.VerticalMaxClipValue">
            <summary>
            Gets or sets the vertical maximum clipping value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableDepthMinClipping">
            <summary>
            Gets or sets whether vertical minimum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.EnableDepthMaxClipping">
            <summary>
            Gets or sets whether vertical maximum clipping is enabled
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.DepthMinClipValue">
            <summary>
            Gets or sets the depth minimum clipping value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesBoxClipping.DepthMaxClipValue">
            <summary>
            Gets or sets the depth maximum clipping value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.NSeriesBoxClippingSchema">
            <summary>
            Reference to the series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableHorizontalMinClippingProperty">
            <summary>
            Reference to the EnableHorizontalMinClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableHorizontalMaxClippingProperty">
            <summary>
            Reference to the EnableHorizontalMaxClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.HorizontalMinClipValueProperty">
            <summary>
            Reference to the HorizontalMinClipValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.HorizontalMaxClipValueProperty">
            <summary>
            Reference to the HorizontalMaxClipValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableVerticalMinClippingProperty">
            <summary>
            Reference to the EnableVerticalMinClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableVerticalMaxClippingProperty">
            <summary>
            Reference to the EnableVerticalMaxClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.VerticalMinClipValueProperty">
            <summary>
            Reference to the VerticalMinClipValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.VerticalMaxClipValueProperty">
            <summary>
            Reference to the VerticalMaxClipValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableDepthMaxClippingProperty">
            <summary>
            Reference to the EnableDepthMaxClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.EnableDepthMinClippingProperty">
            <summary>
            Reference to the EnableDepthMinClipping property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.DepthMinClipValueProperty">
            <summary>
            Reference to the DepthMinClipValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesBoxClipping.DepthMaxClipValueProperty">
            <summary>
            Reference to the DepthMaxClipValue property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesCollection`1">
            <summary>
            Represents a collection of gauge axis elements
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesCollection`1.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to invalidate the chart
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesCollection`1.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Overriden to invalidate the chart
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesCollection`1.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Overriden to cache a reference to the chart
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesCollection`1.NSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesCollection`1.NSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesCollection`1.NSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesLegendView">
            <summary>
            Controls the representation of the associated series in the chart legend.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesLegendView.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLegendView.LegendRef">
            <summary>
            Gets or sets a reference to the legend this view displays information on
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLegendView.Legend">
            <summary>
            Gets or sets the legend on which this view displays information on
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLegendView.Mode">
            <summary>
            Gets / sets the mode in which the legend is filled with information about the series.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLegendView.Order">
            <summary>
            Gets / sets order in which legend items generated by the series are included in the legend.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLegendView.NSeriesLegendViewSchema">
            <summary>
            Reference to the NSeriesLegendView schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLegendView.ModeProperty">
            <summary>
            Reference to the Mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLegendView.OrderProperty">
            <summary>
            Reference to the Order property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLegendView.LegendRefProperty">
            <summary>
            Reference to the legend ref property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieDataPoint">
            <summary>
            Represents a pie data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieDataPoint.DetachmentPercent">
            <summary>
            Gets / sets the detachment percent of this data point
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieDataPoint.NPieDataPointSchema">
            <summary>
            Reference to the pie data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieDataPoint.DetachmentPercentProperty">
            <summary>
            Reference to the detachment property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieSeries">
            <summary>
            Represents a pie series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.BeginRadiusPercent">
            <summary>
            Gets or sets the begin radius percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.EndRadiusPercent">
            <summary>
            Gets or sets the end radius percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.LabelMode">
            <summary>
            Gets or sets the pie label mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.SpiderArrowLength">
            <summary>
            Gets or sets the spider arrow length
            </summary>
            <remarks>
            This property has effect only when label mode is set to spider
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.PieSegmentShape">
            <summary>
            Gets or sets the pie segment shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.PieEdgePercent">
            <summary>
            Gets or sets the pie edge percent
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.DepthPercent">
            <summary>
            Gets or sets the depth percent of the series relative the the pie chart
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPieSeries.ShowFullSectorsAsWholePie">
            <summary>
            Gets or sets whether the series will show a full pie
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.NPieSeriesSchema">
            <summary>
            Reference to the pie series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.LabelModeProperty">
            <summary>
            Reference to the label mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.SpiderArrowLengthProperty">
            <summary>
            Reference to the spider arrow length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.SpiderConnectorLengthProperty">
            <summary>
            Reference to the spider connector length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.BeginRadiusPercentProperty">
            <summary>
            Reference to the begin radius percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.EndRadiusPercentProperty">
            <summary>
            Reference to the end radius percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.PieSegmentShapeProperty">
            <summary>
            Reference to the segment shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.PieEdgePercentProperty">
            <summary>
            Reference to the edge percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.DepthPercentProperty">
            <summary>
            Reference to the depth percent property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.ShowFullSectorsAsWholePieProperty">
            <summary>
            Reference to the ShowFullSectorsAsWholePieProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieSeries.NPieSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeries.NPieSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeries.NPieSeriesCollectionDesigner.GetCollectionChildrenTypes(Nevron.Nov.Dom.NNode)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieSeriesCollection">
            <summary>
            Represents a collection of Pie series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeriesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPieSeriesCollection.NPieSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPieSeriesCollection.NPieSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPieSeriesCollection.NPieSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarAreaDataPoint">
            <summary>
            Represents a polar area data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaDataPoint.NPolarAreaDataPointSchema">
            <summary>
            Reference to the polar area data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarAreaSeries">
            <summary>
            Represents a polar area series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAreaSeries.DropLines">
            <summary>
            Controls the visibility of the vertical area lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAreaSeries.OriginMode">
            <summary>
            Gets or sets the origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAreaSeries.CustomOrigin">
            <summary>
            Gets or sets the custom origin of the series
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarAreaSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarAreaSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaSeries.NPolarAreaSeriesSchema">
            <summary>
            Reference to the polar area series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaSeries.OriginModeProperty">
            <summary>
            Reference to the origin mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaSeries.CustomOriginProperty">
            <summary>
            Reference to the custom origin property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaSeries.DropLinesProperty">
            <summary>
            Reference to the drop lines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarAreaSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarLineDataPoint">
            <summary>
            Represents a polar line data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarLineDataPoint.MarkerStyle">
            <summary>
            Gets or sets the marker of this data point
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineDataPoint.NPolarLineDataPointSchema">
            <summary>
            Reference to the polar line data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineDataPoint.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarLineSeries">
            <summary>
            Represents a polar line series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarLineSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarLineSeries.CloseContour">
            <summary>
            Gets or sets whether to close the line contour
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarLineSeries.MarkerStyle">
            <summary>
            Gets or sets the marker of this series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarLineSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineSeries.NPolarLineSeriesSchema">
            <summary>
            Reference to the polar line series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineSeries.CloseContourProperty">
            <summary>
            Reference to the close contour property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarLineSeries.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarSeries">
            <summary>
            Base class for all polar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarSeries.UseXValues">
            <summary>
            Whether the series will use the x values in the contained data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarSeries.ValueAxisRef">
            <summary>
            Gets or sets a reference to the Value axis on which this axis will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarSeries.ValueAxis">
            <summary>
            Gets or sets the axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarSeries.AngleAxisRef">
            <summary>
            Gets or sets a reference to the Value axis on which this series will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarSeries.AngleAxis">
            <summary>
            Gets or sets the axis on which this indicator will scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarSeries.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Called when the node ancestors chain has changed.
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarSeries.NPolarSeriesSchema">
            <summary>
            Reference to the polar series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarSeries.ValueAxisRefProperty">
            <summary>
            ScaleAxisRef to the Value axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarSeries.AngleAxisRefProperty">
            <summary>
            ScaleAxisRef to the Angle axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarSeries.UseXValuesProperty">
            <summary>
            Reference to the use x values property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarSeriesCollection">
            <summary>
            Represents a collection of polar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarSeriesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarSeriesCollection.NPolarSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarSeriesCollection.NPolarSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarSeriesCollection.NPolarSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarSeriesCollection.NPolarSeriesCollectionDesigner.GetCollectionChildrenTypes(Nevron.Nov.Dom.NNode)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarPointDataPoint">
            <summary>
            Represents a point data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointDataPoint.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Chart.ENPointShape3D)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarPointDataPoint.Shape">
            <summary>
            Gets or set the point shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointDataPoint.NPolarPointDataPointSchema">
            <summary>
            Reference to the polar point data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointDataPoint.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarPointSeries">
            <summary>
            Represents a polar point series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarPointSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarPointSeries.Shape">
            <summary>
            Gets or set the shape of the points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarPointSeries.Size">
            <summary>
            Gets or sets the point size
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarPointSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointSeries.NPolarPointSeriesSchema">
            <summary>
            Reference to the polar point series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointSeries.SizeProperty">
            <summary>
            Reference to the size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarPointSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarRangeDataPoint">
            <summary>
            Represents a polar range data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarRangeDataPoint.NPolarRangeDataPointSchema">
            <summary>
            Reference to the polar range data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarRangeSeries">
            <summary>
            Represents a polar range series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarRangeSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarRangeSeries.Shape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarRangeSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarRangeSeries.NPolarRangeSeriesSchema">
            <summary>
            Reference to the polar range series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarRangeSeries.ShapeProperty">
            <summary>
            Reference to the shape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarRangeSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarVectorDataPoint">
            <summary>
            Represents a vector data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorDataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorDataPoint.#ctor(System.Double,System.Double,System.Double,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorDataPoint.NPolarVectorDataPointSchema">
            <summary>
            Reference to the vector data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPolarVectorSeries">
            <summary>
            Represents a polar vector series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarVectorSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarVectorSeries.ArrowheadShape">
            <summary>
            Gets or set the bar shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarVectorSeries.MinArrowheadSize">
            <summary>
            Gets or sets the minimum arrowhead size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarVectorSeries.MaxArrowheadSize">
            <summary>
            Gets or sets the maximum arrowhead size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPolarVectorSeries.ArrowheadSizeFactor">
            <summary>
            Gets or sets the width and height factors that compute the arrowhead size relate to the vector length
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPolarVectorSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.NPolarVectorSeriesSchema">
            <summary>
            Reference to the polar vector series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.ArrowheadShapeProperty">
            <summary>
            Reference to the ArrowheadShape property 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.MinArrowheadSizeProperty">
            <summary>
            Reference to the MinArrowheadSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.MaxArrowheadSizeProperty">
            <summary>
            Reference to the MaxArrowheadSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.ArrowheadSizeFactorProperty">
            <summary>
            Reference to the ArrowheadSizeFactor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPolarVectorSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarAreaDataPoint">
            <summary>
            Represents a radar area data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAreaDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAreaDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAreaDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAreaDataPoint.NRadarAreaDataPointSchema">
            <summary>
            Reference to the radar line data point schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarAreaSeries">
            <summary>
            Represents a radar area series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAreaSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAreaSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAreaSeries.DropLines">
            <summary>
            Controls the visibility of the radial area lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarAreaSeries.Origin">
            <summary>
            Gets or sets the area origin
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarAreaSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAreaSeries.NRadarAreaSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAreaSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAreaSeries.DropLinesProperty">
            <summary>
            Reference to the drop lines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarAreaSeries.OriginProperty">
            <summary>
            Reference to the origin property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarLineDataPoint">
            <summary>
            Represents a radar line data point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarLineDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarLineDataPoint.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarLineDataPoint.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarLineDataPoint.MarkerStyle">
            <summary>
            Gets or sets the marker of this data point
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineDataPoint.NRadarLineDataPointSchema">
            <summary>
            Reference to the radar line data point schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineDataPoint.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarLineSeries">
            <summary>
            Represents a radar line series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarLineSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarLineSeries.DataPoints">
            <summary>
            Gets or sets the data points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarLineSeries.CloseContour">
            <summary>
            Gets or sets whether to close the line contour
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadarLineSeries.MarkerStyle">
            <summary>
            Gets or sets the marker of this series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarLineSeries.GetDataPointsChild">
            <summary>
            Gets the data points child of the series
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineSeries.NRadarLineSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineSeries.DataPointsChild">
            <summary>
            Reference to the data points child property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineSeries.CloseContourProperty">
            <summary>
            Reference to the close contour property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarLineSeries.MarkerStyleProperty">
            <summary>
            Reference to the marker style property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarSeries">
            <summary>
            Base class for all radar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarSeries.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarSeries.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Called when the node ancestors chain has changed.
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarSeries.NRadarSeriesSchema">
            <summary>
            Reference to the cartesian series schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarSeriesCollection">
            <summary>
            Represents a collection of Radar series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarSeriesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadarSeriesCollection.NRadarSeriesCollectionSchema">
            <summary>
            Reference to the NSeriesCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadarSeriesCollection.NRadarSeriesCollectionDesigner">
            <summary>
            Designer for linear barcode widgets.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarSeriesCollection.NRadarSeriesCollectionDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadarSeriesCollection.NRadarSeriesCollectionDesigner.GetCollectionChildrenTypes(Nevron.Nov.Dom.NNode)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartLabelLayout">
            <summary>
            Controls options related to data label layout on a per chart level.
            </summary>
            <remarks>
            This object is relevant for Cartesian, Polar and Radar charts.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartLabelLayout.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartLabelLayout.EnableInitialPositioning">
            <summary>
            Gets or sets a value indicating whether initial label positioning is enabled.
            </summary>
            <remarks>
            If this property is set to true the control automatically chooses an initial position for each label so that 
            there are minimum overlaps. The layout selects one of positions that are proposed by the series that owns the label.
            In case this property is set to false, the default position is used for each label.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartLabelLayout.RemoveOverlappedLabels">
            <summary>
            Gets or sets a property indicating whether labels that overlap after initial label positioning should be removed from display.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartLabelLayout.EnableLabelAdjustment">
            <summary>
            Gets or sets a value indicating whether label position adjustment is enabled.
            </summary>
            <remarks>
            If this property is set to true the control adjusts the label positions after the initial placement.
            Labels can be moved in any direction to avoid overlapping.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartLabelLayout.MaxLayoutItems">
            <summary>
            Specifies the maximum number of items (labels and obstacles) that can be processed by the automatic layout system.
            </summary>
            <remarks>
            If the number of layout items in the chart exceeds this value, automatic layout is not performed.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartLabelLayout.NChartLabelLayoutSchema">
            <summary>
            Reference to the label layout settings schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartLabelLayout.EnableInitialPositioningProperty">
            <summary>
            Reference to the EnableInitialPositioning property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartLabelLayout.RemoveOverlappedLabelsProperty">
            <summary>
            Reference to the RemoveOverlappedLabels property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartLabelLayout.EnableLabelAdjustmentProperty">
            <summary>
            Reference to the EnableLabelAdjustment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartLabelLayout.MaxLayoutItemsProperty">
            <summary>
            Reference to the MaxLayoutItems property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NSeriesLabelLayout">
            <summary>
            Controls options related to data label layout on a per series level.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NSeriesLabelLayout.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.EnableDataPointSafeguard">
            <summary>
            Gets or sets a value indicating whether data points of this series are protected from being overlapped by labels.
            </summary>
            <remarks>
            If this property is set to false the data points of this series can be overlapped by data labels.
            Otherwise the data points protect their characteristic points (like min and max) from being overlapped.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.DataPointSafeguardSize">
            <summary>
            Specifies the size of the safeguard area that protects data points from being overlaped by labels.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.LabelLocations">
            <summary>
            Gets or sets an array that contains possible initial label locations that are used by the label layout system.
            </summary>
            <remarks>
            The locations are taken into account when the EnableInitialPositioning property of the chart's LabelLayoutSettings object is set to true 
            and the UseLabelLocations property is set to true. If the initial label positioning is disabled for this chart or for this series, then 
            the standard label location is used for each label, as specified by the relevant NDataLabelStyle object.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.UseLabelLocations">
            <summary>
            Gets or sets a value indicating whether the initial locations in the LabelLocations collection should be used.
            </summary>
            <remarks>
            This property can enable or disable the initial label positioning on a per-series basis. If initial positioning is disabled
            the initial location of each label is specified by the respective NDataLabelStyle object.
            </remarks> 
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.InvertLocationsForInvertedDataPoints">
            <summary>
            Gets or sets a value indicating whether label locations should be inverted vertically for data points with inverted vertical orientation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.OutOfBoundsLocationMode">
            <summary>
            Specifies the treatment mode for locations that fall partially out of the plot bounds.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NSeriesLabelLayout.InvertLocationsIfIgnored">
            <summary>
            Gets or sets a value indicating whether proposed label locations should be inverted if all of them are outside the chart bounds and are ignored.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.NSeriesLabelLayoutSchema">
            <summary>
            Reference to the SeriesLabelLayoutSettings schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.EnableInitialPositioningProperty">
            <summary>
            Reference to the EnableInitialPositioning property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.EnableDataPointSafeguardProperty">
            <summary>
            Reference to the EnableDataPointSafeguard property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.DataPointSafeguardSizeProperty">
            <summary>
            Reference to the DataPointSafeguardSize property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.LabelLocationsProperty">
            <summary>
            Reference to the LabelLocations property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.UseLabelLocationsProperty">
            <summary>
            Reference to the UseLabelLocations property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.InvertLocationsForInvertedDataPointsProperty">
            <summary>
            Reference to the InvertLocationsForInvertedDataPoints property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.InvertLocationsIfIgnoredProperty">
            <summary>
            Reference to the InvertLocationsIfIgnored property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NSeriesLabelLayout.OutOfBoundsLocationModeProperty">
            <summary>
            Reference to the OutOfBoundsLocationMode property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NAxisCursorTool">
            <summary>
            A chart tool that draws a horizontal / vertical line based on the current mouse position
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateOnMouseMove">
            <summary>
            Gets or sets whether to update the cursors on mouse move
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateMouseButtonEvents">
            <summary>
            Gets or sets whether to update the cursors on the specified mouse button events
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalLineStroke">
            <summary>
            Gets or sets the horizontal line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalLineStroke">
            <summary>
            Gets or sets the vertical line stroke
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalAxisRef">
            <summary>
            Gets or sets a reference to the horizontal axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalAxis">
            <summary>
            Gets or sets the horionztal axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalAxisRef">
            <summary>
            Gets or sets a reference to the verical axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalAxis">
            <summary>
            Gets or sets the vertical axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalValueSnapper">
            <summary>
            Gets or sets the horizontal value snapper
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalValueSnapper">
            <summary>
            Gets or sets the vertical value snapper
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalValue">
            <summary>
            Gets the horizontal value of the axis cursor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalValue">
            <summary>
            Gets the vertical value of the axis cursor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NAxisCursorTool.AutoHideCursors">
            <summary>
            Gets or sets a value indicating whether to automatically hide cursors when the mouse is not over the chart
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalValueChanged">
            <summary>
            Mutation event, which occurs when the horizontal value property has changed.
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalValueChanged">
            <summary>
            Mutation event, which occurs when the vertical value property has changed.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.GetAxis(Nevron.Nov.Chart.NValueSnapper)">
            <summary>
            Get the axis corresponding to the specified value snapper
            </summary>
            <param name="valueSnapper"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event
            </summary>
            <remarks>
            Overriden to call the Drag handle method if the tool is active.
            If the tool is not active it will try to obtain the last hit handle and request its cursor and tooltip.
            </remarks>
            <param name="args">mouse event arguments</param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.OnMouseUp(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Overriden to react to mouse up events
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.OnMouseDown(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Overriden to react to mouse down events
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.OnMouseIn(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Overriden to show the cursors
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.OnMouseOut(Nevron.Nov.UI.NMouseOverChangeEventArgs)">
            <summary>
            Overriden to hide the cursors 
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.HideCursors">
            <summary>
            Hides the cursors line aids
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.ShowCursors">
            <summary>
            Shows the cursors line aids
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateCursors">
            <summary>
            Creates the cursors line aids if needed and updates it.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.NAxisCursorToolSchema">
            <summary>
            Schema associated with NAxisCursorTool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateOnMouseMoveProperty">
            <summary>
            Reference to the UpdateOnMouseMove property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateMouseButtonEventsProperty">
            <summary>
            Reference to the UpdateMouseButtonEvents property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.UpdateMouseButtonsProperty">
            <summary>
            Reference to the UpdateMouseButtons property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalLineStrokeProperty">
            <summary>
            Reference to the HorizontalLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalLineStrokeProperty">
            <summary>
            Reference to the VerticalLineStroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalAxisRefProperty">
            <summary>
            ScaleAxisRef to the horizontal axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalAxisRefProperty">
            <summary>
            ScaleAxisRef to the vertical axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalValueSnapperProperty">
            <summary>
            Reference to the HorizontalValueSnapper property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalValueSnapperProperty">
            <summary>
            Reference to the VerticalValueSnapper property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.HorizontalValueProperty">
            <summary>
            Reference to the HorizontalValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.VerticalValueProperty">
            <summary>
            Reference to the VerticalValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NAxisCursorTool.AutoHideCursorsProperty">
            <summary>
            Reference to the auto hide cursors property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NChartAxisDragTool">
            <summary>
            Base chart tool for drag tools that involve horizontal and vertical axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartAxisDragTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NChartAxisDragTool.HorizontalAxisRef">
            <summary>
            Gets or sets a reference to the horizontal axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NChartAxisDragTool.HorizontalAxis">
            <summary>
            Gets or sets the horionztal axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NChartAxisDragTool.VerticalAxisRef">
            <summary>
            Gets or sets a reference to the verical axis 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NChartAxisDragTool.VerticalAxis">
            <summary>
            Gets or sets the vertical axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartAxisDragTool.CanActivate">
            <summary>
            Determines whether the tool can activate
            </summary>
            <remarks>
            Overriden to return false if the active page selection is not empty
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartAxisDragTool.CreateActivationArea">
            <summary>
            Overriden to allow activation only when the user starts a zoom operation in the current plot
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NChartAxisDragTool.NChartAxisDragToolSchema">
            <summary>
            Schema associated with NChartAxisDragTool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NChartAxisDragTool.HorizontalAxisRefProperty">
            <summary>
            ScaleAxisRef to the horizontal axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NChartAxisDragTool.VerticalAxisRefProperty">
            <summary>
            ScaleAxisRef to the vertical axis ref property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NChartDragTool">
            <summary>
            A base tool for all chart drag tools
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartDragTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartDragTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event
            </summary>
            <remarks>
            Overriden to call the Drag handle method if the tool is active.
            If the tool is not active it will try to obtain the last hit handle and request its cursor and tooltip.
            </remarks>
            <param name="args">mouse event arguments</param>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NChartDragTool.Dragged">
            <summary>
            Gets or sets whether the tool is considered dragged when activated.
            This property is automatically set to true when the mouse has 
            travelled a certain distance since the tool was activated.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartDragTool.CanActivate">
            <summary>
            Determines whether the tool can activate
            </summary>
            <remarks>
            Overriden to return false if the active page selection is not empty
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NChartDragTool.GetChart``1">
            <summary>
            Gets the chart attached to this tool
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NChartDragTool.NChartDragToolSchema">
            <summary>
            Schema associated with NChartDragTool
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NDataPanTool">
            <summary>
            A chart tool that performs data panning
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NDataPanTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NDataPanTool.ScrollHorizontalAxis">
            <summary>
            Gets or sets whether to scroll the horizontal axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NDataPanTool.ScrollVerticalAxis">
            <summary>
            Gets or sets whether to scroll the vertical axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NDataPanTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NDataPanTool.OnActivated">
            <summary>
            Called when the tool is activated
            </summary>
            
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NDataPanTool.OnAborted">
            <summary>
            Called when the tool was aborted. Raises the Aborted event
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NDataPanTool.NDataPanToolSchema">
            <summary>
            Schema associated with NDataPanTool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NDataPanTool.ScrollHorizontalAxisProperty">
            <summary>
            Reference to the ScrollHorizontalAxis property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NDataPanTool.ScrollVerticalAxisProperty">
            <summary>
            Reference to the ScrollVerticalAxis property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NRectangleZoomTool">
            <summary>
            A chart tool that performs zoom in / out based on rectangular selection
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NRectangleZoomTool.ZoomInFill">
            <summary>
            Gets or sets the zoom in fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NRectangleZoomTool.ZoomOutFill">
            <summary>
            Gets or sets the zoom out fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NRectangleZoomTool.HorizontalValueSnapper">
            <summary>
            Gets or sets the horizontal value snapper
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NRectangleZoomTool.VerticalValueSnapper">
            <summary>
            Gets or sets the vertical value snapper
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.GetAxis(Nevron.Nov.Chart.NValueSnapper)">
            <summary>
            Get the axis corresponding to the specified value snapper
            </summary>
            <param name="valueSnapper"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event
            </summary>
            <param name="args">mouse event arguments</param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.UpdateAids">
            <summary>
            Called to update the visual aids of this tool. 
            </summary>
            <remarks>
            This implementation shows/hides the selection rectangle aids.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.OnDeactivated">
            <summary>
            Called when the tool was deactivated. Raises the Deactivated event
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.DestroyRectangleAid">
            <summary>
            Destroys the rectangle aid.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NRectangleZoomTool.UpdateRectangleAid">
            <summary>
            Creates the rectangle aid if needed and updates it.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NRectangleZoomTool.NRectangleZoomToolSchema">
            <summary>
            Schema associated with NRectangleZoomTool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NRectangleZoomTool.ZoomInFillProperty">
            <summary>
            Reference to the ZoomInFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NRectangleZoomTool.ZoomOutFillProperty">
            <summary>
            Reference to the ZoomOutFill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NRectangleZoomTool.HorizontalValueSnapperProperty">
            <summary>
            Reference to the HorizontalValueSnapper property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NRectangleZoomTool.VerticalValueSnapperProperty">
            <summary>
            Reference to the VerticalValueSnapper property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Tools.NTrackballTool">
            <summary>
            This class represents the trackball tool. The trackball tool of the control enables you to to interactively modify the 
            Elevation and Rotation parameters of the NProjection object of the chart.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.RotationStep">
            <summary>
            The change in the rotation parameter of the chart view when the user presses the left or right arrow buttons.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.ElevationStep">
            <summary>
            The change in the elevation parameter of the chart view when the user presses the up or down arrow buttons.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.RotateLeftShortcut">
            <summary>
            The keyboard command associated with left rotation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.RotateRightShortcut">
            <summary>
            The keyboard command associated with right rotation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.ElevateUpShortcut">
            <summary>
            The keyboard command associated with up elevation.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Tools.NTrackballTool.ElevateDownShortcut">
            <summary>
            The keyboard command associated with down elevation.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Processes the mouse move event
            </summary>
            <param name="args">mouse event arguments</param>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.CanActivate">
            <summary>
            Return true if dragging can start
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.OnActivated">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.OnDeactivated">
            <summary>
            Called when the tool was deactivated. Raises the Deactivated event
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Tools.NTrackballTool.GetActiveCursorAndTooltip(Nevron.Nov.UI.NCursor@,Nevron.Nov.UI.NTooltip@)">
            <summary>
            
            </summary>
            <param name="cursor"></param>
            <param name="toolTip"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_fRotationStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_fElevationStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_RotateLeftShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_RotateRightShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_ElevateUpShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_ElevateDownShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_StartRotation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_StartElevation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_SquareSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_StartPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.m_CenterPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.NTrackballToolSchema">
            <summary>
            Schema associated with NDataPanTool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.ElevationStepProperty">
            <summary>
            Reference to the ElevationStepProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.RotationStepProperty">
            <summary>
            Reference to the RotationStepProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.RotateLeftShortcutProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.RotateRightShortcutProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.ElevateUpShortcutProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.ElevateDownShortcutProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.defaultRotationStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.defaultElevationStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.c_DefaultRotateLeftShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.c_DefaultRotateRightShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.c_DefaultElevateUpShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Tools.NTrackballTool.c_DefaultElevateDownShortcut">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NVisualAid">
            <summary>
            A simple visual element, that draws a visual aid with verbatim parameters
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAid.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAid.CanClip">
            <summary>
            Overriden to return true.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAid.GetClip">
            <summary>
            Overriden to return the aid geometry bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Chart.NVisualAid.Visible">
            <summary>
            Gets or sets whether the aid is visible or not
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVisualAid.Stroke">
            <summary>
            Gets or sets the stroke with which the aid is displayed
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NVisualAid.Fill">
            <summary>
            Gets or sets the fill with which the aid is displayed
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAid.GetGeometryBounds">
            <summary>
            Must override to return the bounds of the visual aid geometry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAid.SkipBranchDisplayTraversal(Nevron.Nov.Dom.NDisplayVisitor)">
            <summary>
            Determines whether the context needs to visit this displayable branch.
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NVisualAid.NVisualAidSchema">
            <summary>
            Schema associated with NVisualAid
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NVisualAidCollection">
            <summary>
            A simple visual element, that draws a visual aid with verbatim parameters
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NVisualAidCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NVisualAidCollection.NVisualAidCollectionSchema">
            <summary>
            Schema associated NVisualAidCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAlignmentGuideline">
            <summary>
            Represents a chart alignment guideline
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAlignmentGuideline.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAlignmentGuideline.ContentSide">
            <summary>
            Gets or sets the content side(s) to align
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAlignmentGuideline.Targets">
            <summary>
            Gets or sets the alignment targets
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAlignmentGuideline.NAlignmentGuidelineSchema">
            <summary>
            Schema associated with NAlignmentGuideline 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAlignmentGuideline.ContentSideProperty">
            <summary>
            Reference to the ContentSide property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAlignmentGuideline.TargetsProperty">
            <summary>
            Reference to the Targets property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAlignmentGuidelineCollection">
            <summary>
            Represents a collection of alignment guidelines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAlignmentGuidelineCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAlignmentGuidelineCollection.#ctor(Nevron.Nov.Chart.NAlignmentGuidelineCollection)">
            <summary>
            Copy constructor
            </summary>
            <param name="source">The source object</param>
        </member>
        <member name="F:Nevron.Nov.Chart.NAlignmentGuidelineCollection.NAlignmentGuidelineCollectionSchema">
            <summary>
            Schema associated with NAlignmentGuidelineCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartDocument">
            <summary>
            Represents a document that contains a NRichText element
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartDocument.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartDocument.#ctor(Nevron.Nov.Chart.NChartViewSurface)">
            <summary>
            Initializer constructor
            </summary>
            <param name="content"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartDocument.NChartDocumentSchema">
            <summary>
            Schema associated with NChartDocument.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartPalette">
            <summary>
            Represents a theme for a chart.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartPalette.GetColors(Nevron.Nov.Chart.ENChartPalette)">
            <summary>
            Gets the colors associated with the specified palette
            </summary>
            <param name="palette"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.NevronPalette">
            <summary>
            Nevron
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.WinterPalette">
            <summary>
            Winter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.AutumnPalette">
            <summary>
            Autumn
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.BrightPalette">
            <summary>
            Bright
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.CoolPalette">
            <summary>
            Cool
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.DarkPalette">
            <summary>
            Dark
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.NaturePalette">
            <summary>
            Nature
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.PalePalette">
            <summary>
            Pale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.PastelPalette">
            <summary>
            Pastel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.RosePalette">
            <summary>
            Rose
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.WhitePalette">
            <summary>
            White
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.BlackPalette">
            <summary>
            Black
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartPalette.FreshPalette">
            <summary>
            Fresh
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartPrintLayout">
            <summary>
            Represents a chart print layout.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartPrintLayout.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartPrintLayout.GetDocumentBounds">
            <summary>
            Gets the bounds of the document content.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartPrintLayout.NChartPrintLayoutSchema">
            <summary>
            Schema associated with NChartPrintLayout.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartTheme">
            <summary>
            Represents a theme for a chart.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.#ctor">
            <summary>
            Default constructors
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.#ctor(Nevron.Nov.Chart.ENChartPalette)">
            <summary>
            Initializer constructor
            </summary>
            <param name="palette"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.#ctor(Nevron.Nov.Chart.ENChartPalette,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="palette"></param>
            <param name="colorDataPoints"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartTheme.Palette">
            <summary>
            Gets or sets the chart palette
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartTheme.ColorDataPoints">
            <summary>
            Gets or sets whether the palette will spread color across data points or series
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.GetThemeType">
            <summary>
            Overriden to return the "UI" string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.CreateTheme">
            <summary>
            Overriden to call the protected virtual methods that create the styles for the different UI elements.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.CreateSeriesRules">
            <summary>
            Creates the default empty data point rules
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.CreateDataPointRules">
            <summary>
            Creates the default data point rules
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartTheme.CreateAxisRules">
            <summary>
            Creates the default scale rules
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartTheme.NChartThemeSchema">
            <summary>
            Schema associated with NChartTheme.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartTheme.ThemeType">
            <summary>
            The UI theme type.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartView">
            <summary>
            A widget, which contains a chart document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.#ctor(Nevron.Nov.UI.NWidget)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.AccumulateContentDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            Appends the displayable children of the node to the provided list
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartView.Surface">
            <summary>
            A shortcut property to the document.Content, which attempts to get/set a document surface.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Overriden to make the content occupy the content area.
            </summary>
            <param name="ca">The content area.</param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.MeasureContent(System.Boolean)">
            <summary>
            Overriden to return the desired size of the content
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.ComputeWindowSize(Nevron.Nov.Graphics.NRectangle,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ca"></param>
            <param name="showHScrollBar"></param>
            <param name="showVScrollBar"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetHScrollBar">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetHScrollMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetNoScrollHAlign">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetNoScrollVAlign">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetTotalViewport">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetVScrollBar">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetVScrollMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetViewportOrigin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetZoomFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.GetZoomMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.ScrollInDirection(Nevron.Nov.Graphics.ENCompassDirection,System.Double)">
            <summary>
            
            </summary>
            <param name="direction"></param>
            <param name="steps"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.SetViewportOrigin(Nevron.Nov.Graphics.NPoint)">
            <summary>
            
            </summary>
            <param name="origin"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartView.SetZoomFactor(System.Double)">
            <summary>
            
            </summary>
            <param name="zoomFactor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartView.NChartViewSchema">
            <summary>
            Schema associated with NChartView
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartViewSurface">
            <summary>
            Represents a content holder widget that is placed inside the document, hosted by a document box.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.Information">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetSheetRangeModeText(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the context specific text representaton of the specified printRangeMode.
            </summary>
            <param name="bSlG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetSheetRangeModeSheetRange(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the range of sheets, which are going to be printed by the specified printRangeMode.
            </summary>
            <param name="CSlG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#CanHaveMultipleSheets">
            <summary>
            Always returns false, since the chart can not contain multiple sheets.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetSheetCount">
            <summary>
            Always returns 1, since the chart has one and only sheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetSheetTitle(System.Int32)">
            <summary>
            Gets the title of the page with the specified index.
            </summary>
            <param name="dSlG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetSheetPrintLayout(System.Int32)">
            <summary>
            Gets the print layout of the sheet with the specified index.
            </summary>
            <param name="ESlG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#SetSheetPrintLayout(System.Int32,Nevron.Nov.UI.NPrintLayout)">
            <summary>
            Sets the print layout of the sheet with the specified index.
            </summary>
            <param name="fSlG"></param>
            <param name="GSlG"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.Nevron#Nov#UI#INPrintLayoutElement#GetPrintLayoutTilingGridSet(Nevron.Nov.UI.ENSheetRangeMode)">
            <summary>
            Gets the set of tiling grids, for the current context print range mode.
            </summary>
            <param name="hSlG"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.PrintLayout">
            <summary>
            Gets/Sets the print layout.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.Charts">
            <summary>
            Gets the charts contained in this view
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.Legends">
            <summary>
            Gets the legends contained in this view
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.Titles">
            <summary>
            Gets the labels constained in this view
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartViewSurface.AlignmentGuidelines">
            <summary>
            Gets or sets the alignment guidelines of the chart document
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.CreatePredefinedChart(Nevron.Nov.Chart.ENPredefinedChartType)">
            <summary>
            Creates a predefined chart
            </summary>
            <param name="chartType"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.CreatePredefinedChart(Nevron.Nov.Chart.ENPredefinedChartType,System.Double,System.Double)">
            <summary>
            Creates a predefined chart
            </summary>
            <param name="chartType"></param>
            <param name="margins"></param>
            <param name="fontSize"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.ValidateMeasure">
            <summary>
            Overriden to synchronize dependent axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartViewSurface.ValidateArrange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartViewSurface.NChartViewSurfaceSchema">
            <summary>
            Schema associated with NChartViewSurface.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartViewSurface.PrintLayoutChild">
            <summary>
            Reference to the PrintLayout child.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartViewSurface.AlignmentGuidelinesProperty">
            <summary>
            Reference to the AlignmentGuidelines property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartViewSurface.InformationProperty">
            <summary>
            Reference to the Information property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENActiveStateIndicatorMode">
            <summary>
            Enumerates the modes in which the state indicator can operate
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENActiveStateIndicatorMode.AllActive">
            <summary>
            All active states are added to the indicator
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENActiveStateIndicatorMode.LastActive">
            <summary>
            Only the last active state is added
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENActiveStateIndicatorMode.FirstActive">
            <summary>
            Only the first active state is added
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENStateIndicatorShape">
            <summary>
            Enumerates the state indicator shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStateIndicatorShape.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStateIndicatorShape.Circle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENStateIndicatorOrientation">
            <summary>
            Enumerates the state indicator orientations
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStateIndicatorOrientation.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStateIndicatorOrientation.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPieSegmentShape">
            <summary>
            Enumerates the pie segment shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.Pie">
            <summary>
            pie slices are displayed as cylinder segments (default mode)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.Torus">
            <summary>
            pie slices are displayed as torus segments
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.SmoothEdgePie">
            <summary>
            pie slices are displayed as cylinder segments with smooth edges
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.CutEdgePie">
            <summary>
            pie slices are displayed as cylinder segments with cut edges
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.Ring">
            <summary>
            pie slices are displayed as ring segments
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.SmoothEdgeRing">
            <summary>
            pie slices are displayed as ring segments with smooth edges
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieSegmentShape.CutEdgeRing">
            <summary>
            pie slices are displayed as ring segments with cut edges
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENFunnelChartFitMode">
            <summary>
            Enumerates the funnel chart fit modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelChartFitMode.Stretch">
            <summary>
            The chart is stretched so that it fills the entire content area
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelChartFitMode.Aspect">
            <summary>
            The chart plot is fitted in the content area so that the plot maintains the specified aspect
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENReferenceLineDisplayMode">
            <summary>
            Defines the drawing modes for axis reference lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENReferenceLineDisplayMode.Line">
            <summary>
            The reference line is displayed as line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENReferenceLineDisplayMode.Plane">
            <summary>
            The reference line is displayed as plane
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRadarTitlePositionMode">
            <summary>
            Enumerates the radar title position modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRadarTitlePositionMode.Center">
            <summary>
            Title is positioned so that its center point lies on the radar axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRadarTitlePositionMode.NearestPoint">
            <summary>
            Title is positioned so that the nearest point of the title lies on the radar axis
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRadarMode">
            <summary>
            Enumerates the radar chart modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRadarMode.SingleMeasure">
            <summary>
            All Radar axes display the same quantative scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRadarMode.MultiMeasure">
            <summary>
            Each Radar axis displays a different quantative scale
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENHighLowAppearanceMode">
            <summary>
            Enumerates the high low appearance modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHighLowAppearanceMode.Generic">
            <summary>
            The filling and stroke of the high low segments are generic (taken from the data points)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHighLowAppearanceMode.HighLow">
            <summary>
            The filling and stroke of the high low segments is taken from the HighFill, LowFill, HighStroke and LowStroke properties of the series.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHighLowAppearanceMode.Palette">
            <summary>
            The filling is determined by a palette
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDropLineOriginMode">
            <summary>
            Enumerates the drop line origin modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDropLineOriginMode.ScaleMin">
            <summary>
            Scale min 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDropLineOriginMode.ScaleMax">
            <summary>
            Scale max
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDropLineOriginMode.CustomValue">
            <summary>
            Custom value
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENContourDisplayMode">
            <summary>
            Enumerates the contour display modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContourDisplayMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContourDisplayMode.Contour">
            <summary>
            Displays the connected contours
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContourDisplayMode.Dots">
            <summary>
            Displays the contour points
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENContourColorMode">
            <summary>
            Enumerates the contour color modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContourColorMode.Uniform">
            <summary>
            The contours are displayed with uniform color
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContourColorMode.Palette">
            <summary>
            The contours are displayed with color taken from the associated palette
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPaletteColorMode">
            <summary>
            Enumerates the palette color modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPaletteColorMode.Uniform">
            <summary>
            Colors is taken depending on the value and is applied to the whole object
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPaletteColorMode.Spread">
            <summary>
            The palette is spread on the object
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTreeMapNodeLegendMode">
            <summary>
            Enumerates the tree map node legend modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLegendMode.None">
            <summary>
            The node is not represented on the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLegendMode.Group">
            <summary>
            The node is represented on the legend by one entry 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLegendMode.ValueNodes">
            <summary>
            The group node adds its child nodes to the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLegendMode.GroupAndChildNodes">
            <summary>
            Both group and value nodes are exported to the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLegendMode.Palette">
            <summary>
            The group node adds a palette to the legend
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENChangePaletteMode">
            <summary>
            Enumerates the change palette modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChangePaletteMode.Absolute">
            <summary>
            The change is treated as an absolute value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChangePaletteMode.Percentage">
            <summary>
            The change is mapped to the palette using its percentage value
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENChangeValueType">
            <summary>
            Enumerates the change value types
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChangeValueType.Absolute">
            <summary>
            Treat the value as absolute
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChangeValueType.Percentage">
            <summary>
            Treat the value as percentage
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTreeMapHorizontalFillMode">
            <summary>
            Enumerates the horizontal fill modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapHorizontalFillMode.LeftToRight">
            <summary>
            Horizontal filling is left to right
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapHorizontalFillMode.RightToLeft">
            <summary>
            Horizontal filling is right to left
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTreeMapVerticalFillMode">
            <summary>
            Enumerates the vertical fill modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapVerticalFillMode.TopToBottom">
            <summary>
            Vertical filling is done top to bottom
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapVerticalFillMode.BottomToTop">
            <summary>
            Vertical filling is done bottom to top
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTreeMapNodeSortOrder">
            <summary>
            Enumerates the sort order of child tree map nodes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeSortOrder.Descending">
            <summary>
            Child tree map nodes are sorted in descending order (default)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeSortOrder.Ascending">
            <summary>
            Child tree map nodes are sorted in ascending order
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode">
            <summary>
            Enumerates the tree map label fit modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode.Hide">
            <summary>
            Automatically hides the label if its size exceeds the size of node
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode.Wrap">
            <summary>
            Wraps the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode.Ellipsis">
            <summary>
            Trims the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode.AutoScale">
            <summary>
            Automatically scales the label so that it fits the bounds of the node
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENFunnelShape">
            <summary>
            Enumerates the funnel shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelShape.Rectangle">
            <summary>
            Rectangle shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelShape.Trapezoid">
            <summary>
            Trapezoid shape
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENContentSide">
            <summary>
            Enumerates the content sides
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContentSide.Left">
            <summary>
            Left content side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContentSide.Top">
            <summary>
            Top content side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContentSide.Right">
            <summary>
            Right content side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENContentSide.Bottom">
            <summary>
            Bottom content side
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENVectorArrowheadShape">
            <summary>
            Enumerates the vector arrow head shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENVectorArrowheadShape.None">
            <summary>
            No arrowhead
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENVectorArrowheadShape.Arrow">
            <summary>
            Arrow
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENVectorArrowheadShape.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENHitTestMode">
            <summary>
            Enumerates the chart hit testing modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHitTestMode.Auto">
            <summary>
            The chart automatically decides whether to use vector or raster based image map
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHitTestMode.Vector">
            <summary>
            Always use vector image map
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENHitTestMode.Raster">
            <summary>
            Always use raster image map
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLineSegmentShape">
            <summary>
            Enumerates the line segment shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentShape.Line">
            <summary>
            Simple line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentShape.Tape">
            <summary>
            Line as tape (displayed as rectangles)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentShape.Tube">
            <summary>
            Line with tube segments (displayed as cylinders)
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLineSegmentMode">
            <summary>
            Enumerates the different line segment modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.StaightLine">
            <summary>
            The line segment is represented by a straight line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.VHStep">
            <summary>
            The line segment is represented by a vertical and then horizontal step line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.HVStep">
            <summary>
            The line segment is represented by a horizontal and then vertical step line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.VHAscentHVDescentStep">
            <summary>
            The lines segment is represented by a VH segment if the segment is ascending and HV step if it is descending
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.HVAscentVHDescentStep">
            <summary>
            The lines segment is represented by a HV segment if the segment is ascending and VH step if it is descending
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLineSegmentMode.Spline">
            <summary>
            The line segmented is represented by a spline
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPieLabelMode">
            <summary>
            Enumerates the pie label modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieLabelMode.Center">
            <summary>
            pie labels are displayed in the center of the pie segment
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieLabelMode.Rim">
            <summary>
            pie labels are displayed on the rim of the pie segment
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPieLabelMode.Spider">
            <summary>
            pie labels are displayed on equal X coordinate distance from the center 
            of the pie on the left and rights side depending on the pie segment middle angle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENFunnelLabelMode">
            <summary>
            Enumerates the funnel label modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelLabelMode.Left">
            <summary>
            Funnel labels are aligned to the left funnel rim
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelLabelMode.Center">
            <summary>
            Funnel labels are placed at the center
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelLabelMode.Right">
            <summary>
            Funnel labels are placed at the right funnel rim
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelLabelMode.LeftAligned">
            <summary>
            Funnel labels are placed at the left side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFunnelLabelMode.RightAligned">
            <summary>
            Funnel labels are placed at the right side
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPolarAxisDockZone">
            <summary>
            Enumerates the possible polar axis dock zones
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.OuterRim">
            <summary>
            Polar axis is docked to the outer rim of the polar circle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.InnerRim">
            <summary>
            Polar axis is docked to the inner rim of the polar circle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.Left">
            <summary>
            Polar axis is docked to the left of the polar model space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.Top">
            <summary>
            Polar axis is docked to the top of the polar model space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.Right">
            <summary>
            Polar axis is docked to the right of the polar model space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisDockZone.Bottom">
            <summary>
            Polar axis is docked to the bottom of the polar model space
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPolarAxis">
            <summary>
            Defines the standard axes of the polar chart. This enum is accepted by the Axes collection of the polar chart
            you access to the desired chart axis.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxis.PrimaryValue">
            <summary>
            The primary Y axis. By default it is positioned on the left side of the polar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxis.SecondaryValue">
            <summary>
            the secondary value axis. By default it is positioned on the right side of the polar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxis.PrimaryAngle">
            <summary>
            the primary angle axis. By default it is positioned on the outer rim of the polar.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxis.SecondaryAngle">
            <summary>
            the secondary angle axis. By default it is positioned on the outer rim of the polar.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPolarAxisOrientation">
            <summary>
            Enumerates the orientations of polar axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisOrientation.Angle">
            <summary>
            Polar axis is used to denote an angle in a polar coordinate space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPolarAxisOrientation.Value">
            <summary>
            Polar axis is used to denote a value in a polar coordinate space
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPredefinedChartType">
            <summary>
            Enumerates the predefined chart types
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.Cartesian">
            <summary>
            Cartesian chart type
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.Funnel">
            <summary>
            Funnel chart type
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.Pie">
            <summary>
            Pie chart type
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.Polar">
            <summary>
            Polar chart type
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.Radar">
            <summary>
            Radar chart type
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedChartType.TreeMap">
            <summary>
            Treemap chart type
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENStockGroupingMode">
            <summary>
            Enumerates the stock grouping modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStockGroupingMode.None">
            <summary>
            No grouping is performed
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStockGroupingMode.AutoDateTimeSpan">
            <summary>
            The grouping is performed using an automatically generated time span
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStockGroupingMode.CustomDateTimeSpan">
            <summary>
            The grouping is performed using a custom specified time span
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENStockGroupingMode.SynchronizeWithMajorTick">
            <summary>
            The grouping is performed using a time spans synchronized with the x axis major ticks
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCandleShape">
            <summary>
            Defines the shape of the candle. This custom type is accepted by the CandleStyle 
            property of the NStockSeries object.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCandleShape.Rectangle">
            <summary>
            The open and close values are the begin and end z coordinates of a rectangle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCandleShape.Stick">
            <summary>
            The open and close values are displayed as tick marks on the line connecting the high and low values
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode">
            <summary>
            Different appearance modes for the empty data points.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode.None">
            <summary>
            Empty data points are not displayed
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode.Normal">
            <summary>
            Empty data points are displayed as if they are normal data points
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode.Special">
            <summary>
            Empty data points are displayed with a special (user defined) filling and border styles
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENEmptyDataPointsLabelMode">
            <summary>
            Enumerates data label modes for the empty data points.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsLabelMode.Normal">
            <summary>
            empty data point labels are the same as normal data points' labels
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsLabelMode.Special">
            <summary>
            empty data points labels use a special data label style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode">
            <summary>
            Enumerates marker modes for the empty data points.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode.Normal">
            <summary>
            Empty data points markers are the same as normal data points' markers
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode.Special">
            <summary>
            Empty data points markers use a custom marker style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSeriesAppearanceMode">
            <summary>
            Enumerates the series appearance modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesAppearanceMode.Generic">
            <summary>
            The series uses the generic appearance logic.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesAppearanceMode.SeriesLogic">
            <summary>
            The appearance is based on a series-defined logic.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENChartWall">
            <summary>
            Enumerates the cartesian chart walls
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Left">
            <summary>
            left chart wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Right">
            <summary>
            right chart wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Front">
            <summary>
            front chart wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Back">
            <summary>
            back chart wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Top">
            <summary>
            top chart wall
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.Bottom">
            <summary>
            chart floor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.AllMask">
            <summary>
            All chart walls mask
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartWall.NoneMask">
            <summary>
            Indicates no chart wall
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENWallVisibilityMode">
            <summary>
            Enumerates the cartesian wall visibility modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWallVisibilityMode.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWallVisibilityMode.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWallVisibilityMode.Auto">
            <summary>
            Automatic 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENAxisVisibilityMode">
            <summary>
            Enumerates the axis visibility modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisVisibilityMode.Visible">
            <summary>
            The axis is always visible even if it is not currently in use
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisVisibilityMode.Hidden">
            <summary>
            The axis is hidden (not visible)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisVisibilityMode.Auto">
            <summary>
            The axis is visible when there are series that scale on it and hidden otherwise
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCartesianAxis">
            <summary>
            Defines the standard axes of the chart. This enum is accepted by the Axes collection of the chart
            you access to the desired chart axis.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxis.PrimaryY">
            <summary>
            The primary Y axis. By default it is positioned on the left front vertical corner of the charting area cube. Visible by default.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxis.SecondaryY">
            <summary>
            The secondary Y axis. By default it is positioned on the right back vertical corner of the charting area cube. Not visible by default.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxis.PrimaryX">
            <summary>
            The primary X axis. By default it is positioned on the bottom front horizontal corner of the charting area cube. Visible by default.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxis.SecondaryX">
            <summary>
            The secondary X axis. By default it is positioned on the top back horizontal corner of the charting area cube. Not visible by default.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxis.Depth">
            <summary>
            The depth axis. By default it is positioned on the right bottom depth corner of the charting area cube. Visible by default.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleBreakInflateMode">
            <summary>
            Enumerates the scale break inflate modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakInflateMode.Absolute">
            <summary>
            Inflates the scale on the left and right from the break with a specified amount
            so that the data in the left and right parts of the scale is not obscured by the 
            break.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakInflateMode.Relative">
            <summary>
            Represents a scale break inflate that will inflate the ranges on the 
            left and right of the scale break with a value relative to the scale 
            break range.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleBreakPositionMode">
            <summary>
            Enumerates the scale break position modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPositionMode.Content">
            <summary>
            Represents a scale break position, which is determined according to the 
            amount of data left on the sides of the scale break.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPositionMode.Percent">
            <summary>
            Represents a scale break position which is determined in percentages relative to the
            scale being split by the scale break. 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPositionMode.Range">
            <summary>
            /// Represents a scale break position which is determined relative to the
            range of the scale break in scale coordinates. 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleBreakStyle">
            <summary>
            Enumerates the scale break styles
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakStyle.Line">
            <summary>
            Line scale break style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakStyle.Wave">
            <summary>
            Wave scale break style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakStyle.ZigZag">
            <summary>
            Ziz zag scale break style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENOutOfBoundsLocationMode">
            <summary>
            Enumerates the different modes of treatment of proposed label locations that are partially out of the plot area bounds.
            Relates to automatic data label layout, initial label positioning.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENOutOfBoundsLocationMode.IgnoreLocation">
            <summary>
            Location proposals that are partially out of the plot bounds are ignored.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENOutOfBoundsLocationMode.PushWithinBounds">
            <summary>
            Location proposals that are partially out of the plot bounds are pushed within the bounds (if possible).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENOutOfBoundsLocationMode.UseLocation">
            <summary>
            Location proposals that are partially out of the plot bounds are used.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLabelLocation">
            <summary>
            Enumerates the initial label locations for automatic label layout.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.TopLeft">
            <summary>
            Top-Left
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.TopRight">
            <summary>
            Top-Right
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.BottomLeft">
            <summary>
            Bottom-Left
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelLocation.BottomRight">
            <summary>
            Bottom-Right
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENChartPalette">
            <summary>
            Enumerates the predefined chart palettes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Nevron">
            <summary>
            Nevron
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Winter">
            <summary>
            Winter
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Autumn">
            <summary>
            Autumn
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Bright">
            <summary>
            Bright
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Cool">
            <summary>
            Cool
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Dark">
            <summary>
            Dark
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Nature">
            <summary>
            Nature
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Pale">
            <summary>
            Pale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Pastel">
            <summary>
            Pastel
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Rose">
            <summary>
            Rose
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.White">
            <summary>
            White backgrounds and black / gray fillings
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Black">
            <summary>
            Black backgrounds and white fillings
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENChartPalette.Fresh">
            <summary>
            Fresh
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLegendMarkShape">
            <summary>
            Defines the possible legend mark shapes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.None">
            <summary>
            None (legend mark is not displayed)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Rectangle">
            <summary>
            Rectangle mark
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Triangle">
            <summary>
            Triangle mark
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.InvertedTriangle">
            <summary>
            Inverted triangle mark
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Ellipse">
            <summary>
            Ellipse mark
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Line">
            <summary>
            Simple line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.DiagonalCross">
            <summary>
            Diagonal cross 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.LineCross">
            <summary>
            A cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.LineDiagonalCross">
            <summary>
            A diagonal cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMarkShape.Asterisk">
            <summary>
            Asterisk
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSeriesLegendOrder">
            <summary>
            Defines how the legend items generated by the series are included in the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendOrder.Append">
            <summary>
            Items are added after the existing legend items
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendOrder.Prepend">
            <summary>
            Items are added before the existing legend items
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSeriesLegendMode">
            <summary>
            Defines the modes in which the series fills the legend. This custom type
            is used by the LegendMode property of the NSeriesLegendSettings object.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendMode.None">
            <summary>
            the series is not represented in the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendMode.Series">
            <summary>
            the series is represented in the legend by one series defined entry 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendMode.SeriesVisibility">
            <summary>
            the series is represented in the legend by one series defined entry (checkbox) which also controls its visibility
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendMode.DataPoints">
            <summary>
            the series adds its data points to the legend
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesLegendMode.SeriesLogic">
            <summary>
            the series adds series specific information in the legend describing the logic it uses
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLegendMode">
            <summary>
            Enumerates the modes in which the legend can display data.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMode.Disabled">
            <summary>
            the legend does not display any data
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMode.Automatic">
            <summary>
            the legend is automatically filled with items from the series displayed on the legend. This is the default
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendMode.Custom">
            <summary>
            the legend displays user defined items from the CustomItems collection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLegendExpandMode">
            <summary>
            Defines the legend expand strategies, or in other words in which dimension will the 
            legend grow when new items are added to the legend data item collection.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendExpandMode.RowsOnly">
            <summary>
            the legend expands by rows only. The legend has one column.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendExpandMode.ColsOnly">
            <summary>
            the legend expands by columns only. The legend has one row.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendExpandMode.RowsFixed">
            <summary>
            the legend has a fixed number of rows and expands in columns.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendExpandMode.ColsFixed">
            <summary>
            the legend has a fixed number of columns and expands in rows.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLegendInterlaceStyleType">
            <summary>
            The possible legend interlace styles.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendInterlaceStyleType.Row">
            <summary>
            Interlaced by rows
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLegendInterlaceStyleType.Col">
            <summary>
            Interlaced by cols
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENBarSizeMode">
            <summary>
            Enumerates the bar width modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarSizeMode.Fixed">
            <summary>
            The width of the bar is fixed to the value of Width property specified in dips
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarSizeMode.Scale">
            <summary>
            The width of the bar is computed as the scaled value of the the Width property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarSizeMode.MinGap">
            <summary>
            The width of the bar is dynamically computed based on the smallest x distance between two adjacent bars multipled by (1 - GapFactor).
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSeriesOriginMode">
            <summary>
            Defines the possible modes for evaluation of the series origin value.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesOriginMode.CustomOrigin">
            <summary>
            The series origin value is specified by the Origin property.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesOriginMode.MinValue">
            <summary>
            The series min value is used as a series origin.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesOriginMode.MaxValue">
            <summary>
            The series max value is used as a series origin.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesOriginMode.ScaleMin">
            <summary>
            The min scale value is used as a series origin.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSeriesOriginMode.ScaleMax">
            <summary>
            The max scale value is used as a series origin.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPredefinedCartesianAxis">
            <summary>
            Enumerates the predefined settings for cartesian axes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.Standard">
            <summary>
            Standard configuration using a pair of two Y axes in numeric mode, two X axes in ordinal and one depth ordinal axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XOrdinalYLinear">
            <summary>
            Represents a cartesian chart with two axes where the horizontal axis is ordinal and the vertical one is numeric (linear).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XDateTimeYLinear">
            <summary>
            Represents a cartesian chart with two axes where the horizontal axis is date time and the vertical one is numeric (linear).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XValueTimelineYLinear">
            <summary>
            Represents a cartesian chart with two axes where the horizontal axis is a date time value timeline axis and the vertical one is numeric (linear).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XRangeTimelineYLinear">
            <summary>
            Represents a cartesian chart with two axes where the horizontal axis is a date time range timeline axis and the vertical one is numeric (linear).
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XYLinear">
            <summary>
            Represents a cartesian chart with two xy numeric axes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.PrimaryAndSecondaryLinear">
            <summary>
            Represents a cartesian chart with four axes - two horizontal and two vertical docked at the sides of the chart plot. All axes are numeric.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.XYZLinear">
            <summary>
            Represents a Cartesian chart with three numeric (linear) axes of a standard 3D cartesian coordinate system
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedCartesianAxis.YLinearXZOrdinal">
            <summary>
            Represents a Cartesian chart with three axes of a standard 3D cartesian coordinate system with Y numeric (linear) axis and XZ ordinal axes.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPredefinedPolarAxes">
            <summary>
            Enumerates the predefined polar axes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedPolarAxes.AngleValue">
            <summary>
            Represents a polar chart with two axes - one value axis and one angle axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedPolarAxes.AngleValueSecondaryValue">
            <summary>
            Represents a polar chart with three axes - two value axes and one angle axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedPolarAxes.AngleSecondaryAngleValue">
            <summary>
            Represents a polar chart with three axes - two angle axes and one value axis
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENAxisViewRangeMode">
            <summary>
            Enumerates the axis range modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisViewRangeMode.Auto">
            <summary>
            The axis range is computed automatically
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisViewRangeMode.FixedMin">
            <summary>
            The axis maximum range value is computed automatically and the minimum range value is taken from the MinViewRangeValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisViewRangeMode.FixedMax">
            <summary>
            The axis minimum range value is computed automatically and the maximum range value is taken from the MaxViewRangeValue property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisViewRangeMode.FixedRange">
            <summary>
            The minimum and maximum range values are taken from MinRangeValue and MaxRangeValue properties respectively
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENAxisClipMode">
            <summary>
            Enumerates the axis clipping modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisClipMode.Auto">
            <summary>
            Clipping is automatically enabled depending on the current view and paging
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisClipMode.Always">
            <summary>
            Clipping is always enabled
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisClipMode.Never">
            <summary>
            Clipping is never enabled
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENBarShape">
            <summary>
            Enumerates the bar shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarShape.Rectangle">
            <summary>
            Bar shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarShape.Triangle">
            <summary>
            Triangle shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBarShape.InvertedTriangle">
            <summary>
            Inverted triangle shape
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPointShape2D">
            <summary>
            Enumerates the point shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Triangle">
            <summary>
            Cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.InvertedTriangle">
            <summary>
            Inverted cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.DiagonalCross">
            <summary>
            Diagonal cross 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.LineCross">
            <summary>
            A cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.LineDiagonalCross">
            <summary>
            A diagonal cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Asterisk">
            <summary>
            Asterisk
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape2D.Custom">
            <summary>
            Custom shape
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPointShape3D">
            <summary>
            Enumerates the point shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Cylinder">
            <summary>
            Cylinder
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Cone">
            <summary>
            Cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.InvertedCone">
            <summary>
            Inverted cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Pyramid">
            <summary>
            Pyramid
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.InvertedPyramid">
            <summary>
            Inverted pyramid
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Sphere">
            <summary>
            Sphere
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.DiagonalCross">
            <summary>
            Diagonal cross 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.LineCross">
            <summary>
            A cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.LineDiagonalCross">
            <summary>
            A diagonal cross rendered with lines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPointShape3D.Asterisk">
            <summary>
            Asterisk
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMultiBarMode">
            <summary>
            Enumerates the multi bar modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiBarMode.Series">
            <summary>
            This is a normal bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiBarMode.Stacked">
            <summary>
            The line is stacked on top of the previous bar in value mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiBarMode.StackedPercent">
            <summary>
            The bar is stacked on top of the previous bar in percent mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiBarMode.Clustered">
            <summary>
            The bar is clustered
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMultiLineMode">
            <summary>
            Enumerates the multi line modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiLineMode.Series">
            <summary>
            This is a normal line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiLineMode.Stacked">
            <summary>
            The line is stacked on top of the previous line in value mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiLineMode.StackedPercent">
            <summary>
            The line is stacked on top of the previous line value in percent mode
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMultiAreaMode">
            <summary>
            Enumerates the multi area modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiAreaMode.Series">
            <summary>
            This is a normal area
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiAreaMode.Stacked">
            <summary>
            The area is stacked on top of the previous line in value mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMultiAreaMode.StackedPercent">
            <summary>
            The area is stacked on top of the previous area value in percent mode
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCartesianChartOrientation">
            <summary>
            Enumerates the cartesian chart orientations
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartOrientation.Upward">
            <summary>
            The chart is oriented upwards.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartOrientation.RightToLeft">
            <summary>
            The chart is oriented from right to left
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartOrientation.LeftToRight">
            <summary>
            The chart is oriented from left to right
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCartesianChartFitMode">
            <summary>
            Enumerates the cartesian chart fit modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartFitMode.Stretch">
            <summary>
            The chart is stretched so that it fills the entire content area
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartFitMode.Aspect">
            <summary>
            The chart plot is fitted in the content area so that the plot maintains the specified aspect
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianChartFitMode.AspectWithAxes">
            <summary>
            The chart plot is fitted in the content area so that the plot and docked axes maintain the specified aspect
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCartesianAxisOrientation">
            <summary>
            Enumerates the cartesian axis orientations
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisOrientation.Horizontal">
            <summary>
            The axis is horizontal
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisOrientation.Vertical">
            <summary>
            The axis is vertical
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisOrientation.Depth">
            <summary>
            The axis is a depth axis
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENAxisCrossAlignment">
            <summary>
            Enumerates the axis cross alignments when using a model cross anchor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisCrossAlignment.Left">
            <summary>
            Left aligned
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisCrossAlignment.Center">
            <summary>
            Center aligned
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENAxisCrossAlignment.Right">
            <summary>
            Right aligned
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCartesianAxisDockZone">
            <summary>
            Defines the possible cartesian axis dock zones
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.FrontLeft">
            <summary>
            Front left vertical edge. Can be used for axes with vertical orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.FrontRight">
            <summary>
            Front right vertical edge. Can be used for axes with vertical orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BackRight">
            <summary>
            Back right vertical edge. Can be used for axes with vertical orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BackLeft">
            <summary>
            Back left vertical edge. Can be used for axes with vertical orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.FrontBottom">
            <summary>
            Front bottom horizontal edge. Can be used for axes with horizontal orientation. Default position of the PrimaryX axis.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.FrontTop">
            <summary>
            Front top horizontal edge. Can be used for axes with horizontal orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BackTop">
            <summary>
            Back top horizontal edge. Can be used for axes with horizontal orientation. Default position of the SecondaryX axis.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BackBottom">
            <summary>
            Back bottom horizontal edge. Can be used for axes with horizontal orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BottomRight">
            <summary>
            Bottom right depth edge. Can be used for axes with depth orientation. Default position of the Depth axis. 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.TopRight">
            <summary>
            Top right depth edge. Can be used for axes with depth orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.TopLeft">
            <summary>
            Top left depth edge. Can be used for axes with depth orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.BottomLeft">
            <summary>
            Bottom left depth edge. Can be used for axes with depth orientation.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.Left">
            <summary>
            Left dock zone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.Top">
            <summary>
            Top dock zone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.Right">
            <summary>
            Right dock zone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCartesianAxisDockZone.Bottom">
            <summary>
            Bottom dock zone
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENNeedleShape">
            <summary>
            Enumerates the needle shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Triangle">
            <summary>
            Traingle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.InvertedTriangle">
            <summary>
            Inverted triangle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Needle1">
            <summary>
            Needle 1
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Needle2">
            <summary>
            Needle 2
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Needle3">
            <summary>
            Needle 3
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENNeedleShape.Needle4">
            <summary>
            Needle 4
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENFirstRowGridStyle">
            <summary>
            Enumerates the first level label tick style modes of hierarchical scales
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFirstRowGridStyle.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFirstRowGridStyle.Individual">
            <summary>
            Individual
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFirstRowGridStyle.Separators">
            <summary>
            Separators
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFirstRowGridStyle.Group">
            <summary>
            Group
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENGroupRowGridStyle">
            <summary>
            Enumerates the group level label tick style modes of hierarchical scales
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGroupRowGridStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGroupRowGridStyle.Individual">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGroupRowGridStyle.Grid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGroupRowGridStyle.Bracket">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGroupRowGridStyle.Stick">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENTimelineScaleRowTickMode">
            <summary>
            Enumerates the tick modes of the first scale row
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTimelineScaleRowTickMode.AutoMinDistance">
            <summary>
            The first scale row is operating in auto step mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTimelineScaleRowTickMode.AutoMaxCount">
            <summary>
            The first scale row is operating in auto step mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENTimelineScaleRowTickMode.Custom">
            <summary>
            The first scale row is operating in custom step mode
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENBoundsMode">
            <summary>
            Possible modes for fitting a drawable object into a specified area.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBoundsMode.None">
            <summary>
            The object will not try to align to the chart area.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBoundsMode.Fit">
            <summary>
            The object will stretch along X and Y in order to fill as much as 
            possible of the area preserving the object original proportions.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENBoundsMode.Stretch">
            <summary>
            The object will stretch along X and Y in order to fill as much as 
            possible of the area without breaking outside. Does not 
            preserve the object original proportions.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDisplaySignMode">
            <summary>
            Enumerates the show sign modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplaySignMode.Never">
            <summary>
            The numeric indicator does not show sign extension
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplaySignMode.Always">
            <summary>
            The numeric indicator always shows sign extension
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplaySignMode.Negative">
            <summary>
            The numeric indicators shows a sign extension only 
            when the displayed value is negative
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDotCellStyle">
            <summary>
            Enumerates the styles of a dot segment cell
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDotCellStyle.Rectangle">
            <summary>
            Rectangular dot cell style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDotCellStyle.Circle">
            <summary>
            Circle dot cell style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDisplayDirection">
            <summary>
            Enumerates the display directions
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayDirection.LeftToRight">
            <summary>
            The display will create cells from left to right
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayDirection.RightToLeft">
            <summary>
            The display will create cells from right to left
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDisplayCellCountMode">
            <summary>
            Enumerates the display cell count mode
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayCellCountMode.Auto">
            <summary>
            The display will create as many cells as necessary to display the passed string
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayCellCountMode.Fixed">
            <summary>
            The display will create a fixed number of cells
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDisplayStyle">
            <summary>
            Enumerates the display styles
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.SevenSegmentNormal">
            <summary>
            Seven segment normal style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.SevenSegmentRounded">
            <summary>
            Cell segments appear rounded
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.SevenSegmentRectangular">
            <summary>
            Cell segments appear rectangular
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.FourteenSegmentNormal">
            <summary>
            Normal style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.FourteenSegmentRectangular">
            <summary>
            Rectangular style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.FourteenSegmentInset">
            <summary>
            Inset style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.MatrixRectangle">
            <summary>
            Matrix rectangular style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDisplayStyle.MatrixCircle">
            <summary>
            Matrix circular style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENFourteenSegmentCellStyle">
            <summary>
            Enumerates the segment cell styles for a 14 segment cell display
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFourteenSegmentCellStyle.Normal">
            <summary>
            Normal style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFourteenSegmentCellStyle.Rectangular">
            <summary>
            Rectangular style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENFourteenSegmentCellStyle.Inset">
            <summary>
            Inset style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMatrixCellStyle">
            <summary>
            Enumerates the styles of a matrix display cell
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMatrixCellStyle.Rectangle">
            <summary>
            Rectangular cell style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMatrixCellStyle.Circle">
            <summary>
            Circle cell style
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSevenSegmentCellStyle">
            <summary>
            Enumerates the segment cell styles for a 7 segment cell display
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSevenSegmentCellStyle.Normal">
            <summary>
            Normal style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSevenSegmentCellStyle.Rounded">
            <summary>
            Cell segments appear rounded
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSevenSegmentCellStyle.Rectangular">
            <summary>
            Cell segments appear rectangular
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRangeIndicatorShape">
            <summary>
            Enumerates the range indicator shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeIndicatorShape.Path">
            <summary>
            The range indicator is painted as a continuous path
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeIndicatorShape.Bar">
            <summary>
            The range indicator is painted as a bar
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENDialShape">
            <summary>
            Enumerates the rim shapes 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDialShape.Circle">
            <summary>
            The border of the radial gauge is always circle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDialShape.CutCircle">
            <summary>
            The border of the radial gauge is a circle cut from begin angle to end angle
            </summary>
            <remarks>
            end angle is computed as begin angle + sweep angle
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.ENDialShape.RoundedOutline">
            <summary>
            The gauge border follows the outline of the radial gauge, with specified rounding
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRangeIndicatorOriginMode">
            <summary>
            Defines the orgin of a range indicator
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeIndicatorOriginMode.ScaleMin">
            <summary>
            Scale min
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeIndicatorOriginMode.ScaleMax">
            <summary>
            Scale max
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeIndicatorOriginMode.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCircularRimPattern">
            <summary>
            Enumerates the knob rim patterns
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.RoundHandle">
            <summary>
            Rounded handle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.RoundHandleSmall">
            <summary>
            Small rounded handle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.EdgeHandle">
            <summary>
            Edge handle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.EdgeHandleSmall">
            <summary>
            Small edge handle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCircularRimPattern.Bolt">
            <summary>
            Bolt
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCapEffectShape">
            <summary>
            Defines the shape of paint effect 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapEffectShape.Region">
            <summary>
            The effect shape is the same as the background region
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapEffectShape.Rectangle">
            <summary>
            The effect shape is a rectangle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapEffectShape.Ellipse">
            <summary>
            The effect shape is an ellipse
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapEffectShape.RoundedRect">
            <summary>
            The effect shape is a rounded rectangle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENKnobMarkerPaintOrder">
            <summary>
            Enumerates the knob marker paint orders
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENKnobMarkerPaintOrder.BeforeRims">
            <summary>
            Marker is painted before rims
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENKnobMarkerPaintOrder.BetweenRims">
            <summary>
            Marker is painted between the outer and inner rims
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENKnobMarkerPaintOrder.AfterRims">
            <summary>
            Marker is painted after rims
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENIndicatorOffsetOriginMode">
            <summary>
            Enumerates the offset orgins of indicators (marker, needle, range and knob)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorOffsetOriginMode.ScaleBegin">
            <summary>
            Origin is relative to the begin
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorOffsetOriginMode.ScaleMiddle">
            <summary>
            Origin is relative to the middle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorOffsetOriginMode.ScaleEnd">
            <summary>
            Origin is relative to the end
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENIndicatorPaintOrder">
            <summary>
            Enumerates the gauge indicators paint order
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorPaintOrder.BeforeScale">
            <summary>
            The indicator is painted before the scale it is attached to
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorPaintOrder.AfterScale">
            <summary>
            The indicator is painted after the scale it is attached to
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENIndicatorPaintOrder.PostPaint">
            <summary>
            The indicator is painted in during the gauge post paint 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENGaugeAxisDockZone">
            <summary>
            Defines the possible gauge axis dock zones
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGaugeAxisDockZone.Top">
            <summary>
            Top zone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENGaugeAxisDockZone.Bottom">
            <summary>
            Bottom zone
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLinearGaugeOrientation">
            <summary>
            Enumerates the linear gauge orientations
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLinearGaugeOrientation.Horizontal">
            <summary>
            The linear gauge is horizontal
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLinearGaugeOrientation.Vertical">
            <summary>
             The linear gauge is vertical
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENPredefinedScaleStyle">
            <summary>
            Enumerates the predefined scale styles
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.Standard">
            <summary>
            Standard - four types of ticks (inner major, outer major, inner minor, outer minor)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.Scientific">
            <summary>
            Scientific - two types of ticks outer major and outer minor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.Presentation">
            <summary>
            Presentation scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.PresentationNoStroke">
            <summary>
            Presentation scale, with no stroke style applied on ruler and ticks
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.Watch">
            <summary>
            Presentation scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENPredefinedScaleStyle.Ruler">
            <summary>
            Presentation scale
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMajorTickMode">
            <summary>
            Defines the possible step modes of the numeric axis scale.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMajorTickMode.AutoMinDistance">
            <summary>
            The scale will automatically generate steps depending on the setting provided by the MinTickDistance property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMajorTickMode.AutoMaxCount">
            <summary>
            The scale will automatically generate steps depending on the setting of the MaxTickCount property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMajorTickMode.CustomTicks">
            <summary>
            In this mode the user specifies the values which must be represented with major ticks
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMajorTickMode.CustomStep">
            <summary>
            The user specifies a custom step which is used in the major tick generation
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMajorTickMode.CustomSteps">
            <summary>
            the user specifies a custom steps which are used in the major tick generation
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleLevelBuildMode">
            <summary>
            Defines how the scale configurator will build scale levels 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelBuildMode.Standard">
            <summary>
            Standard build mode - ticks, labels and ruler are in separate levels
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelBuildMode.TicksAndRuler">
            <summary>
            Ticks and ruler share a common level, labels are in a seperate one
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelBuildMode.LabelsAndRuler">
            <summary>
            All scale decorations share a single scale level
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLabelGenerationMode">
            <summary>
            Enumerates the possible label generation options
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelGenerationMode.SingleLevel">
            <summary>
            All labels are generated in one scale level
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelGenerationMode.Stagger2">
            <summary>
            Labels are generated in two scale levels, thus producing a two level staggering effect
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLabelGenerationMode.Stagger3">
            <summary>
            Labels are generated in three scale levels, thus producing a three level staggering effect
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleViewRangeInflateMode">
            <summary>
            Enumerates the scale view range inflate modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleViewRangeInflateMode.None">
            <summary>
            The range is not extenteded
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleViewRangeInflateMode.MajorTick">
            <summary>
            The range is extended to the first major tick
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleViewRangeInflateMode.MajorTickExtend">
            <summary>
            The range is extended to the first major tick. 
            </summary>
            <remarks>
            If the current range ends on a major tick is extedned to the next tick
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleViewRangeInflateMode.Logical">
            <summary>
            Logical inflate
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleViewRangeInflateMode.Absolute">
            <summary>
            Absolute inflate
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENSamplingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSamplingMode.MinDistance">
            <summary>
            The sampler automatically generates the step so that it does not exceed 
            a specified density in device units
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSamplingMode.MaxCount">
            <summary>
            The sampler automatically generates a step so that it does not exceed
            a specified maximum number of ranges.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSamplingMode.CustomValues">
            <summary>
            The sampler uses the provided ranges to sample a given range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSamplingMode.CustomStep">
            <summary>
            The user specifies a custom step which is used to sample a given range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENSamplingMode.CustomSteps">
            <summary>
            The user specifies a set of custom steps which are used to sample a given range
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENLevelLabelsLayout">
            <summary>
            Enumerates the possible label overlap resolve layouts
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.Rotate30">
            <summary>
            Labels in the same level are rotated at 30 degrees
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.Rotate45">
            <summary>
            Labels in the same level are rotated at 45 degrees
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.Rotate90">
            <summary>
            Labels in the same level are rotated at 90 degrees
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.Stagger2">
            <summary>
            Labels in the same level are staggered at two levels
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.Stagger3">
            <summary>
            Labels in the same level are staggered at three levels
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.RemoveOverlap">
            <summary>
            Removes labels that overlap with other labels with higher Z order
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENLevelLabelsLayout.AutoScale">
            <summary>
            Labels in the same level are scaled so that no overlapping occurs
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleRangeOrderType">
            <summary>
            Enumerates the types of a scale range order
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRangeOrderType.View">
            <summary>
            The order of the range in the scale view
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRangeOrderType.Logical">
            <summary>
            The order of the range relative to the range sampler origin
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleRulerShape">
            <summary>
            Defines the shape of the axis level axes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRulerShape.None">
            <summary>
            The level is not displayed
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRulerShape.Line">
            <summary>
            the level is displayed as a simple line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRulerShape.Bar">
            <summary>
            the level is displayed as a bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleRulerShape.Tube">
            <summary>
            the level is displayed as a tube
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENCapShape">
            <summary>
            Enumerates the possible cap styles
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.Arrow">
            <summary>
            Arrow
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.LeftCrossLine">
            <summary>
            Left cross line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.RightCrossLine">
            <summary>
            Right cross line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENCapShape.VerticalLine">
            <summary>
            Vertical line
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENExtendRangeMode">
            <summary>
            Enumerates the extend range modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENExtendRangeMode.Auto">
            <summary>
            The control automatically decides whether to extend the range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENExtendRangeMode.Always">
            <summary>
            The range is always extended
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENExtendRangeMode.Never">
            <summary>
            The range is never extended
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleOrientation">
            <summary>
            Defines the scale orientation
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleOrientation.Auto">
            <summary>
            Scale orientation is automatically determined
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleOrientation.Right">
            <summary>
            Scale is right oriented. That is all decorations after the origin level are on its right side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleOrientation.Left">
            <summary>
            Scale is left oriented. That is all decorations after the origin level are on its left side
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleOrientationInternal">
            <summary>
            Defines the scale orientation
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleOrientationInternal.Right">
            <summary>
            Scale is right oriented. That is all decorations after the origin level are on its right side
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleOrientationInternal.Left">
            <summary>
            Ruler is left oriented. That is all decorations after the origin level are on its left side
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleBreakPattern">
            <summary>
            Enumerates the patterns for a scale break 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.Regular">
            <summary>
            Regular Pattern
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.LongShort">
            <summary>
            Long Short pattern
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.LeftPowerBrake">
            <summary>
            Left power break pattern
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.RightPowerBrake">
            <summary>
            Right power break pattern
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.CenterPowerBrake">
            <summary>
            Center power break pattern
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleBreakPattern.FreeHand">
            <summary>
            Free hand pattern
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode">
            <summary>
            Enumerates the range label tick visibility modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode.Auto">
            <summary>
            Tick visibility is automatically determined
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode.Always">
            <summary>
            Ticks are always visible
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRangeLabelTickMode">
            <summary>
            Enumerates the possible range label tick modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.None">
            <summary>
            The range label does not render ticks
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.Separators">
            <summary>
            The range label tick is visualized as two separators at the 
            begin and end of the range annotated by the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.BeginSeparator">
            <summary>
            The range label tick is visualized as a single separator
            annotating the begin value of the range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.EndSeparator">
            <summary>
            The range label tick is visualized as a single separator
            annotating the begin value of the range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.Top">
            <summary>
            The range label tick is attached to the top of the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.Center">
            <summary>
            The range label tick is attached to the center of the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelTickMode.Bracket">
            <summary>
            The range label tick is visualized as two brackets enclosing
            the label
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENRangeLabelFitMode">
            <summary>
            Enumerates the range label fit modes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelFitMode.None">
            <summary>
            The label does not try to auto fit
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelFitMode.Wrap">
            <summary>
            The label wraps in the specified range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelFitMode.Clip">
            <summary>
            The label is clipped in the specified range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelFitMode.AutoFlip">
            <summary>
            The label will automatically flip
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENRangeLabelFitMode.AutoScale">
            <summary>
            The label will automatically scale
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleValueMarkerShape">
            <summary>
            Enumerates the tick shapes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Line">
            <summary>
            Simple Line 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Bar">
            <summary>
            regular bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Triangle">
            <summary>
            cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.InvertedTriangle">
            <summary>
            inverted cone
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Ellipse">
            <summary>
            ellipse
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Cross">
            <summary>
            cross
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.DiagonalCross">
            <summary>
            a diagonal cross 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.LineCross">
            <summary>
            a cross shape with no filling
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.LineDiagonalCross">
            <summary>
            a diagonal cross shape with no filling
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleValueMarkerShape.Star">
            <summary>
            star
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleLabelAngleMode">
            <summary>
            Defines how axis labels are oriented depending on the scale they belong to
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelAngleMode.View">
            <summary>
            The label angle is specified in view space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelAngleMode.Scale">
            <summary>
            The label angle is specified in scale space
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleLabelVisibilityMode">
            <summary>
            Enumerates the range label visilibty modes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelVisibilityMode.Always">
            <summary>
            The label is always visible regardless of its position on the scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelVisibilityMode.CenterInRuler">
            <summary>
            The label is visible when its center is inside the scale range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelVisibilityMode.TextInRuler">
            <summary>
            The label is visible when its text bounds are completely inside the scale range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLabelVisibilityMode.TextIntersectsRuler">
            <summary>
            The label is visible when it intersects the scale range
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleType">
            <summary>
            Enumerates the scale types
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.Ordinal">
            <summary>
            Ordinal scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.Linear">
            <summary>
            Linear scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.DateTime">
            <summary>
            DateTime scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.ValueTimeline">
            <summary>
            ValueTimeline scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.RangeTimeline">
            <summary>
            RangeTimeline scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleType.Angle">
            <summary>
            Angle scale
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENScaleLevelShape">
            <summary>
            Defines the shape of the axis level axes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelShape.None">
            <summary>
            The level is not displayed
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelShape.Line">
            <summary>
            the level is displayed as a simple line
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelShape.Bar">
            <summary>
            the level is displayed as a bar
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENScaleLevelShape.Tube">
            <summary>
            the level is displayed as a tube
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENWeekDayBit">
            <summary>
            Enumerates the week days
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.None">
            <summary>
            No week day
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Monday">
            <summary>
            The day Monday.  
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Tuesday">
            <summary>
            The day Tuesday.  
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Wednesday">
            <summary>
            The day Wednesday.  
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Thursday">
            <summary>
            The day Thursday
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Friday">
            <summary>
            The day Friday.  
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Saturday">
            <summary>
            The day Saturday
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.Sunday">
            <summary>
            The day Sunday
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENWeekDayBit.All">
            <summary>
            All days
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.ENMonthBit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.January">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.February">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.March">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.April">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.May">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.June">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.July">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.August">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.September">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.October">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.November">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.December">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.ENMonthBit.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartHitTestImageExporter">
            <summary>
            Exports a chart to a raster image for hit testing purposes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartHitTestImageExporter.#ctor(Nevron.Nov.Chart.NChart)">
            <summary>
            Creates a new chart raster image exporter, which renders the content of the chart view surface.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartHitTestImageExporter.#ctor(Nevron.Nov.Chart.NChart,Nevron.Nov.IO.NFile)">
            <summary>
            Creates a new chart raster image exporter, which renders the content of the chart view surface.
            </summary>
            <param name="chart"></param>
            <param name="file"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartHitTestImageExporter.GetDocumentContentBounds">
            <summary>
            Gets the chart view surface bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartHitTestImageExporter.CreateExportDialog(Nevron.Nov.UI.NWindow)">
            <summary>
            Creates the export dialog.
            </summary>
            <param name="ownerWindow"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartImageExportDialog">
            <summary>
            A dialog with settings and preview for exporting a chart to image.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartImageExportDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.Export.NChartImageExportDialog.NChartImageExportDialogSchema">
            <summary>
            Schema associated with NChartImageExportDialog.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartRasterImageExporter">
            <summary>
            Exports a chart view surface to a raster image such as PNG, JPEG, BMP, etc.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartRasterImageExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface)">
            <summary>
            Creates a new chart raster image exporter, which renders the content of the chart view surface.
            </summary>
            <param name="chartViewSurface"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartRasterImageExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface,Nevron.Nov.IO.NFile)">
            <summary>
            Creates a new chart raster image exporter, which renders the content of the chart view surface.
            </summary>
            <param name="chartViewSurface"></param>
            <param name="file"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartRasterImageExporter.GetDocumentContentBounds">
            <summary>
            Gets the chart view surface bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartRasterImageExporter.CreateExportDialog(Nevron.Nov.UI.NWindow)">
            <summary>
            Creates the export dialog.
            </summary>
            <param name="ownerWindow"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartVectorImageExporter">
            <summary>
            Exports a chart view surface to a vector image such as SVG, Enhanced Metafile (EMF) or AutoCAD DXF.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartVectorImageExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface)">
            <summary>
            Creates a new chart view surface vector image exporter, which renders a chart view.
            </summary>
            <param name="chartViewSurface"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartVectorImageExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface,Nevron.Nov.IO.NFile)">
            <summary>
            Creates a new chart view surface vector image exporter, which renders a chart view.
            </summary>
            <param name="chartViewSurface"></param>
            <param name="file"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartVectorImageExporter.GetDocumentContentBounds">
            <summary>
            Gets the chart view surface bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartVectorImageExporter.CreateExportDialog(Nevron.Nov.UI.NWindow)">
            <summary>
            Creates the export dialog.
            </summary>
            <param name="ownerWindow"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartPdfExporter">
            <summary>
            Exports the chart to to PDF.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartPdfExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="chart">The chart to export.</param>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartPdfExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface,Nevron.Nov.IO.NFile)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="chart">The chart to export.</param>
            <param name="targetFile">The file to export to.</param>
        </member>
        <member name="T:Nevron.Nov.Chart.Export.NChartPrintExporter">
            <summary>
            Faciliates the printing of a chart document.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Export.NChartPrintExporter.#ctor(Nevron.Nov.Chart.NChartViewSurface)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="T:Nevron.Nov.Chart.Formats.NChartFormat">
            <summary>
            The base of all chart formats.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Formats.NChartFormat.NevronBinary">
            <summary>
            Represents the Nevron Binary chart format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Formats.NChartFormat.NevronXml">
            <summary>
            Represents the Nevron XML chart format.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Formats.NChartFormatRegistry">
            <summary>
            A document format registry for chart Formats - such as XML and Binary chart formats.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Formats.NChartFormatRegistry.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.Formats.NChartFormatRegistry.DefaultFormatExtension">
            <summary>
            Gets the fallback format extension of document format registry.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.Formats.NChartFormatRegistry.GetDocumentTypeName">
            <summary>
            Gets the document type name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.Formats.NChartLoadSettings">
            <summary>
            This class holds the settings for loading charts
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.Formats.NChartSaveSettings">
            <summary>
            This class holds the settings that are used when saving
            documents to different text formats.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDockGaugeAxisAnchor">
            <summary>
            Docks a gauge axis to one of the two gauge axis dock zones (Top or Bottom), thereby reducing the 
            space avaialable for the gauge content.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockGaugeAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockGaugeAxisAnchor.#ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockGaugeAxisAnchor.#ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockGaugeAxisAnchor.#ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone,System.Boolean,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDockGaugeAxisAnchor.#ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone,System.Boolean,Nevron.Nov.Chart.ENScaleOrientation,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="dockZone"></param>
            <param name="createNewZoneLevel"></param>
            <param name="scaleOrientation"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockGaugeAxisAnchor.DockZone">
            <summary>
            Gets or sets the axis position (zone) the axis is placed into
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockGaugeAxisAnchor.BeforeSpace">
            <summary>
            Specifies spacing of the level before the other levels in the zone (if any)
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockGaugeAxisAnchor.AfterSpace">
            <summary>
            Specifies spacing that should be leaved after the level of the axis before other 
            levels are added in the zone.
            </summary>
            <remarks>
            This property takes effect only when the property CreateNewZoneLevel is set to true.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDockGaugeAxisAnchor.CreateNewZoneLevel">
            <summary>
            Gets or sets a value indicating whether this anchor will create a new 
            zone level for the axis or use the last created one.
            </summary>
            <remarks>
            If there are no levels in the zone the anchor will always create a zone 
            level. Note that the BeforeSpace and AfterSpace properties depend on the 
            value of this property.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockGaugeAxisAnchor.NDockGaugeAxisAnchorSchema">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockGaugeAxisAnchor.DockZoneProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockGaugeAxisAnchor.CreateNewZoneLevelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockGaugeAxisAnchor.BeforeSpaceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDockGaugeAxisAnchor.AfterSpaceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGaugeAxisAnchor">
            <summary>
            The base for all gauge anchors
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGaugeAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGaugeAxisAnchor.#ctor(System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NGaugeAxisAnchor.NGaugeAxisAnchorSchema">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NModelGaugeAxisAnchor">
            <summary>
            Positions a gauge axis in gauge model space, without reducing the space available for the 
            gauge content.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NModelGaugeAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NModelGaugeAxisAnchor.#ctor(System.Double,Nevron.Nov.ENVerticalAlignment,Nevron.Nov.Chart.ENScaleOrientation)">
            <summary>
            Initializer constructor
            </summary>
            <param name="position"></param>
            <param name="origin"></param>
            <param name="orientation"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NModelGaugeAxisAnchor.#ctor(System.Double,Nevron.Nov.ENVerticalAlignment,Nevron.Nov.Chart.ENScaleOrientation,System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="position"></param>
            <param name="origin"></param>
            <param name="orientation"></param>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NModelGaugeAxisAnchor.Position">
            <summary>
            Gets / sets the position of the model anchor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NModelGaugeAxisAnchor.Origin">
            <summary>
            Gets / sets the origin of the anchor relative to the gauge model space
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelGaugeAxisAnchor.NModelGaugeAxisAnchorSchema">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelGaugeAxisAnchor.PositionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NModelGaugeAxisAnchor.OriginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGaugeAxis">
            <summary>
            Represents a gauge axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGaugeAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGaugeAxis.Anchor">
            <summary>
            Gets or sets the anchor controlling the placement of the gauge axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGaugeAxis.Range">
            <summary>
            Gets or sets the range displayed by this axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGaugeAxis.NGaugeAxisSchema">
            <summary>
            Reference to the NGaugeAxis schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGaugeAxis.AnchorProperty">
            <summary>
            Reference to the Anchor property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGaugeAxis.RangeProperty">
            <summary>
            Reference to the Range property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGaugeAxisCollection">
            <summary>
            Represents a collection of gauge axis elements
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGaugeAxisCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGaugeAxisCollection.NGaugeAxisCollectionSchema">
            <summary>
            Reference to NGaugeAxisCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCapEffect">
            <summary>
            The base of all effects that can be applied after a shape or panel is painted on
            a 2D drawing surface
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCapEffect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCapEffect.#ctor(Nevron.Nov.Chart.ENCapEffectShape)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCapEffect.Shape">
            <summary>
            Gets/sets the paint effect shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCapEffect.CornerRounding">
            <summary>
            Gets/sets the corner rounding when Shape is RoundedRect
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCapEffect.NCapEffectSchema">
            <summary>
            Reference to the NCapEffect schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCapEffect.ShapeProperty">
            <summary>
            Reference to ShapeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCapEffect.CornerRoundingProperty">
            <summary>
            Reference to CornerRoundingProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGelCapEffect">
            <summary>
            Represent a gel effect applied of a shape
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGelCapEffect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGelCapEffect.#ctor(Nevron.Nov.Chart.ENCapEffectShape)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NGelCapEffect.Margins">
            <summary>
            Gets/sets the margins of the gel effect relative to the shape it is applied to
            </summary>
            <remarks>
            The margins are specified as a value in the range [0, 1]
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NGelCapEffect.BeginColor">
            <summary>
            Gets/sets the color of the appearance
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGelCapEffect.EndColor">
            <summary>
            Gets/sets the end color of gel effect
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGelCapEffect.NGelCapEffectSchema">
            <summary>
            Reference to 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGelCapEffect.BeginColorProperty">
            <summary>
            Reference to 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGelCapEffect.EndColorProperty">
            <summary>
            Reference to 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGelCapEffect.MarginsProperty">
            <summary>
            Reference to 
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGlassCapEffect">
            <summary>
            Represents a paint effect that emulates the reflection of glass cap over a shape
            lit from a controllable direction
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGlassCapEffect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGlassCapEffect.#ctor(Nevron.Nov.Chart.ENCapEffectShape)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGlassCapEffect.#ctor(Nevron.Nov.NAngle,Nevron.Nov.NAngle)">
            <summary>
            Initializer constructor
            </summary>
            <param name="lightDirection"></param>
            <param name="lightSpread"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGlassCapEffect.#ctor(Nevron.Nov.Graphics.NColor,Nevron.Nov.Graphics.NColor)">
            <summary>
            Initializer constructor
            </summary>
            <param name="lightColor"></param>
            <param name="darkColor"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.LightColor">
            <summary>
            The color of the glass edge effect on the lit side
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.DarkColor">
            <summary>
            Gets/sets the color of the glass edge effect on the dark side
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.LightDirection">
            <summary>
            Gets/sets the direction of the light (in degrees) 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.LightSpread">
            <summary>
            Gets/sets the spread (in degrees) of the light applied at the specified direction
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.EdgeDepth">
            <summary>
            Gets/sets the depth of glass edge effect
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGlassCapEffect.EdgeOffset">
            <summary>
            Gets/sets the offset of the glass edge effect from the shape bounds
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGlassCapEffect.CreateSpotlightFill(System.Boolean,Nevron.Nov.Graphics.NColor)">
            <summary>
            Creates a fill style resembling a spot light
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.NGlassCapEffectSchema">
            <summary>
            Reference to the NGlassCapEffectSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.LightDirectionProperty">
            <summary>
            Reference to the LightDirectionProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.LightSpreadProperty">
            <summary>
            Reference to the LightSpreadProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.EdgeDepthProperty">
            <summary>
            Reference to the EdgeDepthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.EdgeOffsetProperty">
            <summary>
            Reference to the EdgeOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.LightColorProperty">
            <summary>
            Reference to the LightColorProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGlassCapEffect.DarkColorProperty">
            <summary>
            Reference to the DarkColorProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDial">
            <summary>
            Represents a border applied around an an object (shape or panel)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDial.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDial.#ctor(Nevron.Nov.Chart.NDialRim)">
            <summary>
            Initializer constructor
            </summary>
            <param name="rim"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDial.#ctor(Nevron.Nov.Chart.ENDialShape,Nevron.Nov.Chart.NDialRim)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
            <param name="rim"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDial.BackgroundFill">
            <summary>
            Gets / sets the background fill
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDial.Rim">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDial.CornerRounding">
            <summary>
            Gets / sets the corner rounding when Shape is RoundedRect
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDial.CenterRounding">
            <summary>
            Gets / sets the center rounding when shape is circle or cut circle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDial.Shape">
            <summary>
            Gets / sets the shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.NDialSchema">
            <summary>
            Reference to NDialSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.BackgroundFillProperty">
            <summary>
            Reference to BackgroundFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.ShapeProperty">
            <summary>
            Reference to ShapeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.RimProperty">
            <summary>
            Reference to RimProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.CornerRoundingProperty">
            <summary>
            Reference to CornerRoundingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDial.CenterRoundingProperty">
            <summary>
            Reference to CenterRoundingProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDialRim">
            <summary>
            Represents a border applied around an an object (shape or panel)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDialRim.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDialRim.NDialRimSchema">
            <summary>
            Reference to NDialRimSchema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NEdgeDialRim">
            <summary>
            Represents a border  consisting of three stripes with controllable filling and width
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NEdgeDialRim.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.OuterStroke">
            <summary>
            Gets/sets the stroke  applied to the outer side of the outline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.InnerStroke">
            <summary>
            Gets/sets the stroke  applied to the inner side of the outline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.OuterBevelWidth">
            <summary>
            Gets/sets the width of the outer bevel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.MiddleBevelWidth">
            <summary>
            Gets/sets the width of the middle bevel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.InnerBevelWidth">
            <summary>
            Gets/sets the width of the inner bevel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.OuterBevelFill">
            <summary>
            Gets/sets the fill  the outer bevel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.MiddleBevelFill">
            <summary>
            Gets/sets the fill  the middle bevel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NEdgeDialRim.InnerBevelFill">
            <summary>
            Gets/sets the fill  the inner bevel
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.NEdgeDialRimSchema">
            <summary>
            Reference to NEdgeDialRimSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.OuterStrokeProperty">
            <summary>
            Reference to OuterStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.InnerStrokeProperty">
            <summary>
            Reference to InnerStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.OuterBevelWidthProperty">
            <summary>
            Reference to OuterBevelWidthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.MiddleBevelWidthProperty">
            <summary>
            Reference to MiddleBevelWidthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.InnerBevelWidthProperty">
            <summary>
            Reference to InnerBevelWidthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.OuterBevelFillProperty">
            <summary>
            Reference to OuterBevelFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.MiddleBevelFillProperty">
            <summary>
            Reference to MiddleBevelFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NEdgeDialRim.InnerBevelFillProperty">
            <summary>
            Reference to InnerBevelFillProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStrokeDialRim">
            <summary>
            Represents a border consisting of a single outline (stroke)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStrokeDialRim.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStrokeDialRim.Stroke">
            <summary>
            Gets/sets the stroke style applied to the outer side of the outline
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStrokeDialRim.NStrokeDialRimSchema">
            <summary>
            Reference to NStrokeDialRimSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStrokeDialRim.StrokeProperty">
            <summary>
            Reference to StrokeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCircularRim">
            <summary>
            Represents circular rim style
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCircularRim.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCircularRim.#ctor(Nevron.Nov.Chart.ENCircularRimPattern,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="pattern"></param>
            <param name="patternDepth"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCircularRim.#ctor(Nevron.Nov.Chart.ENCircularRimPattern,System.Double,Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializer constructor
            </summary>
            <param name="pattern"></param>
            <param name="patternDepth"></param>
            <param name="fill"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCircularRim.#ctor(Nevron.Nov.Chart.ENCircularRimPattern,System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="pattern"></param>
            <param name="offset"></param>
            <param name="patternDepth"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Visible">
            <summary>
            Gets or sets the visibility of the rim
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Offset">
            <summary>
            Gets or sets the offset of the rim from the circle radius
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.PatternDepth">
            <summary>
            Gets or sets the depth of the rim pattern
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Fill">
            <summary>
            Gets or sets the fill style applied to the knob background.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Stroke">
            <summary>
            Gets or sets the stroke style applied to the knob background
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Shadow">
            <summary>
            Gets or sets the shadow style of the rim
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.PatternRepeatCount">
            <summary>
            Gets the repeat count of the rim pattern
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCircularRim.Pattern">
            <summary>
            Gets or sets the rim pattern of this knob
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.NCircularRimSchema">
            <summary>
            Reference to NCircularRimSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.VisibleProperty">
            <summary>
            Reference to VisibleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.OffsetProperty">
            <summary>
            Reference to OffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.PatternDepthProperty">
            <summary>
            Reference to PatternDepthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.FillProperty">
            <summary>
            Reference to FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.StrokeProperty">
            <summary>
            Reference to StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.ShadowProperty">
            <summary>
            Reference to ShadowProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.PatternRepeatCountProperty">
            <summary>
            Reference to PatternRepeatCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCircularRim.PatternProperty">
            <summary>
            Reference to PatternProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NIndicator">
            <summary>
            The base of all indicators
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.#ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder)">
            <summary>
            Initializer constructor
            </summary>
            <param name="paintOrder"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Visible">
            <summary>
            Controls the visibility of the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.PaintOrder">
            <summary>
            Gets or sets a value indicating whether the indicator is painted before 
            or after the scale it is attached to
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.OffsetOriginMode">
            <summary>
            Gets or sets the mode in which the indicator offset from scale is computed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.ScaleAxisRef">
            <summary>
            Gets or sets a reference to the axis on which this indicator will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.ScaleAxis">
            <summary>
            Gets or sets the axis on which this indicator will scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.OffsetFromScale">
            <summary>
            Gets or sets the offset of the indicator from the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Value">
            <summary>
            Gets or sets the value displayed by this indicator on the specified gauge axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.ValueSnapper">
            <summary>
            Defines how to snap horizontal scale coordinates to axis ticks and scale.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Palette">
            <summary>
            Gets or sets the palette associated with this indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.AllowDragging">
            <summary>
            Gets or sets whether dragging is allowed for this indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.IsPressed">
            <summary>
            Gets whether the indicator is currently pressed. Automatically updated by Nevron.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.IsDragged">
            <summary>
            Gets whether the indicator is currently dragged. Automatically updated by Nevron.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Fill">
            <summary>
            Gets or sets the fill style of the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Stroke">
            <summary>
            Gets or sets the stroke style of the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.Shadow">
            <summary>
            Gets or sets the indicator shadow style 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.EnableDampening">
            <summary>
            Enables value dampening for this indicator.
            </summary>
            <remarks>
            When enabled the effective value displayed by the indicator will smoothly transform from the old value to the new value.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.DampeningInterval">
            <summary>
            Gets or set the interval beween dampening steps
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicator.DampeningSteps">
            <summary>
            Gets or set the number of steps the indicator will perform in order to display a new value when dampening is enabled
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NIndicator.ValueChanged">
            <summary>
            Mutation event, which occurs when the Value property has changed
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NIndicator.StartDragging">
            <summary>
            Event, which occurs when the indicator starts to be dragged
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NIndicator.Drag">
            <summary>
            Event, which occurs when the indicator is dragged
            </summary>
        </member>
        <member name="E:Nevron.Nov.Chart.NIndicator.EndDragging">
            <summary>
            Event, which occurs when the indicator ends to be dragged
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element post children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.HitTest(Nevron.Nov.Dom.NPointHitTestVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnMouseDown(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Handles the mouse down event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnMouseMove(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Handles the mouse move event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnMouseUp(Nevron.Nov.UI.NMouseButtonEventArgs)">
            <summary>
            Handles the mouse up event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnKeyDown(Nevron.Nov.UI.NKeyEventArgs)">
            <summary>
            Handles the KeyDown event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnLostFocus(Nevron.Nov.UI.NFocusChangeEventArgs)">
            <summary>
            Handles the lost focus event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnLostMouseCapture(Nevron.Nov.UI.NMouseCaptureChangeEventArgs)">
            <summary>
            Handles the lost mouse capture event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.CanStartDragging">
            <summary>
            Determines whether the thumb can currently be dragged
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.DoStartDragging(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Starts the thumb dragging
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.DoDrag(Nevron.Nov.Graphics.NPoint)">
            <summary>
            Drags the thumb to the specified thumb pos (in local coordinates).
            </summary>
            <param name="viewPos"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.DoEndDragging(Nevron.Nov.UI.NMouseEventArgs)">
            <summary>
            Ends the thumb dragging.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.DoAbortDragging">
            <summary>
            Cancels the thumb dragging
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnStartDragging">
            <summary>
            Raises the thumb start drag event.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnDoDrag(System.Object)">
            <summary>
            Raises the thumb drag event.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicator.OnEndDragging(System.Boolean)">
            <summary>
            Raises the thumb end drag event.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.NIndicatorSchema">
            <summary>
            Reference to the NIndicatorSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.ValueProperty">
            <summary>
            Reference to the ValueProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.AllowDraggingProperty">
            <summary>
            Reference to the AllowDraggingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.VisibleProperty">
            <summary>
            Reference to the VisibleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.PaintOrderProperty">
            <summary>
            Reference to the PaintOrderProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.OffsetOriginModeProperty">
            <summary>
            Reference to the OffsetOriginModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.OffseFromScaleProperty">
            <summary>
            Reference to the OffseFromScaleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.ValueSnapperProperty">
            <summary>
            Reference to the ValueSnapperProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.FillProperty">
            <summary>
            Reference to the fill property FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.StrokeProperty">
            <summary>
            Reference to the stroke property StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.ShadowProperty">
            <summary>
            Reference to the shadow property ShadowProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.IsPressedProperty">
            <summary>
            Reference to the IsPressed property IsPressedProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.IsDraggedProperty">
            <summary>
            Reference to the IsDragged property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.StartDraggingEvent">
            <summary>
            Reference to the StartDragging event
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.DragEvent">
            <summary>
            Reference to the Drag event
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.EndDraggingEvent">
            <summary>
            Reference to the EndDragging event
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.ScaleAxisRefProperty">
            <summary>
            ScaleAxisRef to the scale axis ref property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.PaletteProperty">
            <summary>
            Reference to the Palette property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.EnableDampeningProperty">
            <summary>
            Reference to the enable dampening property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.DampeningIntervalProperty">
            <summary>
            Reference to the enable DampeningInterval property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicator.DampeningStepsProperty">
            <summary>
            Reference to the enable DampeningSteps property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NIndicatorCollection">
            <summary>
            Represents a collection of gauge indicators
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicatorCollection.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorCollection.NIndicatorCollectionSchema">
            <summary>
            Reference to the NIndicatorCollectionSchema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NKnobIndicator">
            <summary>
            Represents a knob value indicator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKnobIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NKnobIndicator.#ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder)">
            <summary>
            Initializer constructor
            </summary>
            <param name="paintOrder"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.MarkerPaintOrder">
            <summary>
            Gets or set the marker paint order relative to the inner and outer knob rims.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.MarkerOffset">
            <summary>
            Gets or sets the marker offset from the outer rim of the knob
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.OuterRim">
            <summary>
            Gets or sets the style of the outer knob rim
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.InnerRim">
            <summary>
            Gets or sets the style of the inner knob rim
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.CapEffect">
            <summary>
            Gets or sets the paint effect applied after the knob is painted
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NKnobIndicator.PaintEffectOffset">
            <summary>
            Gets or sets the offset of the paint effect from the outer knob rim
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.NKnobIndicatorSchema">
            <summary>
            Reference to NKnobIndicatorSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.MarkerOffsetProperty">
            <summary>
            Reference to MarkerOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.MarkerPaintOrderProperty">
            <summary>
            Reference to MarkerPaintOrderProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.OuterRimProperty">
            <summary>
            Reference to OuterRimProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.InnerRimProperty">
            <summary>
            Reference to InnerRimProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.CapEffectProperty">
            <summary>
            Reference to CapEffectProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NKnobIndicator.PaintEffectOffsetProperty">
            <summary>
            Reference to PaintEffectOffsetProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NMarkerValueIndicator">
            <summary>
            Represents a merker value indicator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerValueIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerValueIndicator.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NMarkerValueIndicator.#ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder)">
            <summary>
            Initializer constructor
            </summary>
            <param name="paintOrder"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerValueIndicator.Shape">
            <summary>
            Gets or sets the marker shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMarkerValueIndicator.Height">
            <summary>
            Gets or sets the height of the value indicator shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerValueIndicator.NMarkerValueIndicatorSchema">
            <summary>
            Reference to NMarkerValueIndicatorSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerValueIndicator.HeightProperty">
            <summary>
            Reference to HeightProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMarkerValueIndicator.ShapeProperty">
            <summary>
            Reference to ShapeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNeedleCap">
            <summary>
            Controls the appearance and visibility of the cap style applied on the needle pin point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNeedleCap.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleCap.Visible">
            <summary>
            Gets or sets a property indicating whether the cap is visible or not
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleCap.Size">
            <summary>
            Gets or sets the size of the needle cap 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleCap.Stroke">
            <summary>
            Gets or sets the stroke of the needle cap
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleCap.Fill">
            <summary>
            Gets or sets the fill of the needle cap
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleCap.NNeedleCapSchema">
            <summary>
            Reference to the needle cap schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleCap.SizeProperty">
            <summary>
            Reference to the size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleCap.VisibleProperty">
            <summary>
            Reference to the visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleCap.StrokeProperty">
            <summary>
            Reference to the Stroke property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleCap.FillProperty">
            <summary>
            Reference to the Fill property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNeedleValueIndicator">
            <summary>
            Represents a needle value indicator.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNeedleValueIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNeedleValueIndicator.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleValueIndicator.OffsetFromCenter">
            <summary>
            Gets or sets the offset of the needle base from the center of the gauge
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNeedleValueIndicator.Shape">
            <summary>
            Gets or sets the shape property of the needle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleValueIndicator.NNeedleValueIndicatorSchema">
            <summary>
            Reference to NNeedleValueIndicatorSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleValueIndicator.OffsetFromCenterProperty">
            <summary>
            Reference to OffsetFromCenterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNeedleValueIndicator.ShapeProperty">
            <summary>
            Reference to ShapeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeIndicator">
            <summary>
            Represents a range indicator
            </summary>
            <remarks>
            Range indicators display a range of values on one of the gauge axes
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeIndicator.#ctor(Nevron.Nov.Graphics.NRange)">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeIndicator.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.Shape">
            <summary>
            Gets or sets the range indicator shape
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.PaletteColorMode">
            <summary>
            Gets or sets the palette color mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.BarWidth">
            <summary>
            Gets or sets the bar width when the indicator shape is set to ENRangeIndicatorShape.Bar
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.BarSpacing">
            <summary>
            Gets or sets the spacing between bars when the indicator shape is set to ENRangeIndicatorShape.Bar
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.OriginMode">
            <summary>
            Gets or sets the range origin mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.Origin">
            <summary>
            Get or sets the origin of the range displayed by the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.BeginWidth">
            <summary>
            Gets or sets the begin width of the range indicator 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.EndWidth">
            <summary>
            Gets or sets the end width of the range indicator 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.BeginOffset">
            <summary>
            Gets or sets the begin offset of the range indicator 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.EndOffset">
            <summary>
            Gets or sets the end offset of the range indicator 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeIndicator.Range">
            <summary>
            Obtains the normalized range displayed by this indicator
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.NRangeIndicatorSchema">
            <summary>
            Reference to the NRangeIndicator schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.ShapeProperty">
            <summary>
            Reference to the Shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.PaletteColorModeProperty">
            <summary>
            Reference to the palette color mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.OriginModeProperty">
            <summary>
            Reference to the OriginMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.OriginProperty">
            <summary>
            Reference to the Origin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.BeginWidthProperty">
            <summary>
            Reference to the BeginWidth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.EndWidthProperty">
            <summary>
            Reference to the EndWidth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.BeginOffsetProperty">
            <summary>
            Reference to the BeginOffset property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.EndOffsetProperty">
            <summary>
            Reference to the EndOffset property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.BarWidthProperty">
            <summary>
            Reference to the BarWidth property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeIndicator.BarSpacingProperty">
            <summary>
            Reference to the BarSpacing property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueIndicator">
            <summary>
            Represents a value indicator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueIndicator.#ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder)">
            <summary>
            Initializer constructor
            </summary>
            <param name="paintOrder"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueIndicator.Width">
            <summary>
            Gets or sets the width of the value indicator shape
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueIndicator.NValueIndicatorSchema">
            <summary>
            Reference to the NValueIndicatorSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueIndicator.WidthProperty">
            <summary>
            Reference to the width property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLinearGauge">
            <summary>
            Represents a linear gauge.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLinearGauge.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLinearGauge.Orientation">
            <summary>
            Gets / sets the gauge orientation
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLinearGauge.MeasureContent(System.Boolean)">
            <summary>
            Measures the element content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NLinearGauge.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the content of this element.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NLinearGauge.NLinearGaugeSchema">
            <summary>
            Reference to the linear gauge schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLinearGauge.OrientationProperty">
            <summary>
            Reference to the orientation property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NGauge">
            <summary>
            Base class for linear and radial gauges
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGauge.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGauge.Content">
            <summary>
            Gets or sets the content widget.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGauge.Axes">
            <summary>
            Gets or sets the axes attached to this gauge panel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NGauge.Indicators">
            <summary>
            Gets or sets the indicators attached to this gauge panel
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NGauge.DoPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGauge.AccumulateDisplayChildren(Nevron.Nov.Dom.NDisplayVisitor,Nevron.Nov.DataStructures.NList{Nevron.Nov.Dom.NVisual})">
            <summary>
            
            </summary>
            <param name="visitor"></param>
            <param name="list"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGauge.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Overriden to make the content occupy the content area.
            </summary>
            <param name="ca">The content area.</param>
        </member>
        <member name="M:Nevron.Nov.Chart.NGauge.MeasureContent(System.Boolean)">
            <summary>
            Overriden to return the desired size of the content
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NGauge.NGaugeSchema">
            <summary>
            Reference to NGaugeSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGauge.AxesChild">
            <summary>
            Reference to AxesChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGauge.IndicatorsChild">
            <summary>
            Reference to IndicatorsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGauge.NContentHolderSchema">
            <summary>
            Schema associated with NContentHolder
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NGauge.ContentChild">
            <summary>
            Reference to the Content child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRadialGauge">
            <summary>
            Represents a radial gauge.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialGauge.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialGauge.BeginAngle">
            <summary>
            Gets or sets the begin angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialGauge.SweepAngle">
            <summary>
            Gets or sets the sweep angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialGauge.InnerRadius">
            <summary>
            Gets or sets the inner radius of the gauge
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialGauge.NeedleCap">
            <summary>
            Gets or sets the cap style of the needle pin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRadialGauge.Dial">
            <summary>
            Gets / sets the rim effect of the gauge
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialGauge.MeasureContent(System.Boolean)">
            <summary>
            Measures the element content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialGauge.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            Arranges the content of this element.
            </summary>
            <param name="ca"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRadialGauge.DoPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            /
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.NRadialGaugeSchema">
            <summary>
            Reference to NRadialGaugeSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.BeginAngleProperty">
            <summary>
            Reference to BeginAngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.SweepAngleProperty">
            <summary>
            Reference to SweepAngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.NeedleCapProperty">
            <summary>
            Reference to NeedleCapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.DialProperty">
            <summary>
            Reference to DialProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRadialGauge.InnerRadiusProperty">
            <summary>
            Reference to InnerRadiusProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NInstrumentationWidget">
            <summary>
            Base for all instrumentation widgets
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NInstrumentationWidget.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NInstrumentationWidget.CapEffect">
            <summary>
            Gets or sets the cap effect of the gauge
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NInstrumentationWidget.DoPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element post children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NInstrumentationWidget.NInstrumentationWidgetSchema">
            <summary>
            Reference to the NInstrumentationWidgetSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NInstrumentationWidget.CapEffectProperty">
            <summary>
            Reference to the CapEffectProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCharacterDecimalPositionFilter">
            <summary>
            Returns true if the character token decimal position has the same relative position as the filter
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCharacterDecimalPositionFilter.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="decimalSeparator"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCharacterDecimalPositionFilter.Nevron#Nov#DataStructures#INFilter{Nevron#Nov#Internal#GrSG}#Filter(Nevron.Nov.Internal.GrSG)">
            <summary>
            Overriden to return true if the specified char token is placed relate to the string decimal position
            </summary>
            <param name="hQSG">char token (NCharToken)</param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NCellDisplay">
            <summary>
            Base for all display panels
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCellDisplay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCellDisplay.ContentAlignment">
            <summary>
            Gets or sets the content alignment
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCellDisplay.BoundsMode">
            <summary>
            Gets or sets the bounds mode
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCellDisplay.DoPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NCellDisplay.ValidateMeasure">
            <summary>
            Validates the cell measure
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCellDisplay.MeasureContent(System.Boolean)">
            <summary>
            
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NCellDisplay.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            
            </summary>
            <param name="ca"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NCellDisplay.NCellDisplaySchema">
            <summary>
            Reference to the cell display schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCellDisplay.BoundsModeProperty">
            <summary>
            Reference to the bounds mode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCellDisplay.ContentAlignmentProperty">
            <summary>
            Reference to the content alignment property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLedDisplay">
            <summary>
            Base for all display panels
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLedDisplay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.DisplayStyle">
            <summary>
            Gets or sets the style of the display segment cells
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.LitFill">
            <summary>
            Controls the appearance of lit led segments
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.DimFill">
            <summary>
            Controls the appearance of dim led segments
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.CellSize">
            <summary>
            Gets or sets the size of the cells in the contained in the display
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.CellGap">
            <summary>
            Gets or sets the gap between cells contained in the display
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.CellAlignment">
            <summary>
            Gets or sets the relative alignment of cells
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.CellCountMode">
            <summary>
            Gets or sets the cell count mode of this display.
            </summary>
            <remarks>
            When set to DisplayCellCountMode.Fixed the display will not change the number of
            cells depending on the value formatted as text.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.CellCount">
            <summary>
            Gets or sets the number of cells contained in this indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.DisplayDirection">
            <summary>
            Gets or sets the display direction of the adapter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.SegmentWidth">
            <summary>
            Gets or sets the segment width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLedDisplay.SegmentGap">
            <summary>
            Gets or sets the gap between segments
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLedDisplay.DoPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLedDisplay.ValidateMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.NLedDisplaySchema">
            <summary>
            Reference to the NLedDisplaySchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.LitFillProperty">
            <summary>
            Reference to the LitFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.DimFillProperty">
            <summary>
            Reference to the DimFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.CellSizeProperty">
            <summary>
            Reference to the CellSizeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.CellAlignmentProperty">
            <summary>
            Reference to the CellAlignmentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.CellGapProperty">
            <summary>
            Reference to the CellGapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.DisplayStyleProperty">
            <summary>
            Reference to the DisplayStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.CellCountModeProperty">
            <summary>
            Reference to the CellCountModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.CellCountProperty">
            <summary>
            Reference to the CellCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.DisplayDirectionProperty">
            <summary>
            Reference to the DisplayDirectionProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.SegmentWidthProperty">
            <summary>
            Reference to the SegmentWidthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLedDisplay.SegmentGapProperty">
            <summary>
            Reference to the SegmentGapProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNumericLedDisplay">
            <summary>
            The base of all numeric display panels.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericLedDisplay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.SignMode">
            <summary>
            Gets or sets the sign mode of the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.ShowLeadingZeros">
            <summary>
            Gets or sets a value indicating whether the display must show leading zeros 
            when CellCountMode is set to Fixed
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.Value">
            <summary>
            Gets or sets the value displayed by the numeric panel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.ValueFormatter">
            <summary>
             Gets or sets the NValueFormatter object used to format the panel value object.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.ShowDecimalSeparator">
            <summary>
            Gets or sets a value whether the display must show a decimal separator (dot)
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.DecimalLitFill">
            <summary>
            Controls the appearance of decimal lit led segments
            </summary>
            <remarks>
            This property has effect only when the display uses decimal formatting 
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.DecimalDimFill">
            <summary>
            Controls the appearance of dim led segments
            </summary>
            <remarks>
            This property has effect only when the display uses decimal formatting 
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.EnableDecimalFormatting">
            <summary>
            Gets or sets a value whether the panel will use decimal related properties to format the cells displaying decimal values
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.AttachSignToNumber">
            <summary>
            Gets or sets value indicating whether the sign must be attached to the 
            most significant digit of the displayed number
            </summary>
            <remarks>
            This property has effect only if SignMode is set to SignMode.Negative or SignMode.Always
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.DecimalSegmentWidth">
            <summary>
            Gets or sets the segment width
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.DecimalSegmentGap">
            <summary>
            Gets or sets the gap between decimal segments
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericLedDisplay.DecimalCellSize">
            <summary>
            Specifies the size of the cells displaying decimal values in the display
            </summary>
            <remarks>
            This property has effect only when the display uses decimal formatting 
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.NNumericLedDisplaySchema">
            <summary>
            Reference to the NNumericLedDisplaySchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DecimalLitFillProperty">
            <summary>
            Reference to the DecimalLitFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DecimalDimFillProperty">
            <summary>
            Reference to the DecimalDimFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.ShowLeadingZerosProperty">
            <summary>
            Reference to the ShowLeadingZerosProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.AttachSignToNumberProperty">
            <summary>
            Reference to the AttachSignToNumberProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.ShowDecimalSeparatorProperty">
            <summary>
            Reference to the ShowDecimalSeparatorProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.EnableDecimalFormattingProperty">
            <summary>
            Reference to the EnableDecimalFormattingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DecimalCellSizeProperty">
            <summary>
            Reference to the DecimalCellSizeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DecimalSegmentGapProperty">
            <summary>
            Reference to the DecimalSegmentGapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DecimalSegmentWidthProperty">
            <summary>
            Reference to the DecimalSegmentWidthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.ValueProperty">
            <summary>
            Reference to the ValueProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.ValueFormatterProperty">
            <summary>
            Reference to the ValueFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.DotCellStyleProperty">
            <summary>
            Reference to the DotCellStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericLedDisplay.SignModeProperty">
            <summary>
            Reference to the SignModeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTextLedDisplay">
            <summary>
            Represents a led display that can display arbitrary text
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTextLedDisplay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTextLedDisplay.Text">
            <summary>
            Gets or sets the displayed text 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTextLedDisplay.NTextLedDisplaySchema">
            <summary>
            Reference to the NTextLedDisplaySchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTextLedDisplay.TextProperty">
            <summary>
            Reference to the TextProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NIndicatorState">
            <summary>
            Represents a state indicator inside a state indicator panel
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicatorState.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicatorState.#ctor(Nevron.Nov.Graphics.NRange,Nevron.Nov.UI.NSymbol)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
            <param name="symbol"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicatorState.#ctor(Nevron.Nov.Graphics.NRange,Nevron.Nov.UI.ENSymbolShape,Nevron.Nov.Graphics.NSize,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
            <param name="shape"></param>
            <param name="size"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.Range">
            <summary>
            Gets or sets the range of values in which the state is active
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.Text">
            <summary>
            Gets or sets the state text
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.Orientation">
            <summary>
            Gets / sets the orientation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.HorizontalAlignment">
            <summary>
            Gets / sets the horizontal alignment
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.VerticalAlignment">
            <summary>
            Gets / sets the vertical alignment
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.Gap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.Symbol">
            <summary>
            Gets or set the Symbol of the marker
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.TextSizeInflate">
            <summary>
            Gets or sets the text size inflate
            </summary>
            <remarks>
            This property is regarded only when the Symbol size mode is set to SameAsText
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NIndicatorState.TextStyle">
            <summary>
            Gets or sets the NTextStyle object applied to the state text
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.NIndicatorStateSchema">
            <summary>
            Reference to the indicator state schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.RangeProperty">
            <summary>
            Reference to the Range property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.SymbolSizeModeProperty">
            <summary>
            Reference to the SymbolSizeMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.OrientationProperty">
            <summary>
            Reference to the Orientation property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.VerticalAlignmentProperty">
            <summary>
            Reference to the VerticalAlignment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.HorizontalAlignmentProperty">
            <summary>
            Reference to the HorizontalAlignment property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.GapProperty">
            <summary>
            Reference to the GapProperty property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.TextSizeInflateProperty">
            <summary>
            Reference to the TextSizeInflate property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.SymbolProperty">
            <summary>
            Reference to the Symbol property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.TextStyleProperty">
            <summary>
            Reference to the TextStyle property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorState.TextProperty">
            <summary>
            Reference to the Text property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NIndicatorStateCollection">
            <summary>
            Represents a collection of NIndicatorState objects.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NIndicatorStateCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NIndicatorStateCollection.NIndicatorStateCollectionSchema">
            <summary>
            Reference to the NIndicatorStateCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStateIndicator">
            <summary>
            Represents a state indicator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStateIndicator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.ActiveStateMode">
            <summary>
            Gets or sets the active state mode of the indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.Value">
            <summary>
            Gets or sets the value of the state indicator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.DefaultState">
            <summary>
            Gets or sets the default state indicator state
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.States">
            <summary>
            Gets or sets the indicators attached to this gauge panel
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.Orientation">
            <summary>
            Gets or sets the state indicator panel expand mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStateIndicator.StateIndicatorSpacing">
            <summary>
            Gets or sets the size of the cells in the contained in the display
            </summary>
            <summary>
            Gets or sets the gap between cells contained in the display
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.m_Value">
            <summary>
            The state indicator value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.m_DefaultState">
            <summary>
            The default state
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.NStateIndicatorSchema">
            <summary>
            Reference to the NStateIndicatorSchema schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.ValueProperty">
            <summary>
            Reference to the Value property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.DefaultStateProperty">
            <summary>
            Reference to the DefaultState property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.ActiveStateModeProperty">
            <summary>
            Reference to the ActiveStateMode property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.OrientationProperty">
            <summary>
            Reference to the Orientation property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.StateIndicatorSpacingProperty">
            <summary>
            Reference to the State Spacing property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStateIndicator.StatesProperty">
            <summary>
            Reference to the States property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLegendInterlaceStyle">
            <summary>
            Represents a legend horizontal or vertical interlace style.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendInterlaceStyle.#ctor">
            <summary>
            Creates a new legend interlace style with default settings.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Type">
            <summary>
            Gets / sets the interlace style type (row or column).
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Fill">
            <summary>
            Gets / sets the fill of the interlace style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Begin">
            <summary>
            Gets / sets the begin row or column of this interlace style.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Infinite">
            <summary>
            Whether or not this style is repeated infinitely along the legend grid or not.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.End">
            <summary>
            Gets / sets the end row or column of this interlace style if Infinite is set to false.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Length">
            <summary>
            Gets / sets the length in rows or columns of each interlace stripe.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegendInterlaceStyle.Interval">
            <summary>
            Gets / sets the interval (gap) between two consecutive interlace stripes.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.NLegendInterlaceStyleSchema">
            <summary>
            Schema associated with NLegendInterlaceStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.FillProperty">
            <summary>
            Reference to the fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.BeginProperty">
            <summary>
            Reference to the begin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.EndProperty">
            <summary>
            Reference to the end property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.LengthProperty">
            <summary>
            Reference to the length property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.IntervalProperty">
            <summary>
            Reference to the interval property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.InfiniteProperty">
            <summary>
            Reference to the infinite property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStyle.TypeProperty">
            <summary>
            Reference to the type property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLegendInterlaceStylesCollection">
            <summary>
            Represents a collection of legend iterlace styles
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendInterlaceStylesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendInterlaceStylesCollection.NLegendInterlaceStyleCollectionSchema">
            <summary>
            Schema associated with NLegendInterlaceStyle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLegend">
            <summary>
            The NLegend class represents the integrated legend of NOV Chart.
            </summary>
            <remarks>
            The integrated legend can display various information about the chart series or custom data. 
            Each chart is associated with only one legend, but one legend can be associated with many charts.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.Mode">
            <summary>
            Gets or sets the legend mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.ExpandMode">
            <summary>
            Gets / sets the legend expand mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.RowCount">
            <summary>
            The maximum row count allowed when ExpandMode is RowsFixed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.ColCount">
            <summary>
            The maximum column count allowed when ExpandMode is ColsFixed.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.Header">
            <summary>
            Gets / sets the header of the legend
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.Footer">
            <summary>
            Gets / sets the footer of the legend.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.Items">
            <summary>
            Gets / sets the legend items
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.InterlaceStyles">
            <summary>
            The interlace styles of the legend 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.HorizontalGridStroke">
            <summary>
            The line style of the horizontal legend grid lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLegend.VerticalGridStroke">
            <summary>
            The line style of the vertical legend grid lines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.MeasureContent(System.Boolean)">
            <summary>
            
            </summary>
            <param name="defaultMeasure"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.ArrangeContent(Nevron.Nov.Graphics.NRectangle)">
            <summary>
            
            </summary>
            <param name="contentArea"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element pre children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.OnPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            Performs the element post children paint.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.OnUnregistered">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegend.CreateLegendSymbol(Nevron.Nov.Chart.ENLegendMarkShape,Nevron.Nov.Graphics.NSize,Nevron.Nov.Graphics.NMargins,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Creates a legend symbol
            </summary>
            <param name="markShape"></param>
            <param name="markSize"></param>
            <param name="symbolMargins"></param>
            <param name="markFill"></param>
            <param name="markStroke"></param>
            <param name="lineStroke"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.NLegendSchema">
            <summary>
            Reference to the NLegendSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.HeaderChild">
            <summary>
            Reference to the HeaderChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.FooterChild">
            <summary>
            Reference to the FooterChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.ItemsChild">
            <summary>
            Reference to the ItemsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.AutomaticItemsChild">
            <summary>
            Reference to the AutomaticItemsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.InterlaceStylesProperty">
            <summary>
            Reference to the InterlaceStylesProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.ModeProperty">
            <summary>
            Reference to the ModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.ExpandModeProperty">
            <summary>
            Reference to the ExpandModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.RowCountProperty">
            <summary>
            Reference to the RowCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.ColCountProperty">
            <summary>
            Reference to the ColCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.HorizontalGridStrokeProperty">
            <summary>
            Reference to the HorizontalGridStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegend.VerticalGridStrokeProperty">
            <summary>
            Reference to the VerticalGridStrokeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLegendItemCollection">
            <summary>
            Represents a collection of legend items (widgets)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendItemCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendItemCollection.OnChildInserted(Nevron.Nov.Dom.NInsertChildData)">
            <summary>
            Overriden to invalidate the legend
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendItemCollection.OnChildRemoved(Nevron.Nov.Dom.NRemoveChildData)">
            <summary>
            Overriden to invalidate the legend
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLegendItemCollection.OnAncestorsChanged(Nevron.Nov.Dom.NNode)">
            <summary>
            Overriden to cache a reference to the legend
            </summary>
            <param name="reparentedNode"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NLegendItemCollection.NLegendItemCollectionSchema">
            <summary>
            Reference to the NLegendItemCollectionSchema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartLoadAssemblyType">
            <summary>
            Dummy type used to explicitly load the Nevron.Nov.Chart assembly
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartLoadAssemblyType.Dispose">
            <summary>
            
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartModule">
            <summary>
            Represents the Nevron Chart module.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartModule.Install">
            <summary>
            Installs the module.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NChartModule.Instance">
            <summary>
            Gets the instance of this module.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NChartUIThemePlugin">
            <summary>
            A theme plugin that adds rules for the Nevron rich text control.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartUIThemePlugin.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NChartUIThemePlugin.CreateStyles(Nevron.Nov.UI.NUITheme)">
            <summary>
            Creates the style sheet rules for this theme plugin.
            </summary>
            <param name="uiTheme"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NChartUIThemePlugin.UITheme">
            <summary>
            The theme this plugin should add rules to.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NOpenGLWidget">
            <summary>
            OpenGL widget
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NOpenGLWidget.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NOpenGLWidget.DoPostPaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NOpenGLWidget.NOpenGLWidgetSchema">
            <summary>
            Reference to the chart schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NResources">
            <summary>
            DO NOT MODIFY MANUALLY. Automatically generated by NResourceMaker.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NResources.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NResources.RBIN_documentation_zip">
            <summary></summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NResources.Instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCalendarRule">
            <summary>
            The base for the week and month day calendar rules
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCalendarRule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCalendarRule.#ctor(Nevron.Nov.NDateTimeRange)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCalendarRule.Schedule">
            <summary>
            Gets or sets the daily schedule associated with this rule
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCalendarRule.Range">
            <summary>
            Gets or set the range this rule applies to
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRule.m_Range">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRule.m_Schedule">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRule.NCalendarRuleSchema">
            <summary>
            Reference to the NCalendarRuleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRule.RangeProperty">
            <summary>
            Reference to the RangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRule.ScheduleProperty">
            <summary>
            Reference to the ScheduleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCalendarRuleCollection">
            <summary>
            Represents a collection of calendar rules
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCalendarRuleCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCalendarRuleCollection.NCalendarRuleCollectionSchema">
            <summary>
            Schema associated with NTabStopCollection.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDailySchedule">
            <summary>
            Represents a daily schedule
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.#ctor(Nevron.Nov.DataStructures.NList{System.Int64})">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDailySchedule.EmptyTicks">
            <summary>
            Returns the number of empty ticks in this schedule
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDailySchedule.NonEmptyTicks">
            <summary>
            Returns the number of non empty ticks in this schedule
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.AddTicks(System.Int64@,System.Int64)">
            <summary>
            Adds the specified number of ticks to the tick
            </summary>
            <param name="tick"></param>
            <param name="ticksToAdd"></param>
            <returns>Returns the number of ticks that this schedule was not able to accomodate</returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.ForwardSnapTick(System.Int64)">
            <summary>
            Snaps the tick to the next non empty range if tick is not 
            contained in a non-empty range
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.BackwardSnapTick(System.Int64)">
            <summary>
            Snaps the tick to the last non empty tick if tick is not contained in a nonempty range.
            Returns zero if no non-empty ranges exist before tick.
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.GetEmptyTicksBefore(System.Int64)">
            <summary>
            Gets the empty ticks before range
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.GetTotalTicksFromNonEmptyTicks(System.Int64)">
            <summary>
            Gets the total ticks that elapsed from day unil non empty "tick" is reached
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.IsEmptyAt(System.Int64)">
            <summary>
            Returns true if the schedule is empty at the specified tick
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.SetHourRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Marks the specified hour range as empty or full
            </summary>
            <param name="startHour"></param>
            <param name="endHour"></param>
            <param name="empty"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailySchedule.SetTickRange(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Marks the specified tick range as empty or full
            </summary>
            <param name="startTick"></param>
            <param name="endTick"></param>
            <param name="empty"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NDailySchedule.NDailyScheduleSchema">
            <summary>
            Reference to the NDailyScheduleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDailySchedule.TicksProperty">
            <summary>
            Reference to the TicksProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDailyScheduleEnumerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailyScheduleEnumerator.#ctor(Nevron.Nov.Chart.NDailySchedule)">
            <summary>
            Initializer constructor
            </summary>
            <param name="schedule"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailyScheduleEnumerator.Reset">
            <summary>
            Resets the enumerator in the beginning
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDailyScheduleEnumerator.GetNextRange(Nevron.Nov.Chart.NTickRange@,System.Boolean@)">
            <summary>
            Gets the next tick range in the schedule
            </summary>
            <param name="range"></param>
            <param name="empty"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NDateTimeRangeRule">
            <summary>
            Represents a date time rule based that applied on a range
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeRangeRule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeRangeRule.#ctor(Nevron.Nov.NDateTimeRange,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
            <param name="working"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeRangeRule.Working">
            <summary>
            Whether the rule results in working or non working days
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeRangeRule.NDateTimeRangeRuleSchema">
            <summary>
            Reference to the NDateTimeRangeRuleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeRangeRule.WorkingProperty">
            <summary>
            Reference to the WorkingProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NMonthDayRule">
            <summary>
            Represents month of day rule
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMonthDayRule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMonthDayRule.#ctor(Nevron.Nov.Chart.ENMonthBit,System.Int32,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="month"></param>
            <param name="day"></param>
            <param name="working"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.Working">
            <summary>
            Whether the rule results in working or non working days
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.Months">
            <summary>
            Gets or sets the month bit mask
            </summary>
            <remarks>
            You can also individually 
            </remarks>	
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.Day">
            <summary>
            Gets or sets the day
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.MonthCount">
            <summary>
            Gets the number of marked months 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.January">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of January
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.February">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of February
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.March">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of March
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.April">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of April
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.May">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of May
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.June">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of June
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.July">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of July
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.August">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of August
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.September">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of September
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.October">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of October
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.November">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of November
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NMonthDayRule.December">
            <summary>
            Gets or set a value indicating whether the month day applies to the month of December
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMonthDayRule.NMonthDayRuleSchema">
            <summary>
            Reference to the NMonthDayRuleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMonthDayRule.WorkingProperty">
            <summary>
            Reference to the WorkingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMonthDayRule.DayProperty">
            <summary>
            Reference to the DayProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMonthDayRule.MonthsProperty">
            <summary>
            Reference to the MonthsProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTickRange">
            <summary>
            Represents a range of ticks in a daily schedule
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTickRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializer constructor
            </summary>
            <param name="begin"></param>
            <param name="end"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NTickRange.IsNormalized">
            <summary>
            Returns true if the range is normalized.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTickRange.Length">
            <summary>
            Returns the tick length of this range
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTickRange.Contains(System.Int64)">
            <summary>
            Returns true if the range contains the tick
            </summary>
            <param name="tick"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NTickRange.Begin">
            <summary>
            The begin tick
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTickRange.End">
            <summary>
            The end tick
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NWeekDayRule">
            <summary>
            Represents a day of week rule
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWeekDayRule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWeekDayRule.#ctor(Nevron.Nov.Chart.ENWeekDayBit)">
            <summary>
            Initializer constructor
            </summary>
            <param name="weekDays"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.WeekDays">
            <summary>
            Gets or sets the weekdays bit mask
            </summary>
            <remarks>
            You can also modify individual bits in the mask using the shortcut properties - Monday, Tuesday, Wednesday etc.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Monday">
            <summary>
            The day Monday.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Tuesday">
            <summary>
            The day Tuesday.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Wednesday">
            <summary>
            The day Wednesday.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Thursday">
            <summary>
            The day Thursday
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Friday">
            <summary>
            The day Friday.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Saturday">
            <summary>
            The day Saturday
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWeekDayRule.Sunday">
            <summary>
            The day Sunday
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWeekDayRule.NWeekDayRuleSchema">
            <summary>
            Reference to the NWeekDayRuleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWeekDayRule.WeekDaysProperty">
            <summary>
            Reference to the WeekDaysProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NWorkCalendar">
            <summary>
            Represents a calendar defining rules for working days and hours.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWorkCalendar.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWorkCalendar.Rules">
            <summary>
            Gets or sets the working rules in the calendar
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NWorkCalendar.CultureName">
            <summary>
            Gets / sets teh culture name for this work calendar
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWorkCalendar.OnCultureNameChanged(Nevron.Nov.Dom.NValueChangeData)">
            <summary>
            Called when the Text property has changed.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NWorkCalendar.m_Calendar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWorkCalendar.m_OldRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWorkCalendar.NWorkCalendarSchema">
            <summary>
            Schema associated with NTabStopFragment
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWorkCalendar.CultureNameProperty">
            <summary>
            Reference to the CultureNameProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NWorkCalendar.RulesProperty">
            <summary>
            Reference to the RulesProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAngularScale">
            <summary>
            Represents a scale configurator that will configure the scale to display angular values.
            </summary>
            <remarks>
            By default the scale will try to decorate the major ticks using a divisor step for the 
            specified cycle length. For example if you specifiy 90 degrees for cycle length the steps that will be 
            considered are 1, 2, 3, 5, 6, 9, 10, 15, 18, 30, 45 and 90 as they represent the possible
            divisors of 90. 
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NAngularScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.CustomStep">
            <summary>
            Specifies the major ticks custom step when the mode is set to CustomStep.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.CustomSteps">
            <summary>
            Specifies the major ticks custom steps when the mode is set to CustomSteps.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.CustomMinorTicks">
            <summary>
            Specifies the minor ticks when AutoMinor ticks is set to false
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.CustomMajorTicks">
            <summary>
            Gets or sets the array of major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.CycleLength">
            <summary>
            Gets or sets the cycle length of the scale. 
            </summary>
            <remarks>
            The scale uses this enum to find a divisor suitable for this length. For angular scales
            this results in proper scale decoration on PI half, PI and 2 * PI. 
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAngularScale.AngleUnit">
            <summary>
            Gets or sets the angle unit for scale decoration
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.NAngularScaleSchema">
            <summary>
            Schema associated with NAngularScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.CustomStepsProperty">
            <summary>
            Reference to the CustomStepsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.CustomMajorTicksProperty">
            <summary>
            Reference to the CustomMajorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.CustomMinorTicksProperty">
            <summary>
            Reference to the CustomMinorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.AngleUnitProperty">
            <summary>
            Reference to the AngleUnitProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAngularScale.CycleLengthProperty">
            <summary>
            Reference to the CycleLengthProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDateTimeScale">
            <summary>
            Represents a date time scale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeScale.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.Origin">
            <summary>
            Specifies the date/time of the major tick origin when the UseOrigin property is set to true.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.CustomStep">
            <summary>
            Specifies the time span step when the major tick mode is set to TimeSpan.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.CustomSteps">
            <summary>
            Specifies the time span steps when the major tick mode is set to TimeSpans.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.CustomMajorTicks">
            <summary>
            Gets or sets the array of custom major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.CustomMinorTicks">
            <summary>
            Specifies the minor ticks when AutoMinor ticks is set to false
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.AutoDateTimeUnits">
            <summary>
            Gets or sets the date time units that are allowed when the scale is 
            scaling automatically
            </summary>
            <remarks>
            By default the scale will contain all possible date time units including: 
            Century, Decade, Year, HalfYear, Quarter, Month, Week, Day, HalfDay, Hour, Minute,
            Second and Millisecond.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.EnableCalendar">
            <summary>
            Gets or sets a value indicating whether the timeline should
            use the calendar settings, allow you skip days and time from 
            scale transform and calculation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeScale.Calendar">
            <summary>
            Gets the calendar used to determine between working and non working days and time.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.NDateTimeScaleSchema">
            <summary>
            Schema associated with 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.CustomStepsProperty">
            <summary>
            Reference to the CustomStepsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.AutoDateTimeUnitsProperty">
            <summary>
            Reference to the AutoDateTimeUnitsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.CustomMajorTicksProperty">
            <summary>
            Reference to the CustomMajorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.CustomMinorTicksProperty">
            <summary>
            Reference to the CustomMinorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.EnableCalendarProperty">
            <summary>
            Reference to the EnableCalendarProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeScale.CalendarProperty">
            <summary>
            Reference to the CalendarProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHierarchicalScale">
            <summary>
            Represents a scale configurator that can create a hierachical scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHierarchicalScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.FirstRowRangeFitMode">
            <summary>
            Gets or sets the label fit mode of hierarchical labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.GroupRowRangeFitMode">
            <summary>
            Gets or sets the label fit mode of hierarchical labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.FirstRowGridStyle">
            <summary>
            Gets or sets the style of grid lines for leaf nodes in the hierarchical scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.GroupRowGridStyle">
            <summary>
            Gets or sets the style of grid lines for the group (container) nodes in the hierarchical scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelTextStyle">
            <summary>
            Gets or set the text style applied to first row labels
            </summary>
            <remarks>
            If set to null first row labels will use their individual text style
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelTextStyle">
            <summary>
            Gets or sets the text style applied to group row labels
            </summary>
            <remark>
            If set to null group labels will use their individual text style
            </remark>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelAngle">
            <summary>
            Gets or sets the label angle of the first row of nodes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelAngle">
            <summary>
            Gets or sets thte lable angle of the group row(s) of nodes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.StickLength">
            <summary>
            Gets or sets the length of the sticks when grid style is set to Stick
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.LevelTopPadding">
            <summary>
            Gets or sets the top padding applied to the levels comprising the hierarchical scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.LevelBottomPadding">
            <summary>
            Gets or sets the bottom padding applied to the levels comprising the hierarchical scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.Origin">
            <summary>
            Specifies the origin value or the left most hierachical scale node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.ChildNodes">
            <summary>
            Gets or sets a collection of hierarchical scale nodes displayed on the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.CreateSeparatorForEachLevel">
            <summary>
            Gets or sets a value indicating whether a ruler separator should be
            created for each level of hierarchical nodes
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelOverlapResolveLayouts">
            <summary>
            Gets or set the first row fit modes used by the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelOverlapResolveLayouts">
            <summary>
            Gets or sets the group row label overlap resolve layouts
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScale.DisplayDataPointsBetweenTicks">
            <summary>
            Controls the position of the data point relative to the tick positions.
            </summary>
            <remarks>
            If set to True the data point is positioned between two adjacent ticks, otherwise it 
            is positioned exactly on the tick. In the second case you may consider turning on the 
            InflateMargins flag of the presentation groups to fit the chart inside the chart area.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.NHierarchicalScaleSchema">
            <summary>
            Schema associated with NHierarchicalScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.LevelTopPaddingProperty">
            <summary>
            Reference to the LevelTopPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.LevelBottomPaddingProperty">
            <summary>
            Reference to the LevelBottomPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.StickLengthProperty">
            <summary>
            Reference to the StickLengthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelOverlapResolveLayoutsProperty">
            <summary>
            Reference to the FirstRowLabelOverlapResolveLayoutsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelOverlapResolveLayoutsProperty">
            <summary>
            Reference to the GroupRowLabelOverlapResolveLayoutsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowGridStyleProperty">
            <summary>
            Reference to the FirstRowGridStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowGridStyleProperty">
            <summary>
            Reference to the GroupRowGridStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowRangeFitModeProperty">
            <summary>
            Reference to the FirstRowRangeFitModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowRangeFitModeProperty">
            <summary>
            Reference to the GroupRowRangeFitModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowGridChild">
            <summary>
            Reference to the FirstRowGridChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowGridChild">
            <summary>
            Reference to the GroupRowGridChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelTextStyleProperty">
            <summary>
            Reference to the FirstRowLabelTextStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelTextStyleProperty">
            <summary>
            Reference to the GroupRowLabelTextStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.ChildNodesChild">
            <summary>
            Reference to the ChildNodesChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.FirstRowLabelAngleProperty">
            <summary>
            Reference to the FirstRowLabelAngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.GroupRowLabelAngleProperty">
            <summary>
            Reference to the GroupRowLabelAngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.CreateSeparatorForEachLevelProperty">
            <summary>
            Reference to the CreateSeparatorForEachLevelProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScale.DisplayDataPointsBetweenTicksProperty">
            <summary>
            Reference to the DisplayDataPointsBetweenTicksProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHierarchicalScaleNode">
            <summary>
            Represents a node in a hierachichal scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHierarchicalScaleNode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHierarchicalScaleNode.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScaleNode.Text">
            <summary>
            Gets or sets the text of this node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScaleNode.Length">
            <summary>
            Gets or sets the length of this node in scale logical units
            </summary>
            <remarks>
            This property will have effect only if the node does not have child node, otherwise
            the lenght of node on the scale will be computed as the length of all its descendants
            that do not have children (leafs).
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScaleNode.LabelStyle">
            <summary>
            Gets or sets the label style of this node
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NHierarchicalScaleNode.Nodes">
            <summary>
            Gets or sets the child nodes collection of this node
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNode.NHierarchicalScaleNodeSchema">
            <summary>
            Schema associated with NHierarchicalScaleNode schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNode.LabelStyleProperty">
            <summary>
            Reference to the LabelStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNode.NodesChild">
            <summary>
            Reference to the NodesChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNode.TextProperty">
            <summary>
            Reference to the TextProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNode.LengthProperty">
            <summary>
            Reference to the LengthProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NHierarchicalScaleNodeCollection">
            <summary>
            Represents a collection of hierarchical scale nodes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NHierarchicalScaleNodeCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NHierarchicalScaleNodeCollection.NHierarchicalScaleNodeCollectionSchema">
            <summary>
            Reference to the NHierarchicalScaleNodeCollection schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScale">
            <summary>
            Base class for all scale configurators.
            </summary>
            <remarks>
            For more information please refer to the Axis Scales topic in the Users Guide.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NScale.#ctor">
            <summary>
            Initializer constrctor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.MajorGridLines">
            <summary>
            Gets or sets the major grid 
            </summary>
            <remarks>
            The major grid displays lines at major ticks on the scale wall area
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.InnerMajorTicks">
            <summary>
            Gets or sets the inner major tick
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.OuterMajorTicks">
            <summary>
            Gets or sets the style the major tick lines.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.Title">
            <summary>
            Gets or sets the scale title
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.Ruler">
            <summary>
            Gets or sets the ruler style controlling the appearance of the scale ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.Invert">
            <summary>
            Gets or sets a value indicating whether this scale is inverted.
            </summary>
            <value><c>true</c> if invert; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.InflateContentRange">
            <summary>
            Gets or sets a value indicating whether the scale will inflate the content range. 
            </summary>
            <remarks>
            Some scale types like ordinal apply contnent inflate around the first and last category. Setting
            this property to false will ignore this additional inflate.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.InflateViewRangeBegin">
            <summary>
            Gets or sets a value indicating whether the scale view min value should
            be inflated according to the ViewInflateMode settings
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.InflateViewRangeEnd">
            <summary>
            Gets or sets a value indicating whether the scale view max value should
            be inflated according to the ViewInflateMode settings
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.ViewRangeInflateMode">
            <summary>
            Gets or sets the scale view range inflate mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.LogicalInflate">
            <summary>
            Gets or sets the logical inflate when InflateMode is set to Logical
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.AbsoluteInflate">
            <summary>
            Gets or sets the absolute inflate when InflateMode is set to Absolute
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.Strips">
            <summary>
            Gets or sets the scale strip styles applied on the scale.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.Sections">
            <summary>
            Gets or sets the sections of this scale.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.ScaleBreaks">
            <summary>
            Gets or sets the scale breaks associated with this axis
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.CustomLabelOverlapResolveLayouts">
            <summary>
            Gets / sets on array of label fit modes. When set to an empty array the control will not try
            to auto fit the axis scale labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.CreateNewLevelForCustomLabels">
            <summary>
            Gets or set a value indicating whether custom labels should be placed in a
            new scale level or use the scale level of the automatic labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.CustomLabelsLevelOffset">
            <summary>
            Gets or sets the offset of the custom labels level on the scale.
            </summary>
            <remarks>
            This property will have effect only when CreateNewLevelForCustomLabels is set to true
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScale.CustomLabels">
            <summary>
            Gets a collection of custom labels
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScale.SetColor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Applies the specified color to the axis
            </summary>
            <param name="color"></param>
            <remarks>
            This is a helper method that allows you to easily set the color of all axis elements
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.NScaleSchema">
            <summary>
            Schema associated with NScale schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.InvertProperty">
            <summary>
            Reference to the InvertProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.RulerChild">
            <summary>
            Reference to the RulerChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.StripCollectionChild">
            <summary>
            Reference to the StripCollectionChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.ScaleBreakCollectionChild">
            <summary>
            Reference to the ScaleBreakCollectionChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.SectionCollectionChild">
            <summary>
            Reference to the SectionCollectionChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.InnerMajorTicksChild">
            <summary>
            Reference to the InnerMajorTicksChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.OuterMajorTicksChild">
            <summary>
            Reference to the OuterMajorTicksChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.ViewRangeInflateModeProperty">
            <summary>
            Reference to the ViewRangeInflateModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.LogicalInflateProperty">
            <summary>
            Reference to the LogicalInflateProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.AbsoluteInflateProperty">
            <summary>
            Reference to the AbsoluteInflateProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.InflateViewRangeBeginProperty">
            <summary>
            Reference to the InflateViewRangeBeginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.InflateViewRangeEndProperty">
            <summary>
            Reference to the InflateViewRangeEndProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.InflateContentRangeProperty">
            <summary>
            Reference to the InflateContentRangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.TitleChild">
            <summary>
            Reference to the TitleChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.MajorGridLinesChild">
            <summary>
            Reference to the MajorGridLinesChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.CustomLabelsChild">
            <summary>
            Reference to the CustomLabelsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.CreateNewLevelForCustomLabelsProperty">
            <summary>
            Reference to the CreateNewLevelForCustomLabelsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.CustomLabelsLevelOffsetProperty">
            <summary>
            Reference to the CustomLabelsLevelOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScale.CustomLabelOverlapResolveLayoutsProperty">
            <summary>
            Reference to the CustomLabelOverlapResolveLayoutsProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScale.NScaleDesigner">
            <summary>
            Designer for NScale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScale.NScaleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScale.NScaleDesigner.GetCompatibleTypes">
            <summary>
            Returns the types this designer is compatible with.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleElement">
            <summary>
            Base for all scale elements
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleElement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleElement.OnAttributeChanged(Nevron.Nov.Dom.NAttribute)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleElement.OnChanged(Nevron.Nov.Dom.NChangeData)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleElement.NScaleElementSchema">
            <summary>
            Schema associated with NScaleElement schema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleElementCollection`1">
            <summary>
            Base for all scale element collections
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleElementCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleElementCollection`1.NScaleElementCollectionSchema">
            <summary>
            Schema associated with NScaleElementCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScalePlotElement">
            <summary>
            Base for all scale elements
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScalePlotElement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScalePlotElement.ShowAtWalls">
            <summary>
            Gets or set a bitmask controlling the walls this grid line is allow to show at when visible
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScalePlotElement.GetShowAtWall(Nevron.Nov.Chart.ENChartWall)">
            <summary>
            Gets whether to show the element at the chart wall
            </summary>
            <param name="chartWall"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NScalePlotElement.SetShowAtWall(Nevron.Nov.Chart.ENChartWall,System.Boolean)">
            <summary>
            Sets or clears the flag for the specfied wall
            </summary>
            <param name="chartWall"></param>
            <param name="show"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NScalePlotElement.NScalePlotElementSchema">
            <summary>
            Reference to the NScalePlotElement schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScalePlotElement.ShowAtWallsProperty">
            <summary>
            Reference to the ShowAtWalls property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStandardScale">
            <summary>
            Base class of all scale configurators.
            </summary>
            <remarks>
            For more information please refer to the Axis Scales topic in the Users Guide.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NStandardScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.MajorTickMode">
            <summary>
            Controls the mode of the major ticks.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.MaxTickCount">
            <summary>
            Controls the maximum number of major ticks when major tick mode is auto and max tick count mode is MaxCount
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.FixedTickCount">
            <summary>
            Controls the maximum number of ticks when major tick mode is fixed tick count
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.MinTickDistance">
            <summary>
            Gets / sets the minimum distance between of ticks on the scale when major tick mode is Auto and max tick count mode is MaxDensity
            </summary>
            <remarks>
            By default this value is set to 10pt
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.InflateBeginContentRangeWithCustomTicks">
            <summary>
            Gets or sets a value indicating whether custom ticks will inflate the scale end content range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.InflateEndContentRangeWithCustomTicks">
            <summary>
            Gets or sets a value indicating whether custom ticks will inflate the scale begin content range
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.GenerateRangeBeginTick">
            <summary>
            Gets or sets whether the scale will always generate a tick for the range begin value, regardless of the MajorTickMode setting
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.GenerateRangeEndTick">
            <summary>
            Gets or sets whether the scale will always generate a tick for the range end value, regardless of the MajorTickMode setting
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.InnerMinorTicks">
            <summary>
            Gets or sets the inner minor tick 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.OuterMinorTicks">
            <summary>
            Gets or sets the style off the outer minor tick lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.MinorTickCount">
            <summary>
            Specifies the number of minor ticks between two major ones.
            </summary>
            <remarks>
            By default set to 0 (no minor ticks).
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.AutoMinorTicks">
            <summary>
            Specifies whether minor ticks are automatically generated.
            </summary>
            <remarks>
            By default set to true. If set to false the minor ticks are displayed at values specified 
            by the array accessible with the help of the MinorTicks property of the NAxis class.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.Labels">
            <summary>
            Gets the label child
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.UseOrigin">
            <summary>
            Specifies whether an origin value should be used for the automatically generated major ticks.
            </summary>
            <remarks>
            If set to true the Origin value is displayed by a major tick. If set to false the major ticks begin from the minimal scale value.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.ScaleLevelBuildMode">
            <summary>
            Gets or sets a value indicating how the scale configurator will build scale levels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.OuterTicksLevelFill">
            <summary>
            Gets or sets the background fill applied to the level containing the inner ticks
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardScale.MinorGridLines">
            <summary>
            Gets or sets the style controlling the minor grid lines displayed by the scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStandardScale.SetColor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Applies the specified color to the axis
            </summary>
            <param name="color"></param>
            <remarks>
            This is a helper method that allows you to easily set the color of all axis elements
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NStandardScale.SetPredefinedScale(Nevron.Nov.Chart.ENPredefinedScaleStyle)">
            <summary>
            Sets a predefined scale configuration
            </summary>
            <param name="scaleStyle"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.NStandardScaleSchema">
            <summary>
            Schema associated with NStandardScale 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.ScaleLevelBuildModeProperty">
            <summary>
            Reference to the ScaleLevelBuildModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.MinTickDistanceProperty">
            <summary>
            Reference to the MinTickDistanceProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.MaxTickCountProperty">
            <summary>
            Reference to the MaxTickCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.FixedTickCountProperty">
            <summary>
            Reference to the FixedTickCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.UseOriginProperty">
            <summary>
            Reference to the UseOriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.LabelsChild">
            <summary>
            Reference to the LabelsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.MajorTickModeProperty">
            <summary>
            Reference to the MajorTickModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.MinorTickCountProperty">
            <summary>
            Reference to the MinorTickCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.AutoMinorTicksProperty">
            <summary>
            Reference to the AutoMinorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.InnerMinorTicksChild">
            <summary>
            Reference to the InnerMinorTicksChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.OuterMinorTicksChild">
            <summary>
            Reference to the OuterMinorTicksChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.InflateBeginContentRangeWithCustomTicksProperty">
            <summary>
            Reference to the InflateBeginContentRangeWithCustomTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.InflateEndContentRangeWithCustomTicksProperty">
            <summary>
            Reference to the InflateEndContentRangeWithCustomTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.InnerTicksLevelFillProperty">
            <summary>
            Reference to the InnerTicksLevelFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.OuterTicksLevelFillProperty">
            <summary>
            Reference to the OuterTicksLevelFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.GenerateRangeBeginTickProperty">
            <summary>
            Reference to the GenerateRangeBeginTickProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.GenerateRangeEndTickProperty">
            <summary>
            Reference to the GenerateRangeEndTickProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardScale.MinorGridLinesChild">
            <summary>
            Reference to the MinorGridLinesChild
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStandardScale.NStandardScaleDesigner">
            <summary>
            Designer for NStandardScale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStandardScale.NStandardScaleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLinearScale">
            <summary>
            Represents a linear scale.
            </summary>
            <remarks>
            This class inherits all functionality of its base class (NNumericScale) and adds support for linear numeric scales. 
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NLinearScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLinearScale.NLinearScaleSchema">
            <summary>
            Schema associated with NLinearScale
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLogarithmicScale">
            <summary>
            Represents a logarithmic scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLogarithmicScale.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NLogarithmicScale.LogarithmBase">
            <summary>
            Specifies the logarithm base.
            </summary>
            <remarks>
            By default 10. See the Axis Scales topic for more information.
            </remarks> 
        </member>
        <member name="F:Nevron.Nov.Chart.NLogarithmicScale.NLogarithmicScaleSchema">
            <summary>
            Schema associated with NLogarithmicScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NLogarithmicScale.LogarithmBaseProperty">
            <summary>
            Reference to the LogarithmBaseProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNumericScale">
            <summary>
            Base class for numeric scales
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.CustomStep">
            <summary>
            Specifies the major ticks custom step when the mode is set to CustomStep.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.CustomSteps">
            <summary>
            Specifies the major ticks custom steps when the mode is set to CustomSteps.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.CustomMinorTicks">
            <summary>
            Gets or sets the minor ticks when the AutoMinor property ticks is set to false
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.CustomMajorTicks">
            <summary>
            Gets or sets the array of major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.EnableDecimalRounding">
            <summary>
            Whether decimal values should be rounded to the nearest binary representable 
            power of ten precision
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.AutoMinStep">
            <summary>
            Gets / sets the minimum step allowed for automatic ticks 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericScale.AutoMaxStep">
            <summary>
            The maximum step allowed for automatic ticks.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.NNumericScaleSchema">
            <summary>
            Schema associated with 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.CustomStepsProperty">
            <summary>
            Reference to the CustomStepsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.EnableDecimalRoundingProperty">
            <summary>
            Reference to the EnableDecimalRoundingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.CustomMajorTicksProperty">
            <summary>
            Reference to the CustomMajorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.CustomMinorTicksProperty">
            <summary>
            Reference to the CustomMinorTicksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.AutoMinStepProperty">
            <summary>
            Reference to the AutoMinStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericScale.AutoMaxStepProperty">
            <summary>
            Reference to the AutoMaxStepProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNumericScale.NStandardScaleDesigner">
            <summary>
            Designer for NStandardScale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericScale.NStandardScaleDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTransformedScale">
            <summary>
            Base class for trnasformed scales
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTransformedScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTransformedScale.TransformScale">
            <summary>
            Gets or sets a value indicating whether the scale decorations should be transformed
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTransformedScale.NTransformedScaleSchema">
            <summary>
            Schema associated with NTransformedScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTransformedScale.TransformScaleProperty">
            <summary>
            Reference to the TransformScaleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NOrdinalScale">
            <summary>
            Represents an ordinal scale configurator.
            </summary>
            <remarks>
            This class inherits all functionality of its base class (NStandardScaleConfigurator) and adds support for ordinal scales.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NOrdinalScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScale.DisplayDataPointsBetweenTicks">
            <summary>
            Controls the position of the data point relative to the tick positions.
            </summary>
            <remarks>
            If set to True the data point is positioned between two adjacent ticks, otherwise it 
            is positioned exactly on the tick. In the second case you may consider turning on the 
            InflateMargins flag of the presentation groups to fit the chart inside the chart area.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScale.CustomStep">
            <summary>
            Specifies the major ticks custom step when the mode is set to CustomStep.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScale.CustomSteps">
            <summary>
            Specifies the major ticks custom steps when the mode is set to CustomSteps.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScale.CustomMajorTicks">
            <summary>
            Gets or sets the array of major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScale.Origin">
            <summary>
            Specifies the major tick origin value when the UseOrigin property is set to true.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.NOrdinalScaleSchema">
            <summary>
            Schema associated with NOrdinalScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.OriginProperty">
            <summary>
            Reference to the Origin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.CustomStepProperty">
            <summary>
            Reference to the CustomStep property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.CustomStepsProperty">
            <summary>
            Reference to the CustomSteps property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.CustomMajorTicksProperty">
            <summary>
            Reference to the CustomMajorTicks property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.AutoLabelsBaseProperty">
            <summary>
            Reference to the AutoLabelsBaseProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScale.DisplayDataPointsBetweenTicksProperty">
            <summary>
            Reference to the DisplayDataPointsBetweenTicksProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.INValueTransform">
            <summary>
            Summary description for INValueTransformer.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.INValueTransform.Transform(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NPriceTimeScale">
            <summary>
            The price time scale is a special type of scale targeted for displaying
            date time values for financial charts such as Renko, Kagi, Three Line Break and Point and Figure.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPriceTimeScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPriceTimeScale.Origin">
            <summary>
            Specifies the major tick origin value when the UseOrigin property is set to true.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPriceTimeScale.CustomStep">
            <summary>
            Specifies the major ticks custom step when the mode is set to CustomStep.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPriceTimeScale.CustomSteps">
            <summary>
            Specifies the major ticks custom steps when the mode is set to CustomSteps.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPriceTimeScale.CustomMajorTicks">
            <summary>
            Gets or sets the array of major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceTimeScale.NPriceTimeScaleSchema">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceTimeScale.OriginProperty">
            <summary>
            Reference to the Origin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceTimeScale.CustomStepProperty">
            <summary>
            Reference to the CustomStep property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceTimeScale.CustomStepsProperty">
            <summary>
            Reference to the CustomSteps property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPriceTimeScale.CustomMajorTicksProperty">
            <summary>
            Reference to the CustomMajorTicks property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTimelineLabels">
            <summary>
            Controls the timeline label
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimelineLabels.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineLabels.Style">
            <summary>
            Gets or sets the style applied on the timeline labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineLabels.TextProvider">
            <summary>
            Gets or set the timeline scale labels text provider
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineLabels.NTimelineLabelsSchema">
            <summary>
            Reference to the NTimelineLabels schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineLabels.StyleProperty">
            <summary>
            Reference to the Style property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineLabels.TextProviderProperty">
            <summary>
            Reference to the TextProvider property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTimelineScale">
            <summary>
            The base for timeline scales - range and value timeline
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimelineScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.Origin">
            <summary>
            Gets or sets the scale origin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.TickMode">
            <summary>
            Gets or sets the style of labels generated by the first row
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.MinTickDistance">
            <summary>
            Gets or sets the minimum distance between of ticks on the scale when major tick mode is Auto and max tick count mode is MaxDensity
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.MaxTickCount">
            <summary>
            Gets or sets the number of ticks when tick mode is auto and max tick count mode is MaxCount
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.CustomStep">
            <summary>
            Specifies the time span step when tick mode is set to TimeSpan.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.AutoDateTimeUnits">
            <summary>
            Gets or sets the date time units that are allowed when the scale is 
            scaling automatically
            </summary>
            <remarks>
            By default the scale will contain all possible date time units including: 
            Century, Decade, Year, HalfYear, Quarter, Month, Week, Day, HalfDay, Hour, Minute,
            Second and Millisecond.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.EnableCalendar">
            <summary>
            Gets or sets a value indicating whether the timeline should
            use the calendar settings, allow you skip days and time from 
            scale transform and calculation
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.Calendar">
            <summary>
            Gets the calendar used to determine between working and non working days and time.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScale.Rows">
            <summary>
            Gets the rows contained in this timeline scale configurator
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScale.NTimelineScaleSchema">
            <summary>
            Schema associated with NTimelineScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScale.AutoDateTimeUnitsProperty">
            <summary>
            Reference to the AutoDateTimeUnitsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScale.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScale.EnableCalendarProperty">
            <summary>
            Reference to the EnableCalendarProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScale.CalendarProperty">
            <summary>
            Reference to the CalendarProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NTimelineScaleRow">
            <summary>
            The base of the range and value timeline scale rows
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimelineScaleRow.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.Visible">
            <summary>
            Gets or set the visibility of this timeline scale row
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.TickMode">
            <summary>
            Gets or sets the style of labels generated by this row
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.MinTickDistance">
            <summary>
            Gets or sets the minimum distance between of ticks on the scale when major tick mode is Auto and max tick count mode is MaxDensity
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.MaxTickCount">
            <summary>
            Gets or sets the number of ticks when tick mode is auto and max tick count mode is MaxCount
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.CustomStep">
            <summary>
            Specifies the time span step when tick mode is set to TimeSpan.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.UseGrid">
            <summary>
            Gets or sets a value indicating whether to use the grid line style specified by this row or the 
            default major grid line specified from the configurator
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.GridLines">
            <summary>
            Gets or sets the style controlling the major grid lines displayed by the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NTimelineScaleRow.Labels">
            <summary>
            Gets the auto labels element of this row
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimelineScaleRow.SetPredefinedFormattingForRow(System.Int32)">
            <summary>
            Sets a predefined formatting for a specified row number
            </summary>
            <param name="rowNumber">a value in the range [0, 2]</param>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.NTimelineScaleRowSchema">
            <summary>
            Schema associated with NTimelineScaleRow
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.VisibleProperty">
            <summary>
            Reference to the VisibleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.TickModeProperty">
            <summary>
            Reference to the TickModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.MinTickDistanceProperty">
            <summary>
            Reference to the MinTickDistanceProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.MaxTickCountProperty">
            <summary>
            Reference to the MaxTickCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.LabelsChild">
            <summary>
            Reference to the LabelsChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.UseGridProperty">
            <summary>
            Reference to the UseGridProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NTimelineScaleRow.GridLinesChild">
            <summary>
            Reference to the GridLinesChild
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeTimelineScale">
            <summary>
            Represents a scale configurator that will produce a timeline scale of multiple levels
            decorated with date / time range labels 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeTimelineScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.CreateSeparatorForEachRow">
            <summary>
            Gets or sets a value indicating whether a ruler separator should be
            created for each row in the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.LevelTopPadding">
            <summary>
            Gets or sets the top padding applied to the scale levels comprising the range
            timeline scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.LevelBottomPadding">
            <summary>
            Gets or set the bottom padding applied to the scale levels comprising the range
            timeline scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.FirstRow">
            <summary>
            Gets the first row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.SecondRow">
            <summary>
            Gets the second row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.ThirdRow">
            <summary>
            Gets the third row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeTimelineScale.Rows">
            <summary>
            Gets the rows contained in this timeline scale configurator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeTimelineScale.SetColor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Applies the specified color to the axis
            </summary>
            <param name="color"></param>
            <remarks>
            This is a helper method that allows you to easily set the color of all axis elements
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.NRangeTimelineScaleSchema">
            <summary>
            Schema associated with NRangeTimelineScale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.LevelTopPaddingProperty">
            <summary>
            Reference to the LevelTopPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.LevelBottomPaddingProperty">
            <summary>
            Reference to the LevelBottomPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.CreateSeparatorForEachRowProperty">
            <summary>
            Reference to the CreateSeparatorForEachRowProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.FirstRowChild">
            <summary>
            Reference to the FirstRowChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.SecondRowChild">
            <summary>
            Reference to the SecondRowChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScale.ThirdRowChild">
            <summary>
            Reference to the ThirdRowChild
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeTimelineScaleRow">
            <summary>
            Represents a row of date / time labels in a range timeline scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeTimelineScaleRow.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeTimelineScaleRow.SetPredefinedFormattingForRow(System.Int32)">
            <summary>
            Sets a predefined formatting for a specified row number
            </summary>
            <param name="rowNumber">a value in the range [0, 2]</param>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeTimelineScaleRow.NRangeTimelineScaleRowSchema">
            <summary>
            Schema associated with NRangeTimelineScaleRowSchema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueTimelineScale">
            <summary>
            Represents a scale configurator that will produce a timeline scale decorated with date / time value labels 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTimelineScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScale.FirstRow">
            <summary>
            Gets the first row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScale.SecondRow">
            <summary>
            Gets the second row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScale.ThirdRow">
            <summary>
            Gets the third row of the timeline
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScale.Rows">
            <summary>
            Gets the rows contained in this timeline scale configurator
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTimelineScale.SetColor(Nevron.Nov.Graphics.NColor)">
            <summary>
            Applies the specified color to the axis
            </summary>
            <param name="color"></param>
            <remarks>
            This is a helper method that allows you to easily set the color of all axis elements
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScale.NValueTimelineScaleSchema">
            <summary>
            Schema associated with NValueTimelineScaleSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScale.FirstRowChild">
            <summary>
            Reference to the FirstRowChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScale.SecondRowChild">
            <summary>
            Reference to the SecondRowChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScale.ThirdRowChild">
            <summary>
            Reference to the ThirdRowChild
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueTimelineScaleRow">
            <summary>
            Represents a row of date / time labels in a value timeline scale
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTimelineScaleRow.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScaleRow.OuterTicks">
            <summary>
            Gets or sets the tick style controlling the appearance of outer ticks generated by this row, when UseTickStyle is set to true
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueTimelineScaleRow.InnerTicks">
            <summary>
            Gets or sets the tick style controlling the appearance of inner ticks generated by this row
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueTimelineScaleRow.SetPredefinedFormattingForRow(System.Int32)">
            <summary>
            Sets a predefined formatting for a specified row number
            </summary>
            <param name="rowNumber">a value in the range [0, 2]</param>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScaleRow.NValueTimelineScaleRowSchema">
            <summary>
            Reference to the NValueTimelineScaleRow schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScaleRow.OuterTicksChild">
            <summary>
            Reference to the OuterTicks child
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueTimelineScaleRow.InnerTicksChild">
            <summary>
            Reference ot the InnerTicks child
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDateTimeDecorationRange">
            <summary>
            Provides a date / time decoration range 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeDecorationRange.Origin">
            <summary>
            Specifies the date/time of the major tick origin when the UseOrigin property is set to true.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomStep">
            <summary>
            Specifies the time span step when the major tick mode is set to TimeSpan.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomSteps">
            <summary>
            Specifies custom steps
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomValues">
            <summary>
            Gets or sets the array of custom major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeDecorationRange.NDateTimeDecorationRangeSchema">
            <summary>
            Schema associated with NDateTimeDecorationRanges
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeDecorationRange.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomStepsProperty">
            <summary>
            Reference to the CustomStepsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeDecorationRange.CustomValuesProperty">
            <summary>
            Reference to the CustomValuesProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDecorationRange">
            <summary>
            Base class for all decoration ranges
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDecorationRange.NDecorationRangeSchema">
            <summary>
            Schema associated with NDecorationRange
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NMajorTickDecorationRange">
            <summary>
            A decoration range will use the current major tick settings
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMajorTickDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMajorTickDecorationRange.NMajorTickDecorationRangeSchema">
            <summary>
            Schema associated with NMajorTickDecorationRange
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NMinorTickDecorationRange">
            <summary>
            A decoration range  that will use the current minor tick settings
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NMinorTickDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NMinorTickDecorationRange.NMinorTickDecorationRangeSchema">
            <summary>
            Schema associated with NMinorTickDecorationRange
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNumericDecorationRange">
            <summary>
            Provides a custom specified numeric decoration range
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.CustomStep">
            <summary>
            Specifies the custom step when the mode is set to CustomStep
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.CustomSteps">
            <summary>
            Specifies the custom steps when the mode is set to CustomSteps
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.CustomValues">
            <summary>
            Gets or sets the array of custom major ticks.
            </summary>
            <remarks>
            When the current axis scale is switched in manual major tick mode 
            you can specify the values at which major ticks are displayed.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.Origin">
            <summary>
            Specifies the origin value when the UseOrigin property is set to true.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.AutoMinStep">
            <summary>
            The minimum step allowed for automatic ticks.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericDecorationRange.AutoMaxStep">
            <summary>
            The maximum step allowed for automatic ticks.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.NNumericDecorationRangeSchema">
            <summary>
            Schema associated with NNumericDecorationRange
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.OriginProperty">
            <summary>
            Reference to the OriginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.CustomStepProperty">
            <summary>
            Reference to the CustomStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.CustomStepsProperty">
            <summary>
            Reference to the CustomStepsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.CustomValuesProperty">
            <summary>
            Reference to the CustomValuesProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.AutoMinStepProperty">
            <summary>
            Reference to the AutoMinStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericDecorationRange.AutoMaxStepProperty">
            <summary>
            Reference to the AutoMaxStepProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NStandardDecorationRange">
            <summary>
            Base range sampler provider
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NStandardDecorationRange.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardDecorationRange.SamplingMode">
            <summary>
            Gets or sets the sampling mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardDecorationRange.UseOrigin">
            <summary>
            Specifies whether an origin value should be used when SamplingMode is set to MaxCount or MaxDensity.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardDecorationRange.MinDistance">
            <summary>
            Gets or sets the minimum distance allowed when SamplingMode is set to MinDistance
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NStandardDecorationRange.MaxCount">
            <summary>
            Gets or sets the maximum count allowed when SamplingMode is set to MaxCount
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardDecorationRange.NStandardDecorationRangeSchema">
            <summary>
            Schema associated with NStandardDecorationRange
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardDecorationRange.SamplingModeProperty">
            <summary>
            Reference to the SamplingModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardDecorationRange.MinDistancePropery">
            <summary>
            Reference to the MinDistancePropery
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardDecorationRange.MaxCountProperty">
            <summary>
            Reference to the MaxCountProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NStandardDecorationRange.UseOriginProperty">
            <summary>
            Reference to the UseOriginProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleGridLines">
            <summary>
            Controls the grid lines displayed by the axis at the chart walls
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleGridLines.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleGridLines.#ctor(Nevron.Nov.Graphics.NStroke,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="stroke"></param>
            <param name="extendInChartArea"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleGridLines.DecorationRange">
            <summary>
            Gets or sets a range sampler provider controlling how interlace stripes are generated
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleGridLines.Stroke">
            <summary>
            Gets or sets the stroke style of the grid lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleGridLines.ExtendInChartArea">
            <summary>
            Whether to extend the stripline in the chart area
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleGridLines.Visible">
            <summary>
            Gets or sets a value indicating whether the grid is visible
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleGridLines.NScaleGridLinesSchema">
            <summary>
            Schema associated with NScaleGridLines
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleGridLines.VisibleProperty">
            <summary>
            Reference to the VisibleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleGridLines.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleGridLines.DecorationRangeProperty">
            <summary>
            Reference to the DecorationRangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleGridLines.ExtendInChartAreaProperty">
            <summary>
            Reference to the ExtendInChartAreaProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCustomLabel">
            <summary>
            The base class for custom labels (value or range)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomLabel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomLabel.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomLabel.Text">
            <summary>
            Gets or sets the text displayed by the label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomLabel.NCustomLabelSchema">
            <summary>
            Schema associated with NCustomLabel
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomLabel.TextProperty">
            <summary>
            Reference to the TextProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCustomLabelCollection">
            <summary>
            Represents a collection of custom labels
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomLabelCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomLabelCollection.NCustomLabelCollectionSchema">
            <summary>
            Schema associated with NCustomLabelCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCustomRangeLabel">
            <summary>
            Represents a label displayed at a specified custom range
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomRangeLabel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomRangeLabel.#ctor(Nevron.Nov.Graphics.NRange,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
            <param name="text"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomRangeLabel.Range">
            <summary>
            Gets or sets the scale range of the label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomRangeLabel.LabelStyle">
            <summary>
            Gets or sets the label object associated with the range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomRangeLabel.NCustomRangeLabelSchema">
            <summary>
            Schema associated with NCustomRangeLabel
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomRangeLabel.RangeProperty">
            <summary>
            Reference to the RangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomRangeLabel.LabelStyleProperty">
            <summary>
            Reference to the LabelStyleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCustomValueLabel">
            <summary>
            Represents a label displayed at a specified custom value
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomValueLabel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomValueLabel.#ctor(System.Double,System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="value"></param>
            <param name="text"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomValueLabel.Value">
            <summary>
            Gets or sets the scale value of the label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomValueLabel.LabelStyle">
            <summary>
            Gets or sets the label associated with the value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomValueLabel.NCustomValueLabelSchema">
            <summary>
            Schema associated with NCustomValueLabel
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomValueLabel.LabelStyleProperty">
            <summary>
            Reference to the LabelStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomValueLabel.ValueProperty">
            <summary>
            Reference to the ValueProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeScaleLabelStyle">
            <summary>
            Describes the appearance of the automatically generated labels on a scale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeScaleLabelStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeScaleLabelStyle.#ctor(Nevron.Nov.UI.NTextStyle,Nevron.Nov.ENContentAlignment,Nevron.Nov.Chart.NScaleLabelAngle,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="textStyle"></param>
            <param name="contentAlignment"></param>
            <param name="angle"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickMode">
            <summary>
            Gets or sets the range label tick mode
            </summary>
            <remarks>
            The tick mode defines the appearance of the range label ticks annotating 
            the range of the label
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickVisibilityMode">
            <summary>
            Controls the visibility of range label ticks
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.TextPadding">
            <summary>
            Gets or sets the offset (padding) of the label text from its range
            </summary>
            <remarks>
            This property has effect only when TickMode is set to Separators or Center
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickPadding">
            <summary>
            Gets or sets the offset (padding) of the tick lines from the label text
            </summary>
            <remarks>
            This property has effect only when TickMode is set to RangeLabelTickMode.Center or RangeLabelTickMode.Top
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.ScaleTickLeftPadding">
            <summary>
            Gets / sets the scale tick left padding
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.ScaleTickRightPadding">
            <summary>
            Gets / sets the scale tick right padding
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickOffset">
            <summary>
            Gets or sets the offset of the range label tick in the scale level
            </summary>
            <remarks>
            This property does not have any effect when TickMode is set to RangeLabelTickMode.Separators
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.Stroke">
            <summary>
            Gets or sets the stroke used to paint the line connecting the label
            end caps to the label origin points
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.BeginCap">
            <summary>
            Gets or sets the begin cap style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.EndCap">
            <summary>
            Gets or sets the end cap style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.FitMode">
            <summary>
            Gets or sets the fit mode of this label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRangeScaleLabelStyle.MaxWidth">
            <summary>
            Specifies the maximum width of the scale label
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.NRangeScaleLabelStyleSchema">
            <summary>
            Schema associated with NRangeScaleLabelStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.TextPaddingProperty">
            <summary>
            Reference to the TextPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickPaddingProperty">
            <summary>
            Reference to the TickPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.ScaleTickLeftPaddingProperty">
            <summary>
            Reference to the ScaleTickLeftPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.ScaleTickRightPaddingProperty">
            <summary>
            Reference to the ScaleTickRightPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickOffsetProperty">
            <summary>
            Reference to the TickOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.BeginCapProperty">
            <summary>
            Reference to the BeginCapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.EndCapProperty">
            <summary>
            Reference to the EndCapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.FitModeProperty">
            <summary>
            Reference to the FitModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickModeProperty">
            <summary>
            Reference to the TickModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.TickVisibilityModeProperty">
            <summary>
            Reference to the TickVisibilityModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleLabelStyle.MaxWidthProperty">
            <summary>
            Reference to the MaxWidthProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleLabelAngle">
            <summary>
            Represents a scale label angle
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelAngle.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="customAngleInDegrees"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelAngle.#ctor(Nevron.Nov.Chart.ENScaleLabelAngleMode,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="labelAngleMode"></param>
            <param name="customAngleInDegrees"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelAngle.#ctor(Nevron.Nov.Chart.ENScaleLabelAngleMode,System.Single,System.Boolean)">
            <summary>
            Initializer constructor
            </summary>
            <param name="labelAngleMode"></param>
            <param name="customAngleInDegrees"></param>
            <param name="allowTextFlip"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelAngle.CustomAngle">
            <summary>
            Gets or sets the custom angle
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelAngle.AllowTextFlip">
            <summary>
            Gets or sets whether text is allowed to flip
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelAngle.LabelAngleMode">
            <summary>
            Gets or sets the mode of the scale label angle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleLabels">
            <summary>
            Controls the auto labels displayed by the axis 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabels.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.Visible">
            <summary>
            Gets or sets whether the label is visible
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.Style">
            <summary>
            Gets or sets the label associated with the value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.LevelFill">
            <summary>
            Gets or sets the fill of the scale level generated by this labels object
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.NumberOfTicksPerLabel">
            <summary>
            Controls the number of ticks that are generated between two labels
            </summary>
            <remarks>
            The default value of this property is 1. Note that this property has effect only when you use automatic labels.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.TextProvider">
            <summary>
            Gets or sets the text provider for the labels generated by this scale labels object
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.GenerationMode">
            <summary>
            Gets or sets a property indicating the number of levels for the scale labels
            </summary>
            <remarks>
            Settings this property to Stagger2 or Stagger3 will produce two or three levels of
            labels. You may consider to exclude the Stagger2 fit mode from the scale fit modes.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.OverlapResolveLayouts">
            <summary>
            Gets / sets on array of label overlap resolve layouts. When set to an empty array the control will not try
            to resolve overlapping labels.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.DisplayFirst">
            <summary>
            Gets/sets a value indicating whether the scale must display the first generated label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.DisplayLast">
            <summary>
            Gets/sets a value indicating whether the scale must display the last generated label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.TopLavelPadding">
            <summary>
            Gets or sets the top padding applied to the levels comprising the hierarchical scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabels.BottomLevelPadding">
            <summary>
            Gets or sets the bottom padding applied to the levels comprising the hierarchical scale
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.NScaleLabelsSchema">
            <summary>
            Schema associated with NScaleLabels
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.StyleProperty">
            <summary>
            Reference to the StyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.TextProviderProperty">
            <summary>
            Reference to the TextProviderProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.NumberOfTicksPerLabelProperty">
            <summary>
            Reference to the NumberOfTicksPerLabelProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.GenerationModeProperty">
            <summary>
            Reference to the GenerationModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.OverlapResolveLayoutsProperty">
            <summary>
            Reference to the OverlapResolveLayoutsProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.TopLavelPaddingProperty">
            <summary>
            Reference to the TopLavelPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.BottomLevelPaddingProperty">
            <summary>
            Reference to the BottomLevelPaddingProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.DisplayFirstProperty">
            <summary>
            Reference to the DisplayFirstProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.DisplayLastProperty">
            <summary>
            Reference to the DisplayLastProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.LevelFillProperty">
            <summary>
            Reference to the LevelFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabels.VisibleProperty">
            <summary>
            Reference to the VisibleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleLabelStyle">
            <summary>
            Describes the appearance of the automatically generated labels on a scale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelStyle.#ctor(Nevron.Nov.UI.NTextStyle,Nevron.Nov.ENContentAlignment,Nevron.Nov.Chart.NScaleLabelAngle,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="textStyle"></param>
            <param name="contentAlignment"></param>
            <param name="angle"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.AlwaysInsideScale">
            <summary>
            Gets or sets a value indicating whether the label using this style will be 
            placed always inside the scale bounds
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.ContentAlignment">
            <summary>
            Gets or sets the alignment of value labels relative to their origin point on the scale
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.Angle">
            <summary>
            Gets or sets the angle of the scale labels
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.TextStyle">
            <summary>
            Gets or sets the NTextStyle object applied to the scale value labels text.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.Offset">
            <summary>
            Specifies the offset of the scale labels from the tickmarks in NLength format
            </summary>
            <remarks>
            By default this value is set to two points (2pt)
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.NonOverlappingArea">
            <summary>
            Gets or sets additional non overllapping area around the label
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.VisibilityMode">
            <summary>
            Gets or sets the range label visibility mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleLabelStyle.ZOrder">
            <summary>
            Controls the Z order of the label
            </summary>
            <remarks>
            This value will be used by the RemoveOverlappingLabelsLayout. Labels with higher Z order 
            will remove overlapping labels with lower Z order.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.NScaleLabelStyleSchema">
            <summary>
            Schema associated with 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.ZOrderProperty">
            <summary>
            Reference to the ZOrderProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.AlwaysInsideScaleProperty">
            <summary>
            Reference to the AlwaysInsideScaleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.TextStyleProperty">
            <summary>
            Reference to the TextStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.OffsetProperty">
            <summary>
            Reference to the OffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.NonOverlappingAreaProperty">
            <summary>
            Reference to the NonOverlappingAreaProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.ContentAlignmentProperty">
            <summary>
            Reference to the ContentAlignmentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.AngleProperty">
            <summary>
            Reference to the AngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelStyle.VisibilityModeProperty">
            <summary>
            Reference to the VisibilityModeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueScaleLabelStyle">
            <summary>
            Controls the appearance of the automatically generated labels on a scale.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueScaleLabelStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueScaleLabelStyle.#ctor(Nevron.Nov.UI.NTextStyle,Nevron.Nov.ENContentAlignment,Nevron.Nov.Chart.NScaleLabelAngle,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="textStyle"></param>
            <param name="contentAligment"></param>
            <param name="angle"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NValueScaleLabelStyle.RangeAlignment">
            <summary>
            Gets or sets the alignment of value labels relative to the to scale range it represents
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueScaleLabelStyle.NValueScaleLabelStyleSchema">
            <summary>
            Schema associated with NValueScaleLabelStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueScaleLabelStyle.RangeAlignmentProperty">
            <summary>
            Reference to the RangeAlignmentProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider">
            <summary>
            Represents a collection of NDateTimeUnitFormatterPair objects
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.CenturyFormatter">
            <summary>
            Gets or sets the formatter associated with the century unit
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.DecadeFormatter">
            <summary>
            Gets or sets the formatter associated with the decade unit
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.YearFormatter">
            <summary>
            Gets or sets the formatter for the year unit.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HalfYearFormatter">
            <summary>
            Gets or sets the formatter for the Half year unit. 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.QuarterFormatter">
            <summary>
            Gets or sets the formatter for the quarter of a year.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MonthFormatter">
            <summary>
            Gets or sets the formatter for the month unit.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.WeekFormatter">
            <summary>
            Gets or sets the formatter for the week unit.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.DayFormatter">
            <summary>
            Gets or sets the formatter for the day unit.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HalfDayFormatter">
            <summary>
            Gets or sets the formatter for the half of a day unit.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HourFormatter">
            <summary>
            Gets or sets the formatter for the hour unit
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MinuteFormatter">
            <summary>
            Gets or sets the formatter for the minute unit.  
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.SecondFormatter">
            <summary>
            Gets or sets the formatter for the second unit
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MillisecondFormatter">
            <summary>
            Gets or sets the formatter for the millisecond unit. 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.TickFormatter">
            <summary>
            Gets or sets the formatter for the tick unit
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.ProvideText(Nevron.Nov.Chart.NRangeInfo,System.Double)">
            <summary>
            Provides the text for the specified value
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.NDateTimeUnitSensitiveLabelTextProviderSchema">
            <summary>
            Schema associated with NDateTimeUnitSensitiveLabelTextProvider
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.CenturyFormatterProperty">
            <summary>
            Reference to the CenturyFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.DecadeFormatterProperty">
            <summary>
            Reference to the DecadeFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.YearFormatterProperty">
            <summary>
            Reference to the YearFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HalfYearFormatterProperty">
            <summary>
            Reference to the HalfYearFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.QuarterFormatterProperty">
            <summary>
            Reference to the QuarterFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MonthFormatterProperty">
            <summary>
            Reference to the MonthFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.WeekFormatterProperty">
            <summary>
            Reference to the WeekFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.DayFormatterProperty">
            <summary>
            Reference to the DayFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HalfDayFormatterProperty">
            <summary>
            Reference to the HalfDayFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.HourFormatterProperty">
            <summary>
            Reference to the HourFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MinuteFormatterProperty">
            <summary>
            Reference to the MinuteFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.SecondFormatterProperty">
            <summary>
            Reference to the SecondFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.MillisecondFormatterProperty">
            <summary>
            Reference to the MillisecondFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider.TickFormatterProperty">
            <summary>
            Reference to the TickFormatterProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider">
            <summary>
            Represents a scale label text provider that provides formatted values based on the label scale value
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.#ctor(Nevron.Nov.Dom.NValueFormatter)">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueFormatter">
            <summary>
            Gets or sets the label value formatter
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueOffset">
            <summary>
            Gets or sets a value to be added when the label is generated
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueScale">
            <summary>
            Gets or sets a value to be multplied to the label value when the label is generated
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ProvideText(Nevron.Nov.Chart.NRangeInfo,System.Double)">
            <summary>
            Provides the text for the specified value
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.NFormattedScaleLabelTextProviderSchema">
            <summary>
            Schema associated with NFormattedScaleLabelTextProvider
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueFormatterProperty">
            <summary>
            Reference to the ValueFormatterProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueOffsetProperty">
            <summary>
            Reference to the ValueOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NFormattedScaleLabelTextProvider.ValueScaleProperty">
            <summary>
            Reference to the ValueScaleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider">
            <summary>
            Represents a scale label text provider that provides custom specified texts depending on the ordinal label scale value
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.#ctor(System.String[])">
            <summary>
            Initializer constructor
            </summary>
            <param name="texts"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.#ctor(Nevron.Nov.DataStructures.NList{System.String})">
            <summary>
            Initializer constructor
            </summary>
            <param name="texts"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.Texts">
            <summary>
            Gets or sets the column names to import from the specified file.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.ProvideText(Nevron.Nov.Chart.NRangeInfo,System.Double)">
            <summary>
            Provides the text for the specified value
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.m_Texts">
            <summary>
            The column names to import.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.NOrdinalScaleLabelTextProviderSchema">
            <summary>
            Schema associated with NOrdinalScaleLabelTextProvider
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider.TextsProperty">
            <summary>
            Reference to the TextsProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleLabelTextProvider">
            <summary>
            Base class for all scale label text providers
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleLabelTextProvider.ProvideText(Nevron.Nov.Chart.NRangeInfo,System.Double)">
            <summary>
            Provides the text for the specified value
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleLabelTextProvider.NScaleLabelTextProviderSchema">
            <summary>
            Schema associated with NScaleLabelTextProvider
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRuler">
            <summary>
            Controls the appearance of the scale ruler.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRuler.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRuler.#ctor(Nevron.Nov.Chart.ENScaleRulerShape,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="height"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.Shape">
            <summary>
            Gets or sets the shape of the scale level.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.PaintOnScaleBreaks">
            <summary>
            Gets or sets a value indicating whether the ruler will be displayed if a 
            scale break is present
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.Height">
            <summary>
            Gets or sets the height of the ruler.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.Offset">
            <summary>
            Gets or sets the offset of the ruler in the scale level in NMultiLength format.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.LeftMargin">
            <summary>
            Gets or sets the left margin of the ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.RightMargin">
            <summary>
            Gets or sets the left margin of the ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.Fill">
            <summary>
            Gets or sets the background filling of a scale level.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.BeginCap">
            <summary>
            Gets or sets the begin cap style of the axis ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.EndCap">
            <summary>
            Gets or sets the end cap style of the axis ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.ScaleBreakCap">
            <summary>
            Gets or sets the cap style to be applied when the separator crosses a scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRuler.Stroke">
            <summary>
            Gets or sets the border style of the scale level.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.NRulerSchema">
            <summary>
            Schema associated with NRuler
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.ShapeProperty">
            <summary>
            Reference to the ShapeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.PaintOnScaleBreaksProperty">
            <summary>
            Reference to the PaintOnScaleBreaksProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.FillProperty">
            <summary>
            Reference to the FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.HeightProperty">
            <summary>
            Reference to the HeightProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.OffsetProperty">
            <summary>
            Reference to the OffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.LeftMarginProperty">
            <summary>
            Reference to the LeftMarginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.RightMarginProperty">
            <summary>
            Reference to the RightMarginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.BeginCapProperty">
            <summary>
            Reference to the BeginCapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.EndCapProperty">
            <summary>
            Reference to the EndCapProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRuler.ScaleBreakCapProperty">
            <summary>
            Reference to the ScaleBreakCapProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRulerCapStyle">
            <summary>
            Represents a cap style applied to a shape begin or end point
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRulerCapStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRulerCapStyle.#ctor(Nevron.Nov.Chart.ENCapShape,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRulerCapStyle.#ctor(Nevron.Nov.Chart.ENCapShape,Nevron.Nov.Graphics.NSize,System.Double,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
            <param name="size"></param>
            <param name="offset"></param>
            <param name="fillStyle"></param>
            <param name="strokeStyle"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRulerCapStyle.Shape">
            <summary>
            Gets/sets the cap style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRulerCapStyle.Offset">
            <summary>
            Gets/sets the offset of the cap from the line begin or end point
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRulerCapStyle.Size">
            <summary>
            Gets to sets the ruler cap size
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRulerCapStyle.Fill">
            <summary>
            Gets/sets the fill style of the line cap
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NRulerCapStyle.Stroke">
            <summary>
            Gets/sets the stroke style of the line cap
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.NRulerCapStyleSchema">
            <summary>
            Reference to the NRulerCapStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.ShapeProperty">
            <summary>
            Reference to the ShapeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.OffsetProperty">
            <summary>
            Reference to the OffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.SizeProperty">
            <summary>
            Reference to the SizeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.FillProperty">
            <summary>
            Reference to the FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRulerCapStyle.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScalePartStyle">
            <summary>
            Base class for all styles that produce scale parts
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScalePartStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScalePartStyle.PartId">
            <summary>
            Gets / sets the part id of the range labels attached to this style
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScalePartStyle.NScalePartStyleSchema">
            <summary>
            Reference to the NScalePartStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScalePartStyle.PartIdProperty">
            <summary>
            Reference to the PartIdProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate">
            <summary>
            Inflates the scale on the left and right from the break with a specified amount
            so that the data in the left and right parts of the scale is not obscured by the 
            break.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.#ctor(System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="inflate"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.#ctor(System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="leftInflate"></param>
            <param name="rightInflate"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.LeftInflate">
            <summary>
            Gets or sets the amount of inflate to be applied on left segment end value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.RightInflate">
            <summary>
            Gets or sets the amount of inflate to be applied on right segment begin value
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.defaultLeftInflate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.defaultRightInflate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.NAbsoluteScaleBreakInflateSchema">
            <summary>
            Schema associated with NAbsoluteScaleBreakInflate
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.LeftInflateProperty">
            <summary>
            Reference to the LeftInflateProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAbsoluteScaleBreakInflate.RightInflateProperty">
            <summary>
            Reference to the RightInflateProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRelativeScaleBreakInflate">
            <summary>
            Represents a scale break inflate that will inflate the ranges on the 
            left and right of the scale break with a value relative to the scale 
            break range.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRelativeScaleBreakInflate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRelativeScaleBreakInflate.#ctor(System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="inflatePercent"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NRelativeScaleBreakInflate.#ctor(System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="leftInflatePercent"></param>
            <param name="rightInflatePercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NRelativeScaleBreakInflate.LeftInflatePercent">
            <summary>
            Gets or sets the amount of inflate applied on the left side of the scale in percents
            of the scale break range
            </summary>
            <remarks>
            Values will be clamped to the range [0, 50]
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NRelativeScaleBreakInflate.RightInflatePercent">
            <summary>
            Gets or sets the amount of inflate applied on the right side of the scale in percents
            of the scale break range
            </summary>
            <remarks>
            Values will be clamped to the range [0, 50]
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NRelativeScaleBreakInflate.NRelativeScaleBreakInflateSchema">
            <summary>
            Schema associated with NRelativeScaleBreakInflate
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRelativeScaleBreakInflate.LeftInflatePercentProperty">
            <summary>
            Reference to the LeftInflatePercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRelativeScaleBreakInflate.RightInflatePercentProperty">
            <summary>
            Reference to the RightInflatePercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRelativeScaleBreakInflate.defaultLeftInflatePercent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRelativeScaleBreakInflate.defaultRightInflatePercent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleBreakInflate">
            <summary>
            The base of all scale break inflate derived classes
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakInflate.NScaleBreakInflateSchema">
            <summary>
            Schema associated with NScaleBreakInflate
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAutoScaleBreak">
            <summary>
            Represents an automatic scale break, which will be applied if the 
            data displayed on the axis breaks the threshold factor.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAutoScaleBreak.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAutoScaleBreak.#ctor(System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="thresholdFactor"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NAutoScaleBreak.ThresholdFactor">
            <summary>
            Gets or sets the threshold factor controlling when a break is generated
            </summary>
            <remarks>
            This property accepts values in the range (0, 1]. Smaller values reduce the 
            distance between data points that is requied to generate a scale break, while 
            bigger values increase it. For example if you set the threshold factor to 0.5 
            a scale break will occur if the maximum distance between data points exceeds
            half of the data points range.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAutoScaleBreak.MaxScaleBreakCount">
            <summary>
            Gets or sets the maximum number of breaks that this scale break can generate
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAutoScaleBreak.UseMinValue">
            <summary>
            Whether to use a custom min value to perform the threshold calculation on the data
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAutoScaleBreak.MinValue">
            <summary>
            Gets or sets the custom min value which can replace the data min value if UseMinValue is set to true
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAutoScaleBreak.NAutoScaleBreakSchema">
            <summary>
            Schema associated with NAutoScaleBreakSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAutoScaleBreak.ThresholdFactorProperty">
            <summary>
            Reference to the ThresholdFactorProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAutoScaleBreak.UseMinValueProperty">
            <summary>
            Reference to the UseMinValueProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAutoScaleBreak.MinValueProperty">
            <summary>
            Reference to the MinValueProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAutoScaleBreak.MaxScaleBreakCountProperty">
            <summary>
            Reference to the MaxScaleBreakCountProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NCustomScaleBreak">
            <summary>
            Represents a custom defined scale break
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomScaleBreak.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NCustomScaleBreak.#ctor(Nevron.Nov.Graphics.NRange)">
            <summary>
            Initializer constructor
            </summary>
            <param name="range"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NCustomScaleBreak.Range">
            <summary>
            Gets / sets the range of the scale break
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomScaleBreak.NCustomScaleBreakSchema">
            <summary>
            Schema associated with NCustomScaleBreak
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NCustomScaleBreak.RangeProperty">
            <summary>
            Reference to the RangeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleBreak">
            <summary>
            The base of all scale breaks
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreak.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Style">
            <summary>
            Gets or sets the scale break style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Fill">
            <summary>
            Gets or sets the fill style of the scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Stroke">
            <summary>
            Gets or sets the stroke style of the scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.HorzStep">
            <summary>
            Gets or sets the horizontal step for the zig zag in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.VertStep">
            <summary>
            Gets or sets the vertical step for the zig zag in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Pattern">
            <summary>
            Gets or sets the pattern of the scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.PositionMode">
            <summary>
            Gets or sets the scale break position mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.PercentRange">
            <summary>
            Gets or sets the allowed scale break split range.
            </summary>
            <remarks>
            By default this property is set to [10, 90]
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Percent">
            <summary>
            Gets or sets the segment split percent, when a scale break is about to split it
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.InflateMode">
            <summary>
            Gets or sets the scale break inflate mode
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.LeftInflate">
            <summary>
            Gets or sets the amount of inflate to be applied on left segment end value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.RightInflate">
            <summary>
            Gets or sets the amount of inflate to be applied on right segment begin value
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.LeftInflatePercent">
            <summary>
            Gets or sets the amount of inflate applied on the left side of the scale in percents
            of the scale break range
            </summary>
            <remarks>
            Values will be clamped to the range [0, 50]
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.RightInflatePercent">
            <summary>
            Gets or sets the amount of inflate applied on the right side of the scale in percents
            of the scale break range
            </summary>
            <remarks>
            Values will be clamped to the range [0, 50]
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreak.Length">
            <summary>
            Gets / sets the length of the axis break along the axis ruler
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.NScaleBreakSchema">
            <summary>
            Schema associated with NScaleBreak
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.StyleProperty">
            <summary>
            Reference to the StyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.FillProperty">
            <summary>
            Reference to the FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.LengthProperty">
            <summary>
            Reference to the LengthProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.HorzStepProperty">
            <summary>
            Reference to the HorzStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.VertStepProperty">
            <summary>
            Reference to the VertStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.PatternProperty">
            <summary>
            Reference to the PatternProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.PositionModeProperty">
            <summary>
            Reference to the PositionModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.PercentProperty">
            <summary>
            Reference to the PercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.PercentRangeProperty">
            <summary>
            Reference to the PercentRangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.InflateModeProperty">
            <summary>
            Reference to the InflateModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.LeftInflateProperty">
            <summary>
            Reference to the LeftInflateProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.RightInflateProperty">
            <summary>
            Reference to the RightInflateProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.LeftInflatePercentProperty">
            <summary>
            Reference to the LeftInflatePercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.RightInflatePercentProperty">
            <summary>
            Reference to the RightInflatePercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.defaultLeftInflate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.defaultRightInflate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.defaultLeftInflatePercent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreak.defaultRightInflatePercent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleBreakCollection">
            <summary>
            Represents a collection of scale breaks
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreakCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakCollection.NScaleBreakCollectionSchema">
            <summary>
            
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NContentScaleBreakPosition">
            <summary>
            Represents a scale break position, which is determined according to the 
            amount of data left on the sides of the scale break.
            </summary>
            <remarks>
            For example suppose you have 10 data items and the scale break is above
            7 of them and below 3 of them. In this case the scale break position will 
            be 70 percent from the scale length as this reflects the amount of data 
            present in the left and right (top and bottom) parts of the scale. You may limit 
            this percent by using the PercentRange property (by default set to [10, 90]). This
            is needed in order to avoid extreme cases where a scale break will be driven 
            too close to the scale begin or end values thus diminishing the readability of the chart.
            </remarks>
        </member>
        <member name="M:Nevron.Nov.Chart.NContentScaleBreakPosition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NContentScaleBreakPosition.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="minPercent"></param>
            <param name="maxPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NContentScaleBreakPosition.PercentRange">
            <summary>
            Gets or sets the allowed scale break split range.
            </summary>
            <remarks>
            By default this property is set to [10, 90]
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NContentScaleBreakPosition.NContentScaleBreakPositionSchema">
            <summary>
            Schema associated with NContentScaleBreakPosition
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NContentScaleBreakPosition.PercentRangeProperty">
            <summary>
            Reference to the PercentRangeProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPercentScaleBreakPosition">
            <summary>
            Represents a scale break position which is determined in percentages relative to the
            scale being split by the scale break. 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPercentScaleBreakPosition.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPercentScaleBreakPosition.#ctor(System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="percent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPercentScaleBreakPosition.Percent">
            <summary>
            Gets or sets the segment split percent, when a scale break is about to split it
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPercentScaleBreakPosition.NPercentScaleBreakPositionSchema">
            <summary>
            Schema associated with NPercentScaleBreakPosition
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPercentScaleBreakPosition.PercentProperty">
            <summary>
            Reference to the PercentProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeScaleBreakPosition">
            <summary>
            Represents a scale break position which is determined relative to the
            range of the scale break in scale coordinates. 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeScaleBreakPosition.NRangeScaleBreakPositionSchema">
            <summary>
            Schema associated with NRangeScaleBreakPosition
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleBreakPosition">
            <summary>
            The base of all scale break position classes controlling how the scale break is
            positioned on the axis
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakPosition.NScaleBreakPositionSchema">
            <summary>
            Schema associated with NScaleBreakPosition
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NLineScaleBreakStyle">
            <summary>
            Represents a scale break that is visualized as two parallel, straight lines
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineScaleBreakStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="strokeStyle"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NLineScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill"></param>
            <param name="strokeStyle"></param>
            <param name="length"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NLineScaleBreakStyle.NLineScaleBreakStyleSchema">
            <summary>
            Schema associated with NLineScaleBreakStyle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NPatternScaleBreakStyle">
            <summary>
            The base of all scale break styles that posses a pattern for drawing (horizontal and vertical step)
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPatternScaleBreakStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NPatternScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPatternScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPatternScaleBreakStyle.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="horzStep"></param>
            <param name="vertStep"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NPatternScaleBreakStyle.#ctor(Nevron.Nov.Chart.ENScaleBreakPattern,System.Double,System.Double,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="style"></param>
            <param name="horzStep"></param>
            <param name="vertStep"></param>
            <param name="strokeStyle"></param>
            <param name="length"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NPatternScaleBreakStyle.HorzStep">
            <summary>
            Gets or sets the horizontal step for the zig zag in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPatternScaleBreakStyle.VertStep">
            <summary>
            Gets or sets the vertical step for the zig zag in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NPatternScaleBreakStyle.Pattern">
            <summary>
            Gets or sets the pattern of the scale break
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPatternScaleBreakStyle.NPatternScaleBreakStyleSchema">
            <summary>
            Schema associated with NPatternScaleBreakStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPatternScaleBreakStyle.HorzStepProperty">
            <summary>
            Reference to the HorzStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPatternScaleBreakStyle.VertStepProperty">
            <summary>
            Reference to the VertStepProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NPatternScaleBreakStyle.PatternProperty">
            <summary>
            Reference to the VertStepProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleBreakStyle">
            <summary>
            The base of all scale break styles defining the appearance of an axis scale break
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreakStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="strokeStyle"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreakStyle.Fill">
            <summary>
            Gets or sets the fill style of the scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreakStyle.Stroke">
            <summary>
            Gets or sets the stroke style of the scale break
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleBreakStyle.Length">
            <summary>
            Gets / sets the length of the axis break along the axis ruler
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleBreakStyle.InitFrom(Nevron.Nov.Chart.NScaleBreakStyle)">
            <summary>
            Copies the relevant styles from the passed style
            </summary>
            <param name="scaleBreakStyle"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakStyle.NScaleBreakStyleSchema">
            <summary>
            Schema associated with NScaleBreakStyle
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakStyle.FillProperty">
            <summary>
            Reference to the FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakStyle.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleBreakStyle.LengthProperty">
            <summary>
            Reference to the LengthProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NWaveScaleBreakStyle">
            <summary>
            Represents a scale break that is visualized as a wave
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWaveScaleBreakStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWaveScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NWaveScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NWaveScaleBreakStyle.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="horzStep"></param>
            <param name="vertStep"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="T:Nevron.Nov.Chart.NZigZagScaleBreakStyle">
            <summary>
            Represents a zig zag scale break
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NZigZagScaleBreakStyle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NZigZagScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NZigZagScaleBreakStyle.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NZigZagScaleBreakStyle.#ctor(System.Double,System.Double,Nevron.Nov.Graphics.NStroke,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="horzStep"></param>
            <param name="vertStep"></param>
            <param name="stroke"></param>
            <param name="length"></param>
        </member>
        <member name="F:Nevron.Nov.Chart.NZigZagScaleBreakStyle.NZigZagScaleBreakStyleSchema">
            <summary>
            Schema associated with NZigZagScaleBreakStyle
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleSection">
            <summary>
            Represents a range of values on the scale that alters the default styles for scale and wall decorations
            if their value falls inside the section range.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleSection.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.Range">
            <summary>
            Gets / sets the range of values on the axis affected by this section style
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.RangeFill">
            <summary>
            Gets or sets the fill of the axis section when it is displayed on the walls
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MajorTickFill">
            <summary>
            Gets or sets a value to replace the major tick fill style if the major 
            ticks falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MajorTickStroke">
            <summary>
            Gets or sets a value to replace the major ticks stroke style if the major 
            tick falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MinorTickStroke">
            <summary>
            Gets or sets a value to replace the minor tick stroke style if the minor 
            ticks falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MinorTickFill">
            <summary>
            Gets or sets a value to replace the minor tick fill style if the minor 
            ticks falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MajorGridStroke">
            <summary>
            Gets or sets a value to replace the major grid lines stroke style if the 
            major grid line falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.MinorGridStroke">
            <summary>
            Gets or sets a value to replace the major grid lines stroke style if the 
            major grid line falls in the section range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleSection.LabelTextStyle">
            <summary>
            Gets or sets a value to replace the scale labels text style if the 
            label value falls in the section range.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.NScaleSectionSchema">
            <summary>
            Schema associated with NScaleSection
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.RangeProperty">
            <summary>
            Reference to the RangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.RangeFillProperty">
            <summary>
            Reference to the RangeFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.ShowRangeAtBackgroundProperty">
            <summary>
            Reference to the ShowRangeAtBackgroundProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MajorTickFillProperty">
            <summary>
            Reference to the MajorTickFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MajorTickStrokeProperty">
            <summary>
            Reference to the MajorTickStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MinorTickStrokeProperty">
            <summary>
            Reference to the MinorTickStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MinorTickFillProperty">
            <summary>
            Reference to the MinorTickFillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MajorGridStrokeProperty">
            <summary>
            Reference to the MajorGridStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.MinorGridStrokeProperty">
            <summary>
            Reference to the MinorGridStrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSection.LabelTextStyleProperty">
            <summary>
            Reference to the LabelTextStyleProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleSectionCollection">
            <summary>
            Represents a collection of scale section objects
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleSectionCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleSectionCollection.NScaleSectionCollectionSchema">
            <summary>
            Schema associated with NScaleSectionCollectionSchema
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleStrip">
            <summary>
            Represents an scale interlace style. Interlace styles are drawn on the chart walls and
            are synchronized with the axis major ticks.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleStrip.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleStrip.#ctor(Nevron.Nov.Graphics.NFill)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill">The fill style.</param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleStrip.#ctor(Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializer constructor
            </summary>
            <param name="fill">The fill .</param>
            <param name="stroke">The stroke .</param>
            <param name="infinite">if set to <c>true</c> [infinite].</param>
            <param name="begin">The begin.</param>
            <param name="end">The end.</param>
            <param name="interval">The interval.</param>
            <param name="length">The length.</param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.DecorationRange">
            <summary>
            Gets or sets a range sampler provider controlling how interlace stripes are generated
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Fill">
            <summary>
            Controls the fill style of the interlace style.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.ExtendInChartArea">
            <summary>
            Whether to extend the stripline in the chart area
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Stroke">
            <summary>
            Controls the stroke style of the interlace style.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Begin">
            <summary>
            The begin view range.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Infinite">
            <summary>
            Whether or not this style is repeated infinitely along the chart wall or not.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.End">
            <summary>
            The end row or column of this interlace style if Infinite is set to false.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Length">
            <summary>
            The length in major ticks of each interlace stripe.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Interval">
            <summary>
            The interval (gap) between two consecutive interlace stripes.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleStrip.Interlaced">
            <summary>
            Gets or sets a value indicating whether this strip style will be interlaced (synchronized with the view order of the range sampler)
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.NScaleStripSchema">
            <summary>
            Schema associated with NScaleStripSchema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.FillProperty">
            <summary>
            Reference to the FillProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.StrokeProperty">
            <summary>
            Reference to the StrokeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.DecorationRangeProperty">
            <summary>
            Reference to the DecorationRangeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.ExtendInChartAreaProperty">
            <summary>
            Reference to the ExtendInChartAreaProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.InfiniteProperty">
            <summary>
            Reference to the InfiniteProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.InterlacedProperty">
            <summary>
            Reference to the InterlacedProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.BeginProperty">
            <summary>
            Reference to the BeginProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.EndProperty">
            <summary>
            Reference to the EndProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.IntervalProperty">
            <summary>
            Reference to the IntervalProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStrip.LengthProperty">
            <summary>
            Reference to the LengthProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleStripCollection">
            <summary>
            Represents a collection of scale strip objects
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleStripCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleStripCollection.NScaleStripCollectionSchema">
            <summary>
            Schema associated with NScaleStripCollection
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleTicks">
            <summary>
            Controls the appearance of scale ticks
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleTicks.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleTicks.#ctor(Nevron.Nov.Graphics.NStroke,Nevron.Nov.Graphics.NSize,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="stroke"></param>
            <param name="size"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleTicks.#ctor(Nevron.Nov.Chart.ENScaleValueMarkerShape,Nevron.Nov.Graphics.NFill,Nevron.Nov.Graphics.NStroke,Nevron.Nov.Graphics.NSize,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="shape"></param>
            <param name="fill"></param>
            <param name="stroke"></param>
            <param name="size"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Visible">
            <summary>
            Gets or sets whether the tick is visible
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Shape">
            <summary>
            Gets or set the shape of the scale ticks
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Stroke">
            <summary>
            Gets or sets the stroke of the tick lines
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Fill">
            <summary>
            Gets or sets the fill of the ticks
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Offset">
            <summary>
            Gets / sets the offset of the ticks in their scale level
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Length">
            <summary>
            Gets or sets the length of the ticks 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Width">
            <summary>
            Gets or sets the length of the ticks 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTicks.Size">
            <summary>
            Gets / sets the size of te ticks
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.NScaleTicksSchema">
            <summary>
            Schema associated with NScaleTicks
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.VisibleProperty">
            <summary>
            Reference to the Visible property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.ShapeProperty">
            <summary>
            Reference to the Shape property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.OffsetProperty">
            <summary>
            Reference to the Offset property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.SizeProperty">
            <summary>
            Reference to the Size property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.FillProperty">
            <summary>
            Reference to the Fill property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTicks.StrokeProperty">
            <summary>
            Reference to the Stroke property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NScaleTitle">
            <summary>
            Controls the appearance of the scale title 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NScaleTitle.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.Angle">
            <summary>
            Gets / sets the angle of the axis title
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.Text">
            <summary>
            Gets / sets the text of the axis title
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.ContentAlignment">
            <summary>
            Gets or sets the content alignment of the axis title
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.RulerAlignment">
            <summary>
            Gets or sets the alignment of the title relative to the axis ruler.
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.RulerOffset">
            <summary>
            Gets or sets the offset of the label from it's anchor point on the axis ruler
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.Offset">
            <summary>
            Specifies the offset of the title from the labels in the scale in NLength format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NScaleTitle.TextStyle">
            <summary>
            Gets or sets the NTextStyle object applied to the scale title text.
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.NScaleTitleSchema">
            <summary>
            Schema associated with 
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.AngleProperty">
            <summary>
            Reference to the AngleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.TextStyleProperty">
            <summary>
            Reference to the TextStyleProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.TextProperty">
            <summary>
            Reference to the TextProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.RulerAlignmentProperty">
            <summary>
            Reference to the RulerAlignmentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.RulerOffsetProperty">
            <summary>
            Reference to the RulerOffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.OffsetProperty">
            <summary>
            Reference to the OffsetProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NScaleTitle.ContentAlignmentProperty">
            <summary>
            Reference to the ContentAlignmentProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisMajorTickSnapper">
            <summary>
            Snaps values to the major ticks of the axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisMajorTickSnapper.#ctor">
            <summary>
            Default construtor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisMajorTickSnapper.SnapValue(System.Double)">
            <summary>
            Snaps the value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisMajorTickSnapper.NAxisMajorTickSnapperSchema">
            <summary>
            Schema associated with NAxisMajorTickSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisMinorTickSnapper">
            <summary>
            Snaps values to the minor ticks of the axis
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisMinorTickSnapper.#ctor">
            <summary>
            Default construtor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisMinorTickSnapper.SnapValue(System.Double)">
            <summary>
            Snaps the value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisMinorTickSnapper.NAxisMinorTickSnapperSchema">
            <summary>
            Schema associated with NAxisMinorTickSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisRulerClampSnapper">
            <summary>
            Clamps values to the axis min / max values
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisRulerClampSnapper.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisRulerClampSnapper.SnapValue(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisRulerClampSnapper.NAxisRulerClampSnapperSchema">
            <summary>
            Schema associated with NAxisRulerClampSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisRulerMinMaxSnapper">
            <summary>
            Snaps values to the axis min / max values
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisRulerMinMaxSnapper.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisRulerMinMaxSnapper.SnapValue(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisRulerMinMaxSnapper.SnapRange(Nevron.Nov.Graphics.NRange)">
            <summary>
            
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisRulerMinMaxSnapper.NAxisRulerMinMaxSnapperSchema">
            <summary>
            Schema associated with NAxisRulerMinMaxSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisValueSnapper">
            <summary>
            The base for all scale value snapper
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisValueSnapper.#ctor">
            <summary>
            Initializer constructor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisValueSnapper.NAxisValueSnapperSchema">
            <summary>
            Schema associated with NAxisValueSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NDateTimeValueSnapper">
            <summary>
            Represents a value snapper that snaps date/time values to the nearest date time step from a specified date/time origin.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeValueSnapper.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeValueSnapper.#ctor(Nevron.Nov.NDateTimeSpan)">
            <summary>
            Initializer constructor
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeValueSnapper.#ctor(System.DateTime,Nevron.Nov.NDateTimeSpan)">
            <summary>
            Initializer constructor
            </summary>
            <param name="origin"></param>
            <param name="step"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeValueSnapper.Step">
            <summary>
            Gets or sets the snapping step
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NDateTimeValueSnapper.Origin">
            <summary>
            Gets or sets the sampling origin
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NDateTimeValueSnapper.SnapValue(System.Double)">
            <summary>
            Snaps a value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeValueSnapper.NDateTimeValueSnapperSchema">
            <summary>
            Reference to the NDateTimeValueSnapper schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeValueSnapper.OriginProperty">
            <summary>
            Reference to the Origin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NDateTimeValueSnapper.StepProperty">
            <summary>
            Reference to the Step property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NNumericValueSnapper">
            <summary>
            Represents a value snapper that snaps values to the nearest step from a specified origin.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericValueSnapper.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericValueSnapper.#ctor(System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericValueSnapper.#ctor(System.Double,System.Double)">
            <summary>
            Initializer constructor
            </summary>
            <param name="origin"></param>
            <param name="step"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericValueSnapper.Step">
            <summary>
            Gets or sets the snapping step
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NNumericValueSnapper.Origin">
            <summary>
            Gets or sets the snapping origin
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NNumericValueSnapper.SnapValue(System.Double)">
            <summary>
            Snaps a value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericValueSnapper.NNumericValueSnapperSchema">
            <summary>
            Reference to the NNumericValueSnapper schema
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericValueSnapper.OriginProperty">
            <summary>
            Reference to the Origin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NNumericValueSnapper.StepProperty">
            <summary>
            Reference to the Step property
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NValueSnapper">
            <summary>
            The base for all values snappers
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueSnapper.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueSnapper.SnapValue(System.Double)">
            <summary>
            Snaps the value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NValueSnapper.SnapRange(Nevron.Nov.Graphics.NRange)">
            <summary>
            Snaps a range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="F:Nevron.Nov.Chart.NValueSnapper.NValueSnapperSchema">
            <summary>
            Schema associated with NValueSnapper
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NWallDecorationFactory">
            <summary>
            The base of all wall decoration factories
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NWallDecorationFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeInfo">
            <summary>
            Range info
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeInfo.m_Unit">
            <summary>
            The unit that generated the range
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NRangeInfo.m_Range">
            <summary>
            The currently decorated range
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NRangeSampler">
            <summary>
            The base of all range samplers
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeSampler.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeSampler.#ctor(Nevron.Nov.Chart.NRangeSampler)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NRangeSampler.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NTimeline">
            <summary>
            Represents a timeline as a sequence working and non working intervals
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimeline.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimeline.IsEmptyAt(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimeline.AddTimeSpan(System.DateTime,Nevron.Nov.NDateTimeSpan)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimeline.Transform(System.Int64)">
            <summary>
            Transforms the ticks to the number of ticks elapsed, without the empty ticks
            </summary>
            <param name="ticks"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Chart.NTimeline.InverseTransform(System.Int64)">
            <summary>
            Inverse transform non empty ticks to empty ticks + non empty ticks
            </summary>
            <param name="ticks"></param>
            <returns></returns>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisAnchor">
            <summary>
            The base of all axis anchors.
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisAnchor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisAnchor.#ctor(System.Single,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="beginPercent"></param>
            <param name="endPercent"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisAnchor.ScaleOrientation">
            <summary>
            Gets or sets the scale orientation. 
            </summary>
            <remarks>
            Left orientation means that scale decorations will be on the left side
            of the ruler line. Right means the opposite.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisAnchor.BeginPercent">
            <summary>
            Specifies the begin of the axis scale in percents of the axis length.
            </summary>
            <remarks>
            By default 0. Can be very useful if you want to split the chart.
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisAnchor.EndPercent">
            <summary>
            Specifies the end of the axis scale in percents of the axis length. 
            </summary>
            <remarks>
            By default 100. Can be very useful if you want to split the chart.
            </remarks>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisAnchor.NAxisAnchorSchema">
            <summary>
            Schema associated with NAxisAnchor
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisAnchor.BeginPercentProperty">
            <summary>
            Reference to the BeginPercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisAnchor.EndPercentProperty">
            <summary>
            Reference to the EndPercentProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisAnchor.ScaleOrientationProperty">
            <summary>
            Reference to the ScaleOrientationProperty
            </summary>
        </member>
        <member name="T:Nevron.Nov.Chart.NAxisBase">
            <summary>
            Base class for all axes
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.Visible">
            <summary>
            Shortcut property for setting the visibility mode property
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.VisibilityMode">
            <summary>
            Gets or sets the visibility mode
            </summary>
            <remarks>
            This property set the VisibilityMode to Visible to Hidden depending on the passed boolean value
            </remarks>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.Scale">
            <summary>
            Gets / sets the axis scale 
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.RulerRangeBegin">
            <summary>
            Gets the page range begin
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.RulerRangeEnd">
            <summary>
            Gets the page range end
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisBase.InvalidateMeasure(System.Object)">
            <summary>
            Invalidates teh measure
            </summary>
            <param name="hint"></param>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.IsMeasureValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Nevron.Nov.Chart.NAxisBase.IsPooledForMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Nov.Chart.NAxisBase.ValidateMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisBase.NAxisBaseSchema">
            <summary>
            Schema assoicated with NAxisBase
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisBase.ScaleChild">
            <summary>
            Reference to the ScaleChild
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisBase.VisibilityModeProperty">
            <summary>
            Reference to the VisibilityModeProperty
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisBase.RulerRangeBeginProperty">
            <summary>
            Reference to the RulerRangeBegin property
            </summary>
        </member>
        <member name="F:Nevron.Nov.Chart.NAxisBase.RulerRangeEndProperty">
            <summary>
            Reference to the RulerRangeEnd property
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.dbUG.IsGreaterThan(Nevron.Nov.Internal.jYtG,Nevron.Nov.Internal.jYtG)">
            <summary>
            
            </summary>
            <param name="EbUG"></param>
            <param name="fbUG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.UGMG.Equals(System.Object)">
            <summary>
            Returns true if the objects are equal
            </summary>
            <param name="AIMG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.UGMG.GetHashCode">
            <summary>
            Overriden to avoid warnings
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nevron.Nov.Internal.jdxG.Item(System.Int32)">
            <summary>
            Gets or sets the point at index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.dYpG.GetGeometryBounds">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.dYpG.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="hYpG"></param>
        </member>
        <member name="M:Nevron.Nov.Internal.QYpG.GetGeometryBounds">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.QYpG.OnPrePaint(Nevron.Nov.Dom.NPaintVisitor)">
            <summary>
            
            </summary>
            <param name="tYpG"></param>
        </member>
        <member name="P:Nevron.Nov.Internal.dtlG.Name">
            <summary>
            Gets the name of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.dtlG.Extensions">
            <summary>
            Gets the extnesion of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.dtlG.Mime">
            <summary>
            Gets the mime type 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.dtlG.OnUse">
            <summary>
            Called when the format is used
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.dtlG.LoadFromStreamCore(System.IO.Stream,Nevron.Nov.Chart.Formats.NChartLoadSettings,Nevron.Nov.NProgress)">
            <summary>
            Loads the document from the specified stream.
            </summary>
            <param name="ItlG"></param>
            <param name="jtlG"></param>
            <param name="KtlG"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Nevron.Nov.Internal.dtlG.SaveToStreamCore(Nevron.Nov.Chart.NChartDocument,System.IO.Stream,Nevron.Nov.Chart.Formats.NChartSaveSettings,Nevron.Nov.NProgress)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="ltlG"></param>
            <param name="MtlG"></param>
            <param name="ntlG"></param>
            <param name="OtlG"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Nevron.Nov.Internal.QtlG.Name">
            <summary>
            Gets the name of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.QtlG.Extensions">
            <summary>
            Gets the extnesion of the format
            </summary>
        </member>
        <member name="P:Nevron.Nov.Internal.QtlG.Mime">
            <summary>
            Gets the mime type 
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.QtlG.OnUse">
            <summary>
            Called when the format is used
            </summary>
        </member>
        <member name="M:Nevron.Nov.Internal.QtlG.LoadFromStreamCore(System.IO.Stream,Nevron.Nov.Chart.Formats.NChartLoadSettings,Nevron.Nov.NProgress)">
            <summary>
            
            </summary>
            <param name="StlG"></param>
            <param name="ttlG"></param>
            <param name="UtlG"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Nevron.Nov.Internal.QtlG.SaveToStreamCore(Nevron.Nov.Chart.NChartDocument,System.IO.Stream,Nevron.Nov.Chart.Formats.NChartSaveSettings,Nevron.Nov.NProgress)">
            <summary>
            
            </summary>
            <param name="vtlG"></param>
            <param name="WtlG"></param>
            <param name="xtlG"></param>
            <param name="YtlG"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Nevron.Nov.Internal.YGQG.Equals(System.Object)">
            <summary>
            Returns true if the objects are equal
            </summary>
            <param name="EhQG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.YGQG.GetHashCode">
            <summary>
            Overriden to avoid warnings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.hhQG.Equals(System.Object)">
            <summary>
            Returns true if the objects are equal
            </summary>
            <param name="lhQG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.hhQG.GetHashCode">
            <summary>
            Overriden to avoid warnings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.phQG.Equals(System.Object)">
            <summary>
            Returns true if the objects are equal
            </summary>
            <param name="vhQG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.phQG.GetHashCode">
            <summary>
            Overriden to avoid warnings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.jQSG.Nevron#Nov#DataStructures#INFilter{Nevron#Nov#Internal#GrSG}#Filter(Nevron.Nov.Internal.GrSG)">
            <summary>
            Overriden to return true if the specified char token falls in the character set ranges
            </summary>
            <param name="MQSG">char token (NCharToken)</param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.vvlG.Nevron#Nov#DataStructures#INGreaterThanComparer{Nevron#Nov#NKeyValuePair{Nevron#Nov#Internal#YvlG,Nevron#Nov#Internal#pUlG}}#IsGreaterThan(Nevron.Nov.NKeyValuePair{Nevron.Nov.Internal.YvlG,Nevron.Nov.Internal.pUlG},Nevron.Nov.NKeyValuePair{Nevron.Nov.Internal.YvlG,Nevron.Nov.Internal.pUlG})">
            <summary>
            Returns true if a is greater than b
            </summary>
            <param name="WvlG"></param>
            <param name="xvlG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.MdnG.Filter(System.Double)">
            <summary>
            Returns true if the object is in the specified double range
            </summary>
            <param name="pdnG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.WdnG.Filter(System.Int64)">
            <summary>
            Returns true if the object is in the specified double range
            </summary>
            <param name="AEnG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.IEnG.Filter(System.Int64)">
            <summary>
            Filters the specified object
            </summary>
            <param name="lEnG"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.AKtG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.fKtG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.xOQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.ppQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.YpQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.MQQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.ArQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.nrQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.vrQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.SSQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.YSQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.GtQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.ttQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.GUQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.pUQG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.KYvG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.MbWG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.YdWG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.dfWG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.hGWG.DeepClone">
            <summary>
            Creates an exact replica of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Nov.Internal.WptG.DeepClone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
